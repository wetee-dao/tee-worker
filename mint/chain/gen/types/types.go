package types

import (
	"encoding/json"
	"fmt"
	scale "github.com/centrifuge/go-substrate-rpc-client/v4/scale"
	types "github.com/centrifuge/go-substrate-rpc-client/v4/types"
	codec "github.com/centrifuge/go-substrate-rpc-client/v4/types/codec"
)

const encMeta = ""

var Meta types.Metadata
var _ = codec.DecodeFromHex(encMeta, &Meta)

// Generated pallet_balances_types_AccountData with id={{false [5]}}
type AccountData struct {
	// Field 0 with TypeId=6
	Free types.U128
	// Field 1 with TypeId=6
	Reserved types.U128
	// Field 2 with TypeId=6
	Frozen types.U128
	// Field 3 with TypeId=7
	Flags types.U128
}

// Generated frame_system_AccountInfo with id={{false [3]}}
type AccountInfo struct {
	// Field 0 with TypeId=4
	Nonce uint64
	// Field 1 with TypeId=8
	Consumers uint32
	// Field 2 with TypeId=8
	Providers uint32
	// Field 3 with TypeId=8
	Sufficients uint32
	// Field 4 with TypeId=5
	Data AccountData
}

// Generated sp_weights_weight_v2_Weight with id={{false [10]}}
type Weight struct {
	// Field 0 with TypeId=11
	RefTime types.UCompact
	// Field 1 with TypeId=11
	ProofSize types.UCompact
}

// Generated frame_support_dispatch_PerDispatchClass with id={{false [9]}}
type PerDispatchClass struct {
	// Field 0 with TypeId=10
	Normal Weight
	// Field 1 with TypeId=10
	Operational Weight
	// Field 2 with TypeId=10
	Mandatory Weight
}

// Generated SpRuntimeGenericDigestDigestItem with id=16
type DigestItem struct {
	IsPreRuntime                   bool
	AsPreRuntimeConsensusEngineId0 [4]byte
	AsPreRuntimeVecu81             []byte
	IsConsensus                    bool
	AsConsensusConsensusEngineId0  [4]byte
	AsConsensusVecu81              []byte
	IsSeal                         bool
	AsSealConsensusEngineId0       [4]byte
	AsSealVecu81                   []byte
	IsOther                        bool
	AsOtherField0                  []byte
	IsRuntimeEnvironmentUpdated    bool
}

func (ty DigestItem) Encode(encoder scale.Encoder) (err error) {
	if ty.IsPreRuntime {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsPreRuntimeConsensusEngineId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsPreRuntimeVecu81)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsConsensus {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsConsensusConsensusEngineId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsConsensusVecu81)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSeal {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSealConsensusEngineId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSealVecu81)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsOther {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsOtherField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsRuntimeEnvironmentUpdated {
		err = encoder.PushByte(8)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *DigestItem) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 6:
		ty.IsPreRuntime = true
		err = decoder.Decode(&ty.AsPreRuntimeConsensusEngineId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsPreRuntimeVecu81)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsConsensus = true
		err = decoder.Decode(&ty.AsConsensusConsensusEngineId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsConsensusVecu81)
		if err != nil {
			return err
		}
		return
	case 5:
		ty.IsSeal = true
		err = decoder.Decode(&ty.AsSealConsensusEngineId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSealVecu81)
		if err != nil {
			return err
		}
		return
	case 0:
		ty.IsOther = true
		err = decoder.Decode(&ty.AsOtherField0)
		if err != nil {
			return err
		}
		return
	case 8:
		ty.IsRuntimeEnvironmentUpdated = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *DigestItem) Variant() (uint8, error) {
	if ty.IsPreRuntime {
		return 6, nil
	}
	if ty.IsConsensus {
		return 4, nil
	}
	if ty.IsSeal {
		return 5, nil
	}
	if ty.IsOther {
		return 0, nil
	}
	if ty.IsRuntimeEnvironmentUpdated {
		return 8, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty DigestItem) MarshalJSON() ([]byte, error) {
	if ty.IsPreRuntime {
		m := map[string]interface{}{"DigestItem::PreRuntime": map[string]interface{}{
			"AsPreRuntimeConsensusEngineId0": ty.AsPreRuntimeConsensusEngineId0,
			"AsPreRuntimeVecu81":             ty.AsPreRuntimeVecu81,
		}}
		return json.Marshal(m)
	}
	if ty.IsConsensus {
		m := map[string]interface{}{"DigestItem::Consensus": map[string]interface{}{
			"AsConsensusConsensusEngineId0": ty.AsConsensusConsensusEngineId0,
			"AsConsensusVecu81":             ty.AsConsensusVecu81,
		}}
		return json.Marshal(m)
	}
	if ty.IsSeal {
		m := map[string]interface{}{"DigestItem::Seal": map[string]interface{}{
			"AsSealConsensusEngineId0": ty.AsSealConsensusEngineId0,
			"AsSealVecu81":             ty.AsSealVecu81,
		}}
		return json.Marshal(m)
	}
	if ty.IsOther {
		m := map[string]interface{}{"DigestItem::Other": ty.AsOtherField0}
		return json.Marshal(m)
	}
	if ty.IsRuntimeEnvironmentUpdated {
		return json.Marshal("DigestItem::RuntimeEnvironmentUpdated")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated FrameSystemPhase with id=63
type Phase struct {
	IsApplyExtrinsic       bool
	AsApplyExtrinsicField0 uint32
	IsFinalization         bool
	IsInitialization       bool
}

func (ty Phase) Encode(encoder scale.Encoder) (err error) {
	if ty.IsApplyExtrinsic {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsApplyExtrinsicField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsFinalization {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsInitialization {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *Phase) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsApplyExtrinsic = true
		err = decoder.Decode(&ty.AsApplyExtrinsicField0)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsFinalization = true
		return
	case 2:
		ty.IsInitialization = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *Phase) Variant() (uint8, error) {
	if ty.IsApplyExtrinsic {
		return 0, nil
	}
	if ty.IsFinalization {
		return 1, nil
	}
	if ty.IsInitialization {
		return 2, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty Phase) MarshalJSON() ([]byte, error) {
	if ty.IsApplyExtrinsic {
		m := map[string]interface{}{"Phase::ApplyExtrinsic": ty.AsApplyExtrinsicField0}
		return json.Marshal(m)
	}
	if ty.IsFinalization {
		return json.Marshal("Phase::Finalization")
	}
	if ty.IsInitialization {
		return json.Marshal("Phase::Initialization")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated FrameSupportDispatchDispatchClass with id=23
type DispatchClass struct {
	IsNormal      bool
	IsOperational bool
	IsMandatory   bool
}

func (ty DispatchClass) Encode(encoder scale.Encoder) (err error) {
	if ty.IsNormal {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsOperational {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsMandatory {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *DispatchClass) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsNormal = true
		return
	case 1:
		ty.IsOperational = true
		return
	case 2:
		ty.IsMandatory = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *DispatchClass) Variant() (uint8, error) {
	if ty.IsNormal {
		return 0, nil
	}
	if ty.IsOperational {
		return 1, nil
	}
	if ty.IsMandatory {
		return 2, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty DispatchClass) MarshalJSON() ([]byte, error) {
	if ty.IsNormal {
		return json.Marshal("DispatchClass::Normal")
	}
	if ty.IsOperational {
		return json.Marshal("DispatchClass::Operational")
	}
	if ty.IsMandatory {
		return json.Marshal("DispatchClass::Mandatory")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated FrameSupportDispatchPays with id=24
type Pays struct {
	IsYes bool
	IsNo  bool
}

func (ty Pays) Encode(encoder scale.Encoder) (err error) {
	if ty.IsYes {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsNo {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *Pays) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsYes = true
		return
	case 1:
		ty.IsNo = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *Pays) Variant() (uint8, error) {
	if ty.IsYes {
		return 0, nil
	}
	if ty.IsNo {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty Pays) MarshalJSON() ([]byte, error) {
	if ty.IsYes {
		return json.Marshal("Pays::Yes")
	}
	if ty.IsNo {
		return json.Marshal("Pays::No")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated frame_support_dispatch_DispatchInfo with id={{false [22]}}
type DispatchInfo struct {
	// Field 0 with TypeId=10
	Weight Weight
	// Field 1 with TypeId=23
	Class DispatchClass
	// Field 2 with TypeId=24
	PaysFee Pays
}

// Generated sp_runtime_ModuleError with id={{false [26]}}
type ModuleError struct {
	// Field 0 with TypeId=2
	Index byte
	// Field 1 with TypeId=17
	Error [4]byte
}

// Generated SpRuntimeTokenError with id=27
type TokenError struct {
	IsFundsUnavailable bool
	IsOnlyProvider     bool
	IsBelowMinimum     bool
	IsCannotCreate     bool
	IsUnknownAsset     bool
	IsFrozen           bool
	IsUnsupported      bool
	IsCannotCreateHold bool
	IsNotExpendable    bool
	IsBlocked          bool
}

func (ty TokenError) Encode(encoder scale.Encoder) (err error) {
	if ty.IsFundsUnavailable {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsOnlyProvider {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsBelowMinimum {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsCannotCreate {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUnknownAsset {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsFrozen {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUnsupported {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsCannotCreateHold {
		err = encoder.PushByte(7)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsNotExpendable {
		err = encoder.PushByte(8)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsBlocked {
		err = encoder.PushByte(9)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *TokenError) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsFundsUnavailable = true
		return
	case 1:
		ty.IsOnlyProvider = true
		return
	case 2:
		ty.IsBelowMinimum = true
		return
	case 3:
		ty.IsCannotCreate = true
		return
	case 4:
		ty.IsUnknownAsset = true
		return
	case 5:
		ty.IsFrozen = true
		return
	case 6:
		ty.IsUnsupported = true
		return
	case 7:
		ty.IsCannotCreateHold = true
		return
	case 8:
		ty.IsNotExpendable = true
		return
	case 9:
		ty.IsBlocked = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *TokenError) Variant() (uint8, error) {
	if ty.IsFundsUnavailable {
		return 0, nil
	}
	if ty.IsOnlyProvider {
		return 1, nil
	}
	if ty.IsBelowMinimum {
		return 2, nil
	}
	if ty.IsCannotCreate {
		return 3, nil
	}
	if ty.IsUnknownAsset {
		return 4, nil
	}
	if ty.IsFrozen {
		return 5, nil
	}
	if ty.IsUnsupported {
		return 6, nil
	}
	if ty.IsCannotCreateHold {
		return 7, nil
	}
	if ty.IsNotExpendable {
		return 8, nil
	}
	if ty.IsBlocked {
		return 9, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty TokenError) MarshalJSON() ([]byte, error) {
	if ty.IsFundsUnavailable {
		return json.Marshal("TokenError::FundsUnavailable")
	}
	if ty.IsOnlyProvider {
		return json.Marshal("TokenError::OnlyProvider")
	}
	if ty.IsBelowMinimum {
		return json.Marshal("TokenError::BelowMinimum")
	}
	if ty.IsCannotCreate {
		return json.Marshal("TokenError::CannotCreate")
	}
	if ty.IsUnknownAsset {
		return json.Marshal("TokenError::UnknownAsset")
	}
	if ty.IsFrozen {
		return json.Marshal("TokenError::Frozen")
	}
	if ty.IsUnsupported {
		return json.Marshal("TokenError::Unsupported")
	}
	if ty.IsCannotCreateHold {
		return json.Marshal("TokenError::CannotCreateHold")
	}
	if ty.IsNotExpendable {
		return json.Marshal("TokenError::NotExpendable")
	}
	if ty.IsBlocked {
		return json.Marshal("TokenError::Blocked")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated SpArithmeticArithmeticError with id=28
type ArithmeticError struct {
	IsUnderflow      bool
	IsOverflow       bool
	IsDivisionByZero bool
}

func (ty ArithmeticError) Encode(encoder scale.Encoder) (err error) {
	if ty.IsUnderflow {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsOverflow {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsDivisionByZero {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *ArithmeticError) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsUnderflow = true
		return
	case 1:
		ty.IsOverflow = true
		return
	case 2:
		ty.IsDivisionByZero = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *ArithmeticError) Variant() (uint8, error) {
	if ty.IsUnderflow {
		return 0, nil
	}
	if ty.IsOverflow {
		return 1, nil
	}
	if ty.IsDivisionByZero {
		return 2, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty ArithmeticError) MarshalJSON() ([]byte, error) {
	if ty.IsUnderflow {
		return json.Marshal("ArithmeticError::Underflow")
	}
	if ty.IsOverflow {
		return json.Marshal("ArithmeticError::Overflow")
	}
	if ty.IsDivisionByZero {
		return json.Marshal("ArithmeticError::DivisionByZero")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated SpRuntimeTransactionalError with id=29
type TransactionalError struct {
	IsLimitReached bool
	IsNoLayer      bool
}

func (ty TransactionalError) Encode(encoder scale.Encoder) (err error) {
	if ty.IsLimitReached {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsNoLayer {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *TransactionalError) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsLimitReached = true
		return
	case 1:
		ty.IsNoLayer = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *TransactionalError) Variant() (uint8, error) {
	if ty.IsLimitReached {
		return 0, nil
	}
	if ty.IsNoLayer {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty TransactionalError) MarshalJSON() ([]byte, error) {
	if ty.IsLimitReached {
		return json.Marshal("TransactionalError::LimitReached")
	}
	if ty.IsNoLayer {
		return json.Marshal("TransactionalError::NoLayer")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated SpRuntimeDispatchError with id=25
type DispatchError struct {
	IsOther               bool
	IsCannotLookup        bool
	IsBadOrigin           bool
	IsModule              bool
	AsModuleField0        ModuleError
	IsConsumerRemaining   bool
	IsNoProviders         bool
	IsTooManyConsumers    bool
	IsToken               bool
	AsTokenField0         *TokenError
	IsArithmetic          bool
	AsArithmeticField0    *ArithmeticError
	IsTransactional       bool
	AsTransactionalField0 *TransactionalError
	IsExhausted           bool
	IsCorruption          bool
	IsUnavailable         bool
	IsRootNotAllowed      bool
}

func (ty DispatchError) Encode(encoder scale.Encoder) (err error) {
	if ty.IsOther {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsCannotLookup {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsBadOrigin {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsModule {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsModuleField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsConsumerRemaining {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsNoProviders {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTooManyConsumers {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsToken {
		err = encoder.PushByte(7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTokenField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsArithmetic {
		err = encoder.PushByte(8)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsArithmeticField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTransactional {
		err = encoder.PushByte(9)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransactionalField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsExhausted {
		err = encoder.PushByte(10)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsCorruption {
		err = encoder.PushByte(11)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUnavailable {
		err = encoder.PushByte(12)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsRootNotAllowed {
		err = encoder.PushByte(13)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *DispatchError) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsOther = true
		return
	case 1:
		ty.IsCannotLookup = true
		return
	case 2:
		ty.IsBadOrigin = true
		return
	case 3:
		ty.IsModule = true
		err = decoder.Decode(&ty.AsModuleField0)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsConsumerRemaining = true
		return
	case 5:
		ty.IsNoProviders = true
		return
	case 6:
		ty.IsTooManyConsumers = true
		return
	case 7:
		ty.IsToken = true
		var tmp TokenError
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsTokenField0 = &tmp
		return
	case 8:
		ty.IsArithmetic = true
		var tmp ArithmeticError
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsArithmeticField0 = &tmp
		return
	case 9:
		ty.IsTransactional = true
		var tmp TransactionalError
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsTransactionalField0 = &tmp
		return
	case 10:
		ty.IsExhausted = true
		return
	case 11:
		ty.IsCorruption = true
		return
	case 12:
		ty.IsUnavailable = true
		return
	case 13:
		ty.IsRootNotAllowed = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *DispatchError) Variant() (uint8, error) {
	if ty.IsOther {
		return 0, nil
	}
	if ty.IsCannotLookup {
		return 1, nil
	}
	if ty.IsBadOrigin {
		return 2, nil
	}
	if ty.IsModule {
		return 3, nil
	}
	if ty.IsConsumerRemaining {
		return 4, nil
	}
	if ty.IsNoProviders {
		return 5, nil
	}
	if ty.IsTooManyConsumers {
		return 6, nil
	}
	if ty.IsToken {
		return 7, nil
	}
	if ty.IsArithmetic {
		return 8, nil
	}
	if ty.IsTransactional {
		return 9, nil
	}
	if ty.IsExhausted {
		return 10, nil
	}
	if ty.IsCorruption {
		return 11, nil
	}
	if ty.IsUnavailable {
		return 12, nil
	}
	if ty.IsRootNotAllowed {
		return 13, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty DispatchError) MarshalJSON() ([]byte, error) {
	if ty.IsOther {
		return json.Marshal("DispatchError::Other")
	}
	if ty.IsCannotLookup {
		return json.Marshal("DispatchError::CannotLookup")
	}
	if ty.IsBadOrigin {
		return json.Marshal("DispatchError::BadOrigin")
	}
	if ty.IsModule {
		m := map[string]interface{}{"DispatchError::Module": ty.AsModuleField0}
		return json.Marshal(m)
	}
	if ty.IsConsumerRemaining {
		return json.Marshal("DispatchError::ConsumerRemaining")
	}
	if ty.IsNoProviders {
		return json.Marshal("DispatchError::NoProviders")
	}
	if ty.IsTooManyConsumers {
		return json.Marshal("DispatchError::TooManyConsumers")
	}
	if ty.IsToken {
		m := map[string]interface{}{"DispatchError::Token": ty.AsTokenField0}
		return json.Marshal(m)
	}
	if ty.IsArithmetic {
		m := map[string]interface{}{"DispatchError::Arithmetic": ty.AsArithmeticField0}
		return json.Marshal(m)
	}
	if ty.IsTransactional {
		m := map[string]interface{}{"DispatchError::Transactional": ty.AsTransactionalField0}
		return json.Marshal(m)
	}
	if ty.IsExhausted {
		return json.Marshal("DispatchError::Exhausted")
	}
	if ty.IsCorruption {
		return json.Marshal("DispatchError::Corruption")
	}
	if ty.IsUnavailable {
		return json.Marshal("DispatchError::Unavailable")
	}
	if ty.IsRootNotAllowed {
		return json.Marshal("DispatchError::RootNotAllowed")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated FrameSystemPalletEvent with id=21
type FrameSystemPalletEvent struct {
	IsExtrinsicSuccess              bool
	AsExtrinsicSuccessDispatchInfo0 DispatchInfo
	IsExtrinsicFailed               bool
	AsExtrinsicFailedDispatchError0 DispatchError
	AsExtrinsicFailedDispatchInfo1  DispatchInfo
	IsCodeUpdated                   bool
	IsNewAccount                    bool
	AsNewAccountAccount0            [32]byte
	IsKilledAccount                 bool
	AsKilledAccountAccount0         [32]byte
	IsRemarked                      bool
	AsRemarkedSender0               [32]byte
	AsRemarkedHash1                 [32]byte
}

func (ty FrameSystemPalletEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsExtrinsicSuccess {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsExtrinsicSuccessDispatchInfo0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsExtrinsicFailed {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsExtrinsicFailedDispatchError0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsExtrinsicFailedDispatchInfo1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsCodeUpdated {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsNewAccount {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsNewAccountAccount0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsKilledAccount {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsKilledAccountAccount0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsRemarked {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRemarkedSender0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRemarkedHash1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *FrameSystemPalletEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsExtrinsicSuccess = true
		err = decoder.Decode(&ty.AsExtrinsicSuccessDispatchInfo0)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsExtrinsicFailed = true
		err = decoder.Decode(&ty.AsExtrinsicFailedDispatchError0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsExtrinsicFailedDispatchInfo1)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsCodeUpdated = true
		return
	case 3:
		ty.IsNewAccount = true
		err = decoder.Decode(&ty.AsNewAccountAccount0)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsKilledAccount = true
		err = decoder.Decode(&ty.AsKilledAccountAccount0)
		if err != nil {
			return err
		}
		return
	case 5:
		ty.IsRemarked = true
		err = decoder.Decode(&ty.AsRemarkedSender0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsRemarkedHash1)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *FrameSystemPalletEvent) Variant() (uint8, error) {
	if ty.IsExtrinsicSuccess {
		return 0, nil
	}
	if ty.IsExtrinsicFailed {
		return 1, nil
	}
	if ty.IsCodeUpdated {
		return 2, nil
	}
	if ty.IsNewAccount {
		return 3, nil
	}
	if ty.IsKilledAccount {
		return 4, nil
	}
	if ty.IsRemarked {
		return 5, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty FrameSystemPalletEvent) MarshalJSON() ([]byte, error) {
	if ty.IsExtrinsicSuccess {
		m := map[string]interface{}{"FrameSystemPalletEvent::ExtrinsicSuccess": ty.AsExtrinsicSuccessDispatchInfo0}
		return json.Marshal(m)
	}
	if ty.IsExtrinsicFailed {
		m := map[string]interface{}{"FrameSystemPalletEvent::ExtrinsicFailed": map[string]interface{}{
			"AsExtrinsicFailedDispatchError0": ty.AsExtrinsicFailedDispatchError0,
			"AsExtrinsicFailedDispatchInfo1":  ty.AsExtrinsicFailedDispatchInfo1,
		}}
		return json.Marshal(m)
	}
	if ty.IsCodeUpdated {
		return json.Marshal("FrameSystemPalletEvent::CodeUpdated")
	}
	if ty.IsNewAccount {
		m := map[string]interface{}{"FrameSystemPalletEvent::NewAccount": ty.AsNewAccountAccount0}
		return json.Marshal(m)
	}
	if ty.IsKilledAccount {
		m := map[string]interface{}{"FrameSystemPalletEvent::KilledAccount": ty.AsKilledAccountAccount0}
		return json.Marshal(m)
	}
	if ty.IsRemarked {
		m := map[string]interface{}{"FrameSystemPalletEvent::Remarked": map[string]interface{}{
			"AsRemarkedHash1":   ty.AsRemarkedHash1,
			"AsRemarkedSender0": ty.AsRemarkedSender0,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Tuple type generated from metadata id 32
type TupleOfByteArray32Uint64 struct {
	Elem0 [32]byte
	Elem1 uint64
}

// Generated PalletGrandpaPalletEvent with id=30
type PalletGrandpaPalletEvent struct {
	IsNewAuthorities              bool
	AsNewAuthoritiesAuthoritySet0 []TupleOfByteArray32Uint64
	IsPaused                      bool
	IsResumed                     bool
}

func (ty PalletGrandpaPalletEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsNewAuthorities {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsNewAuthoritiesAuthoritySet0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsPaused {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsResumed {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *PalletGrandpaPalletEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsNewAuthorities = true
		err = decoder.Decode(&ty.AsNewAuthoritiesAuthoritySet0)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsPaused = true
		return
	case 2:
		ty.IsResumed = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *PalletGrandpaPalletEvent) Variant() (uint8, error) {
	if ty.IsNewAuthorities {
		return 0, nil
	}
	if ty.IsPaused {
		return 1, nil
	}
	if ty.IsResumed {
		return 2, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty PalletGrandpaPalletEvent) MarshalJSON() ([]byte, error) {
	if ty.IsNewAuthorities {
		m := map[string]interface{}{"PalletGrandpaPalletEvent::NewAuthorities": ty.AsNewAuthoritiesAuthoritySet0}
		return json.Marshal(m)
	}
	if ty.IsPaused {
		return json.Marshal("PalletGrandpaPalletEvent::Paused")
	}
	if ty.IsResumed {
		return json.Marshal("PalletGrandpaPalletEvent::Resumed")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated FrameSupportTraitsTokensMiscBalanceStatus with id=36
type BalanceStatus struct {
	IsFree     bool
	IsReserved bool
}

func (ty BalanceStatus) Encode(encoder scale.Encoder) (err error) {
	if ty.IsFree {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsReserved {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *BalanceStatus) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsFree = true
		return
	case 1:
		ty.IsReserved = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *BalanceStatus) Variant() (uint8, error) {
	if ty.IsFree {
		return 0, nil
	}
	if ty.IsReserved {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty BalanceStatus) MarshalJSON() ([]byte, error) {
	if ty.IsFree {
		return json.Marshal("BalanceStatus::Free")
	}
	if ty.IsReserved {
		return json.Marshal("BalanceStatus::Reserved")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated PalletBalancesPalletEvent with id=35
type PalletBalancesPalletEvent struct {
	IsEndowed                              bool
	AsEndowedAccount0                      [32]byte
	AsEndowedFreeBalance1                  types.U128
	IsDustLost                             bool
	AsDustLostAccount0                     [32]byte
	AsDustLostAmount1                      types.U128
	IsTransfer                             bool
	AsTransferFrom0                        [32]byte
	AsTransferTo1                          [32]byte
	AsTransferAmount2                      types.U128
	IsBalanceSet                           bool
	AsBalanceSetWho0                       [32]byte
	AsBalanceSetFree1                      types.U128
	IsReserved                             bool
	AsReservedWho0                         [32]byte
	AsReservedAmount1                      types.U128
	IsUnreserved                           bool
	AsUnreservedWho0                       [32]byte
	AsUnreservedAmount1                    types.U128
	IsReserveRepatriated                   bool
	AsReserveRepatriatedFrom0              [32]byte
	AsReserveRepatriatedTo1                [32]byte
	AsReserveRepatriatedAmount2            types.U128
	AsReserveRepatriatedDestinationStatus3 BalanceStatus
	IsDeposit                              bool
	AsDepositWho0                          [32]byte
	AsDepositAmount1                       types.U128
	IsWithdraw                             bool
	AsWithdrawWho0                         [32]byte
	AsWithdrawAmount1                      types.U128
	IsSlashed                              bool
	AsSlashedWho0                          [32]byte
	AsSlashedAmount1                       types.U128
	IsMinted                               bool
	AsMintedWho0                           [32]byte
	AsMintedAmount1                        types.U128
	IsBurned                               bool
	AsBurnedWho0                           [32]byte
	AsBurnedAmount1                        types.U128
	IsSuspended                            bool
	AsSuspendedWho0                        [32]byte
	AsSuspendedAmount1                     types.U128
	IsRestored                             bool
	AsRestoredWho0                         [32]byte
	AsRestoredAmount1                      types.U128
	IsUpgraded                             bool
	AsUpgradedWho0                         [32]byte
	IsIssued                               bool
	AsIssuedAmount0                        types.U128
	IsRescinded                            bool
	AsRescindedAmount0                     types.U128
	IsLocked                               bool
	AsLockedWho0                           [32]byte
	AsLockedAmount1                        types.U128
	IsUnlocked                             bool
	AsUnlockedWho0                         [32]byte
	AsUnlockedAmount1                      types.U128
	IsFrozen                               bool
	AsFrozenWho0                           [32]byte
	AsFrozenAmount1                        types.U128
	IsThawed                               bool
	AsThawedWho0                           [32]byte
	AsThawedAmount1                        types.U128
}

func (ty PalletBalancesPalletEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsEndowed {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsEndowedAccount0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsEndowedFreeBalance1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsDustLost {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDustLostAccount0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDustLostAmount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTransfer {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferFrom0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferTo1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferAmount2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsBalanceSet {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBalanceSetWho0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBalanceSetFree1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsReserved {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReservedWho0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReservedAmount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUnreserved {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUnreservedWho0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUnreservedAmount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsReserveRepatriated {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReserveRepatriatedFrom0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReserveRepatriatedTo1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReserveRepatriatedAmount2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReserveRepatriatedDestinationStatus3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsDeposit {
		err = encoder.PushByte(7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDepositWho0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDepositAmount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWithdraw {
		err = encoder.PushByte(8)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWithdrawWho0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWithdrawAmount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSlashed {
		err = encoder.PushByte(9)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSlashedWho0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSlashedAmount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsMinted {
		err = encoder.PushByte(10)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsMintedWho0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsMintedAmount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsBurned {
		err = encoder.PushByte(11)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBurnedWho0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBurnedAmount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSuspended {
		err = encoder.PushByte(12)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSuspendedWho0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSuspendedAmount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsRestored {
		err = encoder.PushByte(13)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRestoredWho0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRestoredAmount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUpgraded {
		err = encoder.PushByte(14)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpgradedWho0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsIssued {
		err = encoder.PushByte(15)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsIssuedAmount0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsRescinded {
		err = encoder.PushByte(16)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRescindedAmount0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsLocked {
		err = encoder.PushByte(17)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsLockedWho0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsLockedAmount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUnlocked {
		err = encoder.PushByte(18)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUnlockedWho0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUnlockedAmount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsFrozen {
		err = encoder.PushByte(19)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsFrozenWho0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsFrozenAmount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsThawed {
		err = encoder.PushByte(20)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsThawedWho0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsThawedAmount1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *PalletBalancesPalletEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsEndowed = true
		err = decoder.Decode(&ty.AsEndowedAccount0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsEndowedFreeBalance1)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsDustLost = true
		err = decoder.Decode(&ty.AsDustLostAccount0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsDustLostAmount1)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsTransfer = true
		err = decoder.Decode(&ty.AsTransferFrom0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTransferTo1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTransferAmount2)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsBalanceSet = true
		err = decoder.Decode(&ty.AsBalanceSetWho0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsBalanceSetFree1)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsReserved = true
		err = decoder.Decode(&ty.AsReservedWho0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsReservedAmount1)
		if err != nil {
			return err
		}
		return
	case 5:
		ty.IsUnreserved = true
		err = decoder.Decode(&ty.AsUnreservedWho0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUnreservedAmount1)
		if err != nil {
			return err
		}
		return
	case 6:
		ty.IsReserveRepatriated = true
		err = decoder.Decode(&ty.AsReserveRepatriatedFrom0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsReserveRepatriatedTo1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsReserveRepatriatedAmount2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsReserveRepatriatedDestinationStatus3)
		if err != nil {
			return err
		}
		return
	case 7:
		ty.IsDeposit = true
		err = decoder.Decode(&ty.AsDepositWho0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsDepositAmount1)
		if err != nil {
			return err
		}
		return
	case 8:
		ty.IsWithdraw = true
		err = decoder.Decode(&ty.AsWithdrawWho0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsWithdrawAmount1)
		if err != nil {
			return err
		}
		return
	case 9:
		ty.IsSlashed = true
		err = decoder.Decode(&ty.AsSlashedWho0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSlashedAmount1)
		if err != nil {
			return err
		}
		return
	case 10:
		ty.IsMinted = true
		err = decoder.Decode(&ty.AsMintedWho0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsMintedAmount1)
		if err != nil {
			return err
		}
		return
	case 11:
		ty.IsBurned = true
		err = decoder.Decode(&ty.AsBurnedWho0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsBurnedAmount1)
		if err != nil {
			return err
		}
		return
	case 12:
		ty.IsSuspended = true
		err = decoder.Decode(&ty.AsSuspendedWho0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSuspendedAmount1)
		if err != nil {
			return err
		}
		return
	case 13:
		ty.IsRestored = true
		err = decoder.Decode(&ty.AsRestoredWho0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsRestoredAmount1)
		if err != nil {
			return err
		}
		return
	case 14:
		ty.IsUpgraded = true
		err = decoder.Decode(&ty.AsUpgradedWho0)
		if err != nil {
			return err
		}
		return
	case 15:
		ty.IsIssued = true
		err = decoder.Decode(&ty.AsIssuedAmount0)
		if err != nil {
			return err
		}
		return
	case 16:
		ty.IsRescinded = true
		err = decoder.Decode(&ty.AsRescindedAmount0)
		if err != nil {
			return err
		}
		return
	case 17:
		ty.IsLocked = true
		err = decoder.Decode(&ty.AsLockedWho0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsLockedAmount1)
		if err != nil {
			return err
		}
		return
	case 18:
		ty.IsUnlocked = true
		err = decoder.Decode(&ty.AsUnlockedWho0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUnlockedAmount1)
		if err != nil {
			return err
		}
		return
	case 19:
		ty.IsFrozen = true
		err = decoder.Decode(&ty.AsFrozenWho0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsFrozenAmount1)
		if err != nil {
			return err
		}
		return
	case 20:
		ty.IsThawed = true
		err = decoder.Decode(&ty.AsThawedWho0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsThawedAmount1)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *PalletBalancesPalletEvent) Variant() (uint8, error) {
	if ty.IsEndowed {
		return 0, nil
	}
	if ty.IsDustLost {
		return 1, nil
	}
	if ty.IsTransfer {
		return 2, nil
	}
	if ty.IsBalanceSet {
		return 3, nil
	}
	if ty.IsReserved {
		return 4, nil
	}
	if ty.IsUnreserved {
		return 5, nil
	}
	if ty.IsReserveRepatriated {
		return 6, nil
	}
	if ty.IsDeposit {
		return 7, nil
	}
	if ty.IsWithdraw {
		return 8, nil
	}
	if ty.IsSlashed {
		return 9, nil
	}
	if ty.IsMinted {
		return 10, nil
	}
	if ty.IsBurned {
		return 11, nil
	}
	if ty.IsSuspended {
		return 12, nil
	}
	if ty.IsRestored {
		return 13, nil
	}
	if ty.IsUpgraded {
		return 14, nil
	}
	if ty.IsIssued {
		return 15, nil
	}
	if ty.IsRescinded {
		return 16, nil
	}
	if ty.IsLocked {
		return 17, nil
	}
	if ty.IsUnlocked {
		return 18, nil
	}
	if ty.IsFrozen {
		return 19, nil
	}
	if ty.IsThawed {
		return 20, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty PalletBalancesPalletEvent) MarshalJSON() ([]byte, error) {
	if ty.IsEndowed {
		m := map[string]interface{}{"PalletBalancesPalletEvent::Endowed": map[string]interface{}{
			"AsEndowedAccount0":     ty.AsEndowedAccount0,
			"AsEndowedFreeBalance1": ty.AsEndowedFreeBalance1,
		}}
		return json.Marshal(m)
	}
	if ty.IsDustLost {
		m := map[string]interface{}{"PalletBalancesPalletEvent::DustLost": map[string]interface{}{
			"AsDustLostAccount0": ty.AsDustLostAccount0,
			"AsDustLostAmount1":  ty.AsDustLostAmount1,
		}}
		return json.Marshal(m)
	}
	if ty.IsTransfer {
		m := map[string]interface{}{"PalletBalancesPalletEvent::Transfer": map[string]interface{}{
			"AsTransferAmount2": ty.AsTransferAmount2,
			"AsTransferFrom0":   ty.AsTransferFrom0,
			"AsTransferTo1":     ty.AsTransferTo1,
		}}
		return json.Marshal(m)
	}
	if ty.IsBalanceSet {
		m := map[string]interface{}{"PalletBalancesPalletEvent::BalanceSet": map[string]interface{}{
			"AsBalanceSetFree1": ty.AsBalanceSetFree1,
			"AsBalanceSetWho0":  ty.AsBalanceSetWho0,
		}}
		return json.Marshal(m)
	}
	if ty.IsReserved {
		m := map[string]interface{}{"PalletBalancesPalletEvent::Reserved": map[string]interface{}{
			"AsReservedAmount1": ty.AsReservedAmount1,
			"AsReservedWho0":    ty.AsReservedWho0,
		}}
		return json.Marshal(m)
	}
	if ty.IsUnreserved {
		m := map[string]interface{}{"PalletBalancesPalletEvent::Unreserved": map[string]interface{}{
			"AsUnreservedAmount1": ty.AsUnreservedAmount1,
			"AsUnreservedWho0":    ty.AsUnreservedWho0,
		}}
		return json.Marshal(m)
	}
	if ty.IsReserveRepatriated {
		m := map[string]interface{}{"PalletBalancesPalletEvent::ReserveRepatriated": map[string]interface{}{
			"AsReserveRepatriatedAmount2":            ty.AsReserveRepatriatedAmount2,
			"AsReserveRepatriatedDestinationStatus3": ty.AsReserveRepatriatedDestinationStatus3,
			"AsReserveRepatriatedFrom0":              ty.AsReserveRepatriatedFrom0,
			"AsReserveRepatriatedTo1":                ty.AsReserveRepatriatedTo1,
		}}
		return json.Marshal(m)
	}
	if ty.IsDeposit {
		m := map[string]interface{}{"PalletBalancesPalletEvent::Deposit": map[string]interface{}{
			"AsDepositAmount1": ty.AsDepositAmount1,
			"AsDepositWho0":    ty.AsDepositWho0,
		}}
		return json.Marshal(m)
	}
	if ty.IsWithdraw {
		m := map[string]interface{}{"PalletBalancesPalletEvent::Withdraw": map[string]interface{}{
			"AsWithdrawAmount1": ty.AsWithdrawAmount1,
			"AsWithdrawWho0":    ty.AsWithdrawWho0,
		}}
		return json.Marshal(m)
	}
	if ty.IsSlashed {
		m := map[string]interface{}{"PalletBalancesPalletEvent::Slashed": map[string]interface{}{
			"AsSlashedAmount1": ty.AsSlashedAmount1,
			"AsSlashedWho0":    ty.AsSlashedWho0,
		}}
		return json.Marshal(m)
	}
	if ty.IsMinted {
		m := map[string]interface{}{"PalletBalancesPalletEvent::Minted": map[string]interface{}{
			"AsMintedAmount1": ty.AsMintedAmount1,
			"AsMintedWho0":    ty.AsMintedWho0,
		}}
		return json.Marshal(m)
	}
	if ty.IsBurned {
		m := map[string]interface{}{"PalletBalancesPalletEvent::Burned": map[string]interface{}{
			"AsBurnedAmount1": ty.AsBurnedAmount1,
			"AsBurnedWho0":    ty.AsBurnedWho0,
		}}
		return json.Marshal(m)
	}
	if ty.IsSuspended {
		m := map[string]interface{}{"PalletBalancesPalletEvent::Suspended": map[string]interface{}{
			"AsSuspendedAmount1": ty.AsSuspendedAmount1,
			"AsSuspendedWho0":    ty.AsSuspendedWho0,
		}}
		return json.Marshal(m)
	}
	if ty.IsRestored {
		m := map[string]interface{}{"PalletBalancesPalletEvent::Restored": map[string]interface{}{
			"AsRestoredAmount1": ty.AsRestoredAmount1,
			"AsRestoredWho0":    ty.AsRestoredWho0,
		}}
		return json.Marshal(m)
	}
	if ty.IsUpgraded {
		m := map[string]interface{}{"PalletBalancesPalletEvent::Upgraded": ty.AsUpgradedWho0}
		return json.Marshal(m)
	}
	if ty.IsIssued {
		m := map[string]interface{}{"PalletBalancesPalletEvent::Issued": ty.AsIssuedAmount0}
		return json.Marshal(m)
	}
	if ty.IsRescinded {
		m := map[string]interface{}{"PalletBalancesPalletEvent::Rescinded": ty.AsRescindedAmount0}
		return json.Marshal(m)
	}
	if ty.IsLocked {
		m := map[string]interface{}{"PalletBalancesPalletEvent::Locked": map[string]interface{}{
			"AsLockedAmount1": ty.AsLockedAmount1,
			"AsLockedWho0":    ty.AsLockedWho0,
		}}
		return json.Marshal(m)
	}
	if ty.IsUnlocked {
		m := map[string]interface{}{"PalletBalancesPalletEvent::Unlocked": map[string]interface{}{
			"AsUnlockedAmount1": ty.AsUnlockedAmount1,
			"AsUnlockedWho0":    ty.AsUnlockedWho0,
		}}
		return json.Marshal(m)
	}
	if ty.IsFrozen {
		m := map[string]interface{}{"PalletBalancesPalletEvent::Frozen": map[string]interface{}{
			"AsFrozenAmount1": ty.AsFrozenAmount1,
			"AsFrozenWho0":    ty.AsFrozenWho0,
		}}
		return json.Marshal(m)
	}
	if ty.IsThawed {
		m := map[string]interface{}{"PalletBalancesPalletEvent::Thawed": map[string]interface{}{
			"AsThawedAmount1": ty.AsThawedAmount1,
			"AsThawedWho0":    ty.AsThawedWho0,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated PalletTransactionPaymentPalletEvent with id=37
type PalletTransactionPaymentPalletEvent struct {
	IsTransactionFeePaid           bool
	AsTransactionFeePaidWho0       [32]byte
	AsTransactionFeePaidActualFee1 types.U128
	AsTransactionFeePaidTip2       types.U128
}

func (ty PalletTransactionPaymentPalletEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsTransactionFeePaid {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransactionFeePaidWho0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransactionFeePaidActualFee1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransactionFeePaidTip2)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *PalletTransactionPaymentPalletEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsTransactionFeePaid = true
		err = decoder.Decode(&ty.AsTransactionFeePaidWho0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTransactionFeePaidActualFee1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTransactionFeePaidTip2)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *PalletTransactionPaymentPalletEvent) Variant() (uint8, error) {
	if ty.IsTransactionFeePaid {
		return 0, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty PalletTransactionPaymentPalletEvent) MarshalJSON() ([]byte, error) {
	if ty.IsTransactionFeePaid {
		m := map[string]interface{}{"PalletTransactionPaymentPalletEvent::TransactionFeePaid": map[string]interface{}{
			"AsTransactionFeePaidActualFee1": ty.AsTransactionFeePaidActualFee1,
			"AsTransactionFeePaidTip2":       ty.AsTransactionFeePaidTip2,
			"AsTransactionFeePaidWho0":       ty.AsTransactionFeePaidWho0,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated Result with id=39
type Result struct {
	IsOk        bool
	AsOkField0  struct{}
	IsErr       bool
	AsErrField0 *DispatchError
}

func (ty Result) Encode(encoder scale.Encoder) (err error) {
	if ty.IsOk {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsOkField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsErr {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsErrField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *Result) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsOk = true
		err = decoder.Decode(&ty.AsOkField0)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsErr = true
		var tmp DispatchError
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsErrField0 = &tmp
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *Result) Variant() (uint8, error) {
	if ty.IsOk {
		return 0, nil
	}
	if ty.IsErr {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty Result) MarshalJSON() ([]byte, error) {
	if ty.IsOk {
		m := map[string]interface{}{"Result::Ok": ty.AsOkField0}
		return json.Marshal(m)
	}
	if ty.IsErr {
		m := map[string]interface{}{"Result::Err": ty.AsErrField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated Option with id=41
type OptionTByteArray32 struct {
	IsNone       bool
	IsSome       bool
	AsSomeField0 [32]byte
}

func (ty OptionTByteArray32) Encode(encoder scale.Encoder) (err error) {
	if ty.IsNone {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSome {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSomeField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *OptionTByteArray32) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsNone = true
		return
	case 1:
		ty.IsSome = true
		err = decoder.Decode(&ty.AsSomeField0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *OptionTByteArray32) Variant() (uint8, error) {
	if ty.IsNone {
		return 0, nil
	}
	if ty.IsSome {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty OptionTByteArray32) MarshalJSON() ([]byte, error) {
	if ty.IsNone {
		return json.Marshal("OptionTByteArray32::None")
	}
	if ty.IsSome {
		m := map[string]interface{}{"OptionTByteArray32::Some": ty.AsSomeField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated PalletSudoPalletEvent with id=38
type PalletSudoPalletEvent struct {
	IsSudid                 bool
	AsSudidSudoResult0      *Result
	IsKeyChanged            bool
	AsKeyChangedOldSudoer0  *OptionTByteArray32
	IsSudoAsDone            bool
	AsSudoAsDoneSudoResult0 *Result
}

func (ty PalletSudoPalletEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsSudid {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSudidSudoResult0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsKeyChanged {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsKeyChangedOldSudoer0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSudoAsDone {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSudoAsDoneSudoResult0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *PalletSudoPalletEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsSudid = true
		var tmp Result
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsSudidSudoResult0 = &tmp
		return
	case 1:
		ty.IsKeyChanged = true
		var tmp OptionTByteArray32
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsKeyChangedOldSudoer0 = &tmp
		return
	case 2:
		ty.IsSudoAsDone = true
		var tmp Result
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsSudoAsDoneSudoResult0 = &tmp
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *PalletSudoPalletEvent) Variant() (uint8, error) {
	if ty.IsSudid {
		return 0, nil
	}
	if ty.IsKeyChanged {
		return 1, nil
	}
	if ty.IsSudoAsDone {
		return 2, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty PalletSudoPalletEvent) MarshalJSON() ([]byte, error) {
	if ty.IsSudid {
		m := map[string]interface{}{"PalletSudoPalletEvent::Sudid": ty.AsSudidSudoResult0}
		return json.Marshal(m)
	}
	if ty.IsKeyChanged {
		m := map[string]interface{}{"PalletSudoPalletEvent::KeyChanged": ty.AsKeyChangedOldSudoer0}
		return json.Marshal(m)
	}
	if ty.IsSudoAsDone {
		m := map[string]interface{}{"PalletSudoPalletEvent::SudoAsDone": ty.AsSudoAsDoneSudoResult0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated OrmlTokensModuleEvent with id=42
type OrmlTokensModuleEvent struct {
	IsEndowed                       bool
	AsEndowedCurrencyId0            uint64
	AsEndowedWho1                   [32]byte
	AsEndowedAmount2                types.U128
	IsDustLost                      bool
	AsDustLostCurrencyId0           uint64
	AsDustLostWho1                  [32]byte
	AsDustLostAmount2               types.U128
	IsTransfer                      bool
	AsTransferCurrencyId0           uint64
	AsTransferFrom1                 [32]byte
	AsTransferTo2                   [32]byte
	AsTransferAmount3               types.U128
	IsReserved                      bool
	AsReservedCurrencyId0           uint64
	AsReservedWho1                  [32]byte
	AsReservedAmount2               types.U128
	IsUnreserved                    bool
	AsUnreservedCurrencyId0         uint64
	AsUnreservedWho1                [32]byte
	AsUnreservedAmount2             types.U128
	IsReserveRepatriated            bool
	AsReserveRepatriatedCurrencyId0 uint64
	AsReserveRepatriatedFrom1       [32]byte
	AsReserveRepatriatedTo2         [32]byte
	AsReserveRepatriatedAmount3     types.U128
	AsReserveRepatriatedStatus4     BalanceStatus
	IsBalanceSet                    bool
	AsBalanceSetCurrencyId0         uint64
	AsBalanceSetWho1                [32]byte
	AsBalanceSetFree2               types.U128
	AsBalanceSetReserved3           types.U128
	IsTotalIssuanceSet              bool
	AsTotalIssuanceSetCurrencyId0   uint64
	AsTotalIssuanceSetAmount1       types.U128
	IsWithdrawn                     bool
	AsWithdrawnCurrencyId0          uint64
	AsWithdrawnWho1                 [32]byte
	AsWithdrawnAmount2              types.U128
	IsSlashed                       bool
	AsSlashedCurrencyId0            uint64
	AsSlashedWho1                   [32]byte
	AsSlashedFreeAmount2            types.U128
	AsSlashedReservedAmount3        types.U128
	IsDeposited                     bool
	AsDepositedCurrencyId0          uint64
	AsDepositedWho1                 [32]byte
	AsDepositedAmount2              types.U128
	IsLockSet                       bool
	AsLockSetLockId0                [8]byte
	AsLockSetCurrencyId1            uint64
	AsLockSetWho2                   [32]byte
	AsLockSetAmount3                types.U128
	IsLockRemoved                   bool
	AsLockRemovedLockId0            [8]byte
	AsLockRemovedCurrencyId1        uint64
	AsLockRemovedWho2               [32]byte
	IsLocked                        bool
	AsLockedCurrencyId0             uint64
	AsLockedWho1                    [32]byte
	AsLockedAmount2                 types.U128
	IsUnlocked                      bool
	AsUnlockedCurrencyId0           uint64
	AsUnlockedWho1                  [32]byte
	AsUnlockedAmount2               types.U128
	IsIssued                        bool
	AsIssuedCurrencyId0             uint64
	AsIssuedAmount1                 types.U128
	IsRescinded                     bool
	AsRescindedCurrencyId0          uint64
	AsRescindedAmount1              types.U128
}

func (ty OrmlTokensModuleEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsEndowed {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsEndowedCurrencyId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsEndowedWho1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsEndowedAmount2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsDustLost {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDustLostCurrencyId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDustLostWho1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDustLostAmount2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTransfer {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferCurrencyId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferFrom1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferTo2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferAmount3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsReserved {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReservedCurrencyId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReservedWho1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReservedAmount2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUnreserved {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUnreservedCurrencyId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUnreservedWho1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUnreservedAmount2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsReserveRepatriated {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReserveRepatriatedCurrencyId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReserveRepatriatedFrom1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReserveRepatriatedTo2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReserveRepatriatedAmount3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReserveRepatriatedStatus4)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsBalanceSet {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBalanceSetCurrencyId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBalanceSetWho1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBalanceSetFree2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBalanceSetReserved3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTotalIssuanceSet {
		err = encoder.PushByte(7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTotalIssuanceSetCurrencyId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTotalIssuanceSetAmount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWithdrawn {
		err = encoder.PushByte(8)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWithdrawnCurrencyId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWithdrawnWho1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWithdrawnAmount2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSlashed {
		err = encoder.PushByte(9)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSlashedCurrencyId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSlashedWho1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSlashedFreeAmount2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSlashedReservedAmount3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsDeposited {
		err = encoder.PushByte(10)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDepositedCurrencyId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDepositedWho1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDepositedAmount2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsLockSet {
		err = encoder.PushByte(11)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsLockSetLockId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsLockSetCurrencyId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsLockSetWho2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsLockSetAmount3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsLockRemoved {
		err = encoder.PushByte(12)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsLockRemovedLockId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsLockRemovedCurrencyId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsLockRemovedWho2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsLocked {
		err = encoder.PushByte(13)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsLockedCurrencyId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsLockedWho1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsLockedAmount2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUnlocked {
		err = encoder.PushByte(14)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUnlockedCurrencyId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUnlockedWho1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUnlockedAmount2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsIssued {
		err = encoder.PushByte(15)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsIssuedCurrencyId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsIssuedAmount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsRescinded {
		err = encoder.PushByte(16)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRescindedCurrencyId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRescindedAmount1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *OrmlTokensModuleEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsEndowed = true
		err = decoder.Decode(&ty.AsEndowedCurrencyId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsEndowedWho1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsEndowedAmount2)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsDustLost = true
		err = decoder.Decode(&ty.AsDustLostCurrencyId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsDustLostWho1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsDustLostAmount2)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsTransfer = true
		err = decoder.Decode(&ty.AsTransferCurrencyId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTransferFrom1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTransferTo2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTransferAmount3)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsReserved = true
		err = decoder.Decode(&ty.AsReservedCurrencyId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsReservedWho1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsReservedAmount2)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsUnreserved = true
		err = decoder.Decode(&ty.AsUnreservedCurrencyId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUnreservedWho1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUnreservedAmount2)
		if err != nil {
			return err
		}
		return
	case 5:
		ty.IsReserveRepatriated = true
		err = decoder.Decode(&ty.AsReserveRepatriatedCurrencyId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsReserveRepatriatedFrom1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsReserveRepatriatedTo2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsReserveRepatriatedAmount3)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsReserveRepatriatedStatus4)
		if err != nil {
			return err
		}
		return
	case 6:
		ty.IsBalanceSet = true
		err = decoder.Decode(&ty.AsBalanceSetCurrencyId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsBalanceSetWho1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsBalanceSetFree2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsBalanceSetReserved3)
		if err != nil {
			return err
		}
		return
	case 7:
		ty.IsTotalIssuanceSet = true
		err = decoder.Decode(&ty.AsTotalIssuanceSetCurrencyId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTotalIssuanceSetAmount1)
		if err != nil {
			return err
		}
		return
	case 8:
		ty.IsWithdrawn = true
		err = decoder.Decode(&ty.AsWithdrawnCurrencyId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsWithdrawnWho1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsWithdrawnAmount2)
		if err != nil {
			return err
		}
		return
	case 9:
		ty.IsSlashed = true
		err = decoder.Decode(&ty.AsSlashedCurrencyId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSlashedWho1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSlashedFreeAmount2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSlashedReservedAmount3)
		if err != nil {
			return err
		}
		return
	case 10:
		ty.IsDeposited = true
		err = decoder.Decode(&ty.AsDepositedCurrencyId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsDepositedWho1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsDepositedAmount2)
		if err != nil {
			return err
		}
		return
	case 11:
		ty.IsLockSet = true
		err = decoder.Decode(&ty.AsLockSetLockId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsLockSetCurrencyId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsLockSetWho2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsLockSetAmount3)
		if err != nil {
			return err
		}
		return
	case 12:
		ty.IsLockRemoved = true
		err = decoder.Decode(&ty.AsLockRemovedLockId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsLockRemovedCurrencyId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsLockRemovedWho2)
		if err != nil {
			return err
		}
		return
	case 13:
		ty.IsLocked = true
		err = decoder.Decode(&ty.AsLockedCurrencyId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsLockedWho1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsLockedAmount2)
		if err != nil {
			return err
		}
		return
	case 14:
		ty.IsUnlocked = true
		err = decoder.Decode(&ty.AsUnlockedCurrencyId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUnlockedWho1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUnlockedAmount2)
		if err != nil {
			return err
		}
		return
	case 15:
		ty.IsIssued = true
		err = decoder.Decode(&ty.AsIssuedCurrencyId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsIssuedAmount1)
		if err != nil {
			return err
		}
		return
	case 16:
		ty.IsRescinded = true
		err = decoder.Decode(&ty.AsRescindedCurrencyId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsRescindedAmount1)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *OrmlTokensModuleEvent) Variant() (uint8, error) {
	if ty.IsEndowed {
		return 0, nil
	}
	if ty.IsDustLost {
		return 1, nil
	}
	if ty.IsTransfer {
		return 2, nil
	}
	if ty.IsReserved {
		return 3, nil
	}
	if ty.IsUnreserved {
		return 4, nil
	}
	if ty.IsReserveRepatriated {
		return 5, nil
	}
	if ty.IsBalanceSet {
		return 6, nil
	}
	if ty.IsTotalIssuanceSet {
		return 7, nil
	}
	if ty.IsWithdrawn {
		return 8, nil
	}
	if ty.IsSlashed {
		return 9, nil
	}
	if ty.IsDeposited {
		return 10, nil
	}
	if ty.IsLockSet {
		return 11, nil
	}
	if ty.IsLockRemoved {
		return 12, nil
	}
	if ty.IsLocked {
		return 13, nil
	}
	if ty.IsUnlocked {
		return 14, nil
	}
	if ty.IsIssued {
		return 15, nil
	}
	if ty.IsRescinded {
		return 16, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty OrmlTokensModuleEvent) MarshalJSON() ([]byte, error) {
	if ty.IsEndowed {
		m := map[string]interface{}{"OrmlTokensModuleEvent::Endowed": map[string]interface{}{
			"AsEndowedAmount2":     ty.AsEndowedAmount2,
			"AsEndowedCurrencyId0": ty.AsEndowedCurrencyId0,
			"AsEndowedWho1":        ty.AsEndowedWho1,
		}}
		return json.Marshal(m)
	}
	if ty.IsDustLost {
		m := map[string]interface{}{"OrmlTokensModuleEvent::DustLost": map[string]interface{}{
			"AsDustLostAmount2":     ty.AsDustLostAmount2,
			"AsDustLostCurrencyId0": ty.AsDustLostCurrencyId0,
			"AsDustLostWho1":        ty.AsDustLostWho1,
		}}
		return json.Marshal(m)
	}
	if ty.IsTransfer {
		m := map[string]interface{}{"OrmlTokensModuleEvent::Transfer": map[string]interface{}{
			"AsTransferAmount3":     ty.AsTransferAmount3,
			"AsTransferCurrencyId0": ty.AsTransferCurrencyId0,
			"AsTransferFrom1":       ty.AsTransferFrom1,
			"AsTransferTo2":         ty.AsTransferTo2,
		}}
		return json.Marshal(m)
	}
	if ty.IsReserved {
		m := map[string]interface{}{"OrmlTokensModuleEvent::Reserved": map[string]interface{}{
			"AsReservedAmount2":     ty.AsReservedAmount2,
			"AsReservedCurrencyId0": ty.AsReservedCurrencyId0,
			"AsReservedWho1":        ty.AsReservedWho1,
		}}
		return json.Marshal(m)
	}
	if ty.IsUnreserved {
		m := map[string]interface{}{"OrmlTokensModuleEvent::Unreserved": map[string]interface{}{
			"AsUnreservedAmount2":     ty.AsUnreservedAmount2,
			"AsUnreservedCurrencyId0": ty.AsUnreservedCurrencyId0,
			"AsUnreservedWho1":        ty.AsUnreservedWho1,
		}}
		return json.Marshal(m)
	}
	if ty.IsReserveRepatriated {
		m := map[string]interface{}{"OrmlTokensModuleEvent::ReserveRepatriated": map[string]interface{}{
			"AsReserveRepatriatedAmount3":     ty.AsReserveRepatriatedAmount3,
			"AsReserveRepatriatedCurrencyId0": ty.AsReserveRepatriatedCurrencyId0,
			"AsReserveRepatriatedFrom1":       ty.AsReserveRepatriatedFrom1,
			"AsReserveRepatriatedStatus4":     ty.AsReserveRepatriatedStatus4,
			"AsReserveRepatriatedTo2":         ty.AsReserveRepatriatedTo2,
		}}
		return json.Marshal(m)
	}
	if ty.IsBalanceSet {
		m := map[string]interface{}{"OrmlTokensModuleEvent::BalanceSet": map[string]interface{}{
			"AsBalanceSetCurrencyId0": ty.AsBalanceSetCurrencyId0,
			"AsBalanceSetFree2":       ty.AsBalanceSetFree2,
			"AsBalanceSetReserved3":   ty.AsBalanceSetReserved3,
			"AsBalanceSetWho1":        ty.AsBalanceSetWho1,
		}}
		return json.Marshal(m)
	}
	if ty.IsTotalIssuanceSet {
		m := map[string]interface{}{"OrmlTokensModuleEvent::TotalIssuanceSet": map[string]interface{}{
			"AsTotalIssuanceSetAmount1":     ty.AsTotalIssuanceSetAmount1,
			"AsTotalIssuanceSetCurrencyId0": ty.AsTotalIssuanceSetCurrencyId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsWithdrawn {
		m := map[string]interface{}{"OrmlTokensModuleEvent::Withdrawn": map[string]interface{}{
			"AsWithdrawnAmount2":     ty.AsWithdrawnAmount2,
			"AsWithdrawnCurrencyId0": ty.AsWithdrawnCurrencyId0,
			"AsWithdrawnWho1":        ty.AsWithdrawnWho1,
		}}
		return json.Marshal(m)
	}
	if ty.IsSlashed {
		m := map[string]interface{}{"OrmlTokensModuleEvent::Slashed": map[string]interface{}{
			"AsSlashedCurrencyId0":     ty.AsSlashedCurrencyId0,
			"AsSlashedFreeAmount2":     ty.AsSlashedFreeAmount2,
			"AsSlashedReservedAmount3": ty.AsSlashedReservedAmount3,
			"AsSlashedWho1":            ty.AsSlashedWho1,
		}}
		return json.Marshal(m)
	}
	if ty.IsDeposited {
		m := map[string]interface{}{"OrmlTokensModuleEvent::Deposited": map[string]interface{}{
			"AsDepositedAmount2":     ty.AsDepositedAmount2,
			"AsDepositedCurrencyId0": ty.AsDepositedCurrencyId0,
			"AsDepositedWho1":        ty.AsDepositedWho1,
		}}
		return json.Marshal(m)
	}
	if ty.IsLockSet {
		m := map[string]interface{}{"OrmlTokensModuleEvent::LockSet": map[string]interface{}{
			"AsLockSetAmount3":     ty.AsLockSetAmount3,
			"AsLockSetCurrencyId1": ty.AsLockSetCurrencyId1,
			"AsLockSetLockId0":     ty.AsLockSetLockId0,
			"AsLockSetWho2":        ty.AsLockSetWho2,
		}}
		return json.Marshal(m)
	}
	if ty.IsLockRemoved {
		m := map[string]interface{}{"OrmlTokensModuleEvent::LockRemoved": map[string]interface{}{
			"AsLockRemovedCurrencyId1": ty.AsLockRemovedCurrencyId1,
			"AsLockRemovedLockId0":     ty.AsLockRemovedLockId0,
			"AsLockRemovedWho2":        ty.AsLockRemovedWho2,
		}}
		return json.Marshal(m)
	}
	if ty.IsLocked {
		m := map[string]interface{}{"OrmlTokensModuleEvent::Locked": map[string]interface{}{
			"AsLockedAmount2":     ty.AsLockedAmount2,
			"AsLockedCurrencyId0": ty.AsLockedCurrencyId0,
			"AsLockedWho1":        ty.AsLockedWho1,
		}}
		return json.Marshal(m)
	}
	if ty.IsUnlocked {
		m := map[string]interface{}{"OrmlTokensModuleEvent::Unlocked": map[string]interface{}{
			"AsUnlockedAmount2":     ty.AsUnlockedAmount2,
			"AsUnlockedCurrencyId0": ty.AsUnlockedCurrencyId0,
			"AsUnlockedWho1":        ty.AsUnlockedWho1,
		}}
		return json.Marshal(m)
	}
	if ty.IsIssued {
		m := map[string]interface{}{"OrmlTokensModuleEvent::Issued": map[string]interface{}{
			"AsIssuedAmount1":     ty.AsIssuedAmount1,
			"AsIssuedCurrencyId0": ty.AsIssuedCurrencyId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsRescinded {
		m := map[string]interface{}{"OrmlTokensModuleEvent::Rescinded": map[string]interface{}{
			"AsRescindedAmount1":     ty.AsRescindedAmount1,
			"AsRescindedCurrencyId0": ty.AsRescindedCurrencyId0,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeRuntimeWorkerMessageOrigin with id=45
type MessageOrigin struct {
	IsWork bool
}

func (ty MessageOrigin) Encode(encoder scale.Encoder) (err error) {
	if ty.IsWork {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *MessageOrigin) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsWork = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *MessageOrigin) Variant() (uint8, error) {
	if ty.IsWork {
		return 0, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty MessageOrigin) MarshalJSON() ([]byte, error) {
	if ty.IsWork {
		return json.Marshal("MessageOrigin::Work")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated FrameSupportTraitsMessagesProcessMessageError with id=46
type ProcessMessageError struct {
	IsBadFormat        bool
	IsCorrupt          bool
	IsUnsupported      bool
	IsOverweight       bool
	AsOverweightField0 Weight
	IsYield            bool
}

func (ty ProcessMessageError) Encode(encoder scale.Encoder) (err error) {
	if ty.IsBadFormat {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsCorrupt {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUnsupported {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsOverweight {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsOverweightField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsYield {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *ProcessMessageError) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsBadFormat = true
		return
	case 1:
		ty.IsCorrupt = true
		return
	case 2:
		ty.IsUnsupported = true
		return
	case 3:
		ty.IsOverweight = true
		err = decoder.Decode(&ty.AsOverweightField0)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsYield = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *ProcessMessageError) Variant() (uint8, error) {
	if ty.IsBadFormat {
		return 0, nil
	}
	if ty.IsCorrupt {
		return 1, nil
	}
	if ty.IsUnsupported {
		return 2, nil
	}
	if ty.IsOverweight {
		return 3, nil
	}
	if ty.IsYield {
		return 4, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty ProcessMessageError) MarshalJSON() ([]byte, error) {
	if ty.IsBadFormat {
		return json.Marshal("ProcessMessageError::BadFormat")
	}
	if ty.IsCorrupt {
		return json.Marshal("ProcessMessageError::Corrupt")
	}
	if ty.IsUnsupported {
		return json.Marshal("ProcessMessageError::Unsupported")
	}
	if ty.IsOverweight {
		m := map[string]interface{}{"ProcessMessageError::Overweight": ty.AsOverweightField0}
		return json.Marshal(m)
	}
	if ty.IsYield {
		return json.Marshal("ProcessMessageError::Yield")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated PalletMessageQueuePalletEvent with id=44
type PalletMessageQueuePalletEvent struct {
	IsProcessingFailed                bool
	AsProcessingFailedId0             [32]byte
	AsProcessingFailedOrigin1         MessageOrigin
	AsProcessingFailedError2          ProcessMessageError
	IsProcessed                       bool
	AsProcessedId0                    [32]byte
	AsProcessedOrigin1                MessageOrigin
	AsProcessedWeightUsed2            Weight
	AsProcessedSuccess3               bool
	IsOverweightEnqueued              bool
	AsOverweightEnqueuedId0           [32]byte
	AsOverweightEnqueuedOrigin1       MessageOrigin
	AsOverweightEnqueuedPageIndex2    uint32
	AsOverweightEnqueuedMessageIndex3 uint32
	IsPageReaped                      bool
	AsPageReapedOrigin0               MessageOrigin
	AsPageReapedIndex1                uint32
}

func (ty PalletMessageQueuePalletEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsProcessingFailed {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProcessingFailedId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProcessingFailedOrigin1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProcessingFailedError2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsProcessed {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProcessedId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProcessedOrigin1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProcessedWeightUsed2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProcessedSuccess3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsOverweightEnqueued {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsOverweightEnqueuedId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsOverweightEnqueuedOrigin1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsOverweightEnqueuedPageIndex2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsOverweightEnqueuedMessageIndex3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsPageReaped {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsPageReapedOrigin0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsPageReapedIndex1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *PalletMessageQueuePalletEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsProcessingFailed = true
		err = decoder.Decode(&ty.AsProcessingFailedId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsProcessingFailedOrigin1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsProcessingFailedError2)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsProcessed = true
		err = decoder.Decode(&ty.AsProcessedId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsProcessedOrigin1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsProcessedWeightUsed2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsProcessedSuccess3)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsOverweightEnqueued = true
		err = decoder.Decode(&ty.AsOverweightEnqueuedId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsOverweightEnqueuedOrigin1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsOverweightEnqueuedPageIndex2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsOverweightEnqueuedMessageIndex3)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsPageReaped = true
		err = decoder.Decode(&ty.AsPageReapedOrigin0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsPageReapedIndex1)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *PalletMessageQueuePalletEvent) Variant() (uint8, error) {
	if ty.IsProcessingFailed {
		return 0, nil
	}
	if ty.IsProcessed {
		return 1, nil
	}
	if ty.IsOverweightEnqueued {
		return 2, nil
	}
	if ty.IsPageReaped {
		return 3, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty PalletMessageQueuePalletEvent) MarshalJSON() ([]byte, error) {
	if ty.IsProcessingFailed {
		m := map[string]interface{}{"PalletMessageQueuePalletEvent::ProcessingFailed": map[string]interface{}{
			"AsProcessingFailedError2":  ty.AsProcessingFailedError2,
			"AsProcessingFailedId0":     ty.AsProcessingFailedId0,
			"AsProcessingFailedOrigin1": ty.AsProcessingFailedOrigin1,
		}}
		return json.Marshal(m)
	}
	if ty.IsProcessed {
		m := map[string]interface{}{"PalletMessageQueuePalletEvent::Processed": map[string]interface{}{
			"AsProcessedId0":         ty.AsProcessedId0,
			"AsProcessedOrigin1":     ty.AsProcessedOrigin1,
			"AsProcessedSuccess3":    ty.AsProcessedSuccess3,
			"AsProcessedWeightUsed2": ty.AsProcessedWeightUsed2,
		}}
		return json.Marshal(m)
	}
	if ty.IsOverweightEnqueued {
		m := map[string]interface{}{"PalletMessageQueuePalletEvent::OverweightEnqueued": map[string]interface{}{
			"AsOverweightEnqueuedId0":           ty.AsOverweightEnqueuedId0,
			"AsOverweightEnqueuedMessageIndex3": ty.AsOverweightEnqueuedMessageIndex3,
			"AsOverweightEnqueuedOrigin1":       ty.AsOverweightEnqueuedOrigin1,
			"AsOverweightEnqueuedPageIndex2":    ty.AsOverweightEnqueuedPageIndex2,
		}}
		return json.Marshal(m)
	}
	if ty.IsPageReaped {
		m := map[string]interface{}{"PalletMessageQueuePalletEvent::PageReaped": map[string]interface{}{
			"AsPageReapedIndex1":  ty.AsPageReapedIndex1,
			"AsPageReapedOrigin0": ty.AsPageReapedOrigin0,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeOrgPalletEvent with id=48
type WeteeOrgPalletEvent struct {
	IsCreatedDao             bool
	AsCreatedDaoTAccountId0  [32]byte
	AsCreatedDaoDaoAssetId1  uint64
	IsSuccess                bool
	IsTaskCreated            bool
	AsTaskCreatedDaoAssetId0 uint64
	AsTaskCreatedU321        uint32
	AsTaskCreatedU642        uint64
	AsTaskCreatedTAccountId3 [32]byte
	IsTaskUpdated            bool
	AsTaskUpdatedDaoAssetId0 uint64
	AsTaskUpdatedU321        uint32
	AsTaskUpdatedU642        uint64
	AsTaskUpdatedTAccountId3 [32]byte
}

func (ty WeteeOrgPalletEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsCreatedDao {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreatedDaoTAccountId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreatedDaoDaoAssetId1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSuccess {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTaskCreated {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskCreatedDaoAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskCreatedU321)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskCreatedU642)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskCreatedTAccountId3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTaskUpdated {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskUpdatedDaoAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskUpdatedU321)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskUpdatedU642)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskUpdatedTAccountId3)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeOrgPalletEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsCreatedDao = true
		err = decoder.Decode(&ty.AsCreatedDaoTAccountId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreatedDaoDaoAssetId1)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsSuccess = true
		return
	case 2:
		ty.IsTaskCreated = true
		err = decoder.Decode(&ty.AsTaskCreatedDaoAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTaskCreatedU321)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTaskCreatedU642)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTaskCreatedTAccountId3)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsTaskUpdated = true
		err = decoder.Decode(&ty.AsTaskUpdatedDaoAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTaskUpdatedU321)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTaskUpdatedU642)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTaskUpdatedTAccountId3)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeOrgPalletEvent) Variant() (uint8, error) {
	if ty.IsCreatedDao {
		return 0, nil
	}
	if ty.IsSuccess {
		return 1, nil
	}
	if ty.IsTaskCreated {
		return 2, nil
	}
	if ty.IsTaskUpdated {
		return 3, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeOrgPalletEvent) MarshalJSON() ([]byte, error) {
	if ty.IsCreatedDao {
		m := map[string]interface{}{"WeteeOrgPalletEvent::CreatedDao": map[string]interface{}{
			"AsCreatedDaoDaoAssetId1": ty.AsCreatedDaoDaoAssetId1,
			"AsCreatedDaoTAccountId0": ty.AsCreatedDaoTAccountId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsSuccess {
		return json.Marshal("WeteeOrgPalletEvent::Success")
	}
	if ty.IsTaskCreated {
		m := map[string]interface{}{"WeteeOrgPalletEvent::TaskCreated": map[string]interface{}{
			"AsTaskCreatedDaoAssetId0": ty.AsTaskCreatedDaoAssetId0,
			"AsTaskCreatedTAccountId3": ty.AsTaskCreatedTAccountId3,
			"AsTaskCreatedU321":        ty.AsTaskCreatedU321,
			"AsTaskCreatedU642":        ty.AsTaskCreatedU642,
		}}
		return json.Marshal(m)
	}
	if ty.IsTaskUpdated {
		m := map[string]interface{}{"WeteeOrgPalletEvent::TaskUpdated": map[string]interface{}{
			"AsTaskUpdatedDaoAssetId0": ty.AsTaskUpdatedDaoAssetId0,
			"AsTaskUpdatedTAccountId3": ty.AsTaskUpdatedTAccountId3,
			"AsTaskUpdatedU321":        ty.AsTaskUpdatedU321,
			"AsTaskUpdatedU642":        ty.AsTaskUpdatedU642,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated wetee_assets_DaoAssetMeta with id={{false [51]}}
type DaoAssetMeta struct {
	// Field 0 with TypeId=13
	Name []byte
	// Field 1 with TypeId=13
	Symbol []byte
	// Field 2 with TypeId=2
	Decimals byte
}

// Generated WeteeAssetsPalletEvent with id=49
type WeteeAssetsPalletEvent struct {
	IsTransferred                             bool
	AsTransferredDaoAssetId0                  uint64
	AsTransferredTAccountId1                  [32]byte
	AsTransferredTAccountId2                  [32]byte
	AsTransferredBalanceOfT3                  types.U128
	IsBalanceUpdated                          bool
	AsBalanceUpdatedDaoAssetId0               uint64
	AsBalanceUpdatedTAccountId1               [32]byte
	AsBalanceUpdatedAmountOfT2                types.I128
	IsDeposited                               bool
	AsDepositedDaoAssetId0                    uint64
	AsDepositedTAccountId1                    [32]byte
	AsDepositedBalanceOfT2                    types.U128
	IsWithdrawn                               bool
	AsWithdrawnDaoAssetId0                    uint64
	AsWithdrawnTAccountId1                    [32]byte
	AsWithdrawnBalanceOfT2                    types.U128
	IsCreateAsset                             bool
	AsCreateAssetTAccountId0                  [32]byte
	AsCreateAssetDaoAssetId1                  uint64
	AsCreateAssetBalanceOfT2                  types.U128
	IsSetMetadata                             bool
	AsSetMetadataTAccountId0                  [32]byte
	AsSetMetadataDaoAssetId1                  uint64
	AsSetMetadataDaoAssetMeta2                DaoAssetMeta
	IsBurn                                    bool
	AsBurnTAccountId0                         [32]byte
	AsBurnDaoAssetId1                         uint64
	AsBurnBalanceOfT2                         types.U128
	IsSetWeightRateMultiple                   bool
	AsSetWeightRateMultipleDaoId0             uint64
	AsSetWeightRateMultipleMultiple1          types.U128
	IsSetExistenialDepposit                   bool
	AsSetExistenialDeppositDaoId0             uint64
	AsSetExistenialDeppositExistenialDeposit1 types.U128
}

func (ty WeteeAssetsPalletEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsTransferred {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferredDaoAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferredTAccountId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferredTAccountId2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferredBalanceOfT3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsBalanceUpdated {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBalanceUpdatedDaoAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBalanceUpdatedTAccountId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBalanceUpdatedAmountOfT2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsDeposited {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDepositedDaoAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDepositedTAccountId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDepositedBalanceOfT2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWithdrawn {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWithdrawnDaoAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWithdrawnTAccountId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWithdrawnBalanceOfT2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsCreateAsset {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateAssetTAccountId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateAssetDaoAssetId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateAssetBalanceOfT2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetMetadata {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetMetadataTAccountId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetMetadataDaoAssetId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetMetadataDaoAssetMeta2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsBurn {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBurnTAccountId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBurnDaoAssetId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBurnBalanceOfT2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetWeightRateMultiple {
		err = encoder.PushByte(7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetWeightRateMultipleDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetWeightRateMultipleMultiple1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetExistenialDepposit {
		err = encoder.PushByte(8)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetExistenialDeppositDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetExistenialDeppositExistenialDeposit1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeAssetsPalletEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsTransferred = true
		err = decoder.Decode(&ty.AsTransferredDaoAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTransferredTAccountId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTransferredTAccountId2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTransferredBalanceOfT3)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsBalanceUpdated = true
		err = decoder.Decode(&ty.AsBalanceUpdatedDaoAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsBalanceUpdatedTAccountId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsBalanceUpdatedAmountOfT2)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsDeposited = true
		err = decoder.Decode(&ty.AsDepositedDaoAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsDepositedTAccountId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsDepositedBalanceOfT2)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsWithdrawn = true
		err = decoder.Decode(&ty.AsWithdrawnDaoAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsWithdrawnTAccountId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsWithdrawnBalanceOfT2)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsCreateAsset = true
		err = decoder.Decode(&ty.AsCreateAssetTAccountId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateAssetDaoAssetId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateAssetBalanceOfT2)
		if err != nil {
			return err
		}
		return
	case 5:
		ty.IsSetMetadata = true
		err = decoder.Decode(&ty.AsSetMetadataTAccountId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetMetadataDaoAssetId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetMetadataDaoAssetMeta2)
		if err != nil {
			return err
		}
		return
	case 6:
		ty.IsBurn = true
		err = decoder.Decode(&ty.AsBurnTAccountId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsBurnDaoAssetId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsBurnBalanceOfT2)
		if err != nil {
			return err
		}
		return
	case 7:
		ty.IsSetWeightRateMultiple = true
		err = decoder.Decode(&ty.AsSetWeightRateMultipleDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetWeightRateMultipleMultiple1)
		if err != nil {
			return err
		}
		return
	case 8:
		ty.IsSetExistenialDepposit = true
		err = decoder.Decode(&ty.AsSetExistenialDeppositDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetExistenialDeppositExistenialDeposit1)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeAssetsPalletEvent) Variant() (uint8, error) {
	if ty.IsTransferred {
		return 0, nil
	}
	if ty.IsBalanceUpdated {
		return 1, nil
	}
	if ty.IsDeposited {
		return 2, nil
	}
	if ty.IsWithdrawn {
		return 3, nil
	}
	if ty.IsCreateAsset {
		return 4, nil
	}
	if ty.IsSetMetadata {
		return 5, nil
	}
	if ty.IsBurn {
		return 6, nil
	}
	if ty.IsSetWeightRateMultiple {
		return 7, nil
	}
	if ty.IsSetExistenialDepposit {
		return 8, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeAssetsPalletEvent) MarshalJSON() ([]byte, error) {
	if ty.IsTransferred {
		m := map[string]interface{}{"WeteeAssetsPalletEvent::Transferred": map[string]interface{}{
			"AsTransferredBalanceOfT3": ty.AsTransferredBalanceOfT3,
			"AsTransferredDaoAssetId0": ty.AsTransferredDaoAssetId0,
			"AsTransferredTAccountId1": ty.AsTransferredTAccountId1,
			"AsTransferredTAccountId2": ty.AsTransferredTAccountId2,
		}}
		return json.Marshal(m)
	}
	if ty.IsBalanceUpdated {
		m := map[string]interface{}{"WeteeAssetsPalletEvent::BalanceUpdated": map[string]interface{}{
			"AsBalanceUpdatedAmountOfT2":  ty.AsBalanceUpdatedAmountOfT2,
			"AsBalanceUpdatedDaoAssetId0": ty.AsBalanceUpdatedDaoAssetId0,
			"AsBalanceUpdatedTAccountId1": ty.AsBalanceUpdatedTAccountId1,
		}}
		return json.Marshal(m)
	}
	if ty.IsDeposited {
		m := map[string]interface{}{"WeteeAssetsPalletEvent::Deposited": map[string]interface{}{
			"AsDepositedBalanceOfT2": ty.AsDepositedBalanceOfT2,
			"AsDepositedDaoAssetId0": ty.AsDepositedDaoAssetId0,
			"AsDepositedTAccountId1": ty.AsDepositedTAccountId1,
		}}
		return json.Marshal(m)
	}
	if ty.IsWithdrawn {
		m := map[string]interface{}{"WeteeAssetsPalletEvent::Withdrawn": map[string]interface{}{
			"AsWithdrawnBalanceOfT2": ty.AsWithdrawnBalanceOfT2,
			"AsWithdrawnDaoAssetId0": ty.AsWithdrawnDaoAssetId0,
			"AsWithdrawnTAccountId1": ty.AsWithdrawnTAccountId1,
		}}
		return json.Marshal(m)
	}
	if ty.IsCreateAsset {
		m := map[string]interface{}{"WeteeAssetsPalletEvent::CreateAsset": map[string]interface{}{
			"AsCreateAssetBalanceOfT2": ty.AsCreateAssetBalanceOfT2,
			"AsCreateAssetDaoAssetId1": ty.AsCreateAssetDaoAssetId1,
			"AsCreateAssetTAccountId0": ty.AsCreateAssetTAccountId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsSetMetadata {
		m := map[string]interface{}{"WeteeAssetsPalletEvent::SetMetadata": map[string]interface{}{
			"AsSetMetadataDaoAssetId1":   ty.AsSetMetadataDaoAssetId1,
			"AsSetMetadataDaoAssetMeta2": ty.AsSetMetadataDaoAssetMeta2,
			"AsSetMetadataTAccountId0":   ty.AsSetMetadataTAccountId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsBurn {
		m := map[string]interface{}{"WeteeAssetsPalletEvent::Burn": map[string]interface{}{
			"AsBurnBalanceOfT2": ty.AsBurnBalanceOfT2,
			"AsBurnDaoAssetId1": ty.AsBurnDaoAssetId1,
			"AsBurnTAccountId0": ty.AsBurnTAccountId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsSetWeightRateMultiple {
		m := map[string]interface{}{"WeteeAssetsPalletEvent::SetWeightRateMultiple": map[string]interface{}{
			"AsSetWeightRateMultipleDaoId0":    ty.AsSetWeightRateMultipleDaoId0,
			"AsSetWeightRateMultipleMultiple1": ty.AsSetWeightRateMultipleMultiple1,
		}}
		return json.Marshal(m)
	}
	if ty.IsSetExistenialDepposit {
		m := map[string]interface{}{"WeteeAssetsPalletEvent::SetExistenialDepposit": map[string]interface{}{
			"AsSetExistenialDeppositDaoId0":             ty.AsSetExistenialDeppositDaoId0,
			"AsSetExistenialDeppositExistenialDeposit1": ty.AsSetExistenialDeppositExistenialDeposit1,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeSudoPalletEvent with id=52
type WeteeSudoPalletEvent struct {
	IsSudoDone            bool
	AsSudoDoneSudo0       [32]byte
	AsSudoDoneSudoResult1 Result
	IsSetSudo             bool
	AsSetSudoDaoId0       uint64
	AsSetSudoSudoAccount1 [32]byte
	IsCloseSudo           bool
	AsCloseSudoDaoId0     uint64
}

func (ty WeteeSudoPalletEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsSudoDone {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSudoDoneSudo0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSudoDoneSudoResult1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetSudo {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetSudoDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetSudoSudoAccount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsCloseSudo {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCloseSudoDaoId0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeSudoPalletEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsSudoDone = true
		err = decoder.Decode(&ty.AsSudoDoneSudo0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSudoDoneSudoResult1)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsSetSudo = true
		err = decoder.Decode(&ty.AsSetSudoDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetSudoSudoAccount1)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsCloseSudo = true
		err = decoder.Decode(&ty.AsCloseSudoDaoId0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeSudoPalletEvent) Variant() (uint8, error) {
	if ty.IsSudoDone {
		return 0, nil
	}
	if ty.IsSetSudo {
		return 1, nil
	}
	if ty.IsCloseSudo {
		return 2, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeSudoPalletEvent) MarshalJSON() ([]byte, error) {
	if ty.IsSudoDone {
		m := map[string]interface{}{"WeteeSudoPalletEvent::SudoDone": map[string]interface{}{
			"AsSudoDoneSudo0":       ty.AsSudoDoneSudo0,
			"AsSudoDoneSudoResult1": ty.AsSudoDoneSudoResult1,
		}}
		return json.Marshal(m)
	}
	if ty.IsSetSudo {
		m := map[string]interface{}{"WeteeSudoPalletEvent::SetSudo": map[string]interface{}{
			"AsSetSudoDaoId0":       ty.AsSetSudoDaoId0,
			"AsSetSudoSudoAccount1": ty.AsSetSudoSudoAccount1,
		}}
		return json.Marshal(m)
	}
	if ty.IsCloseSudo {
		m := map[string]interface{}{"WeteeSudoPalletEvent::CloseSudo": ty.AsCloseSudoDaoId0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeGuildPalletEvent with id=53
type WeteeGuildPalletEvent struct {
	IsGuildCreated            bool
	AsGuildCreatedDaoAssetId0 uint64
	AsGuildCreatedU641        uint64
	AsGuildCreatedTAccountId2 [32]byte
	IsGuildJoined             bool
	AsGuildJoinedDaoAssetId0  uint64
	AsGuildJoinedU641         uint64
	AsGuildJoinedTAccountId2  [32]byte
}

func (ty WeteeGuildPalletEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsGuildCreated {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsGuildCreatedDaoAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsGuildCreatedU641)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsGuildCreatedTAccountId2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsGuildJoined {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsGuildJoinedDaoAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsGuildJoinedU641)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsGuildJoinedTAccountId2)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeGuildPalletEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsGuildCreated = true
		err = decoder.Decode(&ty.AsGuildCreatedDaoAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsGuildCreatedU641)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsGuildCreatedTAccountId2)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsGuildJoined = true
		err = decoder.Decode(&ty.AsGuildJoinedDaoAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsGuildJoinedU641)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsGuildJoinedTAccountId2)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeGuildPalletEvent) Variant() (uint8, error) {
	if ty.IsGuildCreated {
		return 0, nil
	}
	if ty.IsGuildJoined {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeGuildPalletEvent) MarshalJSON() ([]byte, error) {
	if ty.IsGuildCreated {
		m := map[string]interface{}{"WeteeGuildPalletEvent::GuildCreated": map[string]interface{}{
			"AsGuildCreatedDaoAssetId0": ty.AsGuildCreatedDaoAssetId0,
			"AsGuildCreatedTAccountId2": ty.AsGuildCreatedTAccountId2,
			"AsGuildCreatedU641":        ty.AsGuildCreatedU641,
		}}
		return json.Marshal(m)
	}
	if ty.IsGuildJoined {
		m := map[string]interface{}{"WeteeGuildPalletEvent::GuildJoined": map[string]interface{}{
			"AsGuildJoinedDaoAssetId0": ty.AsGuildJoinedDaoAssetId0,
			"AsGuildJoinedTAccountId2": ty.AsGuildJoinedTAccountId2,
			"AsGuildJoinedU641":        ty.AsGuildJoinedU641,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeProjectPalletEvent with id=54
type WeteeProjectPalletEvent struct {
	IsProjectJoined             bool
	AsProjectJoinedDaoAssetId0  uint64
	AsProjectJoinedProjectId1   uint64
	AsProjectJoinedTAccountId2  [32]byte
	IsProjectCreated            bool
	AsProjectCreatedDaoAssetId0 uint64
	AsProjectCreatedProjectId1  uint64
	AsProjectCreatedTAccountId2 [32]byte
	IsTaskCreated               bool
	AsTaskCreatedDaoAssetId0    uint64
	AsTaskCreatedProjectId1     uint64
	AsTaskCreatedU642           uint64
	AsTaskCreatedTAccountId3    [32]byte
	IsTaskInProgress            bool
	AsTaskInProgressDaoAssetId0 uint64
	AsTaskInProgressProjectId1  uint64
	AsTaskInProgressU642        uint64
	AsTaskInProgressTAccountId3 [32]byte
	IsTaskInReview              bool
	AsTaskInReviewDaoAssetId0   uint64
	AsTaskInReviewProjectId1    uint64
	AsTaskInReviewU642          uint64
	AsTaskInReviewTAccountId3   [32]byte
}

func (ty WeteeProjectPalletEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsProjectJoined {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProjectJoinedDaoAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProjectJoinedProjectId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProjectJoinedTAccountId2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsProjectCreated {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProjectCreatedDaoAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProjectCreatedProjectId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProjectCreatedTAccountId2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTaskCreated {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskCreatedDaoAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskCreatedProjectId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskCreatedU642)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskCreatedTAccountId3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTaskInProgress {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskInProgressDaoAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskInProgressProjectId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskInProgressU642)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskInProgressTAccountId3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTaskInReview {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskInReviewDaoAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskInReviewProjectId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskInReviewU642)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskInReviewTAccountId3)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeProjectPalletEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsProjectJoined = true
		err = decoder.Decode(&ty.AsProjectJoinedDaoAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsProjectJoinedProjectId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsProjectJoinedTAccountId2)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsProjectCreated = true
		err = decoder.Decode(&ty.AsProjectCreatedDaoAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsProjectCreatedProjectId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsProjectCreatedTAccountId2)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsTaskCreated = true
		err = decoder.Decode(&ty.AsTaskCreatedDaoAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTaskCreatedProjectId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTaskCreatedU642)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTaskCreatedTAccountId3)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsTaskInProgress = true
		err = decoder.Decode(&ty.AsTaskInProgressDaoAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTaskInProgressProjectId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTaskInProgressU642)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTaskInProgressTAccountId3)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsTaskInReview = true
		err = decoder.Decode(&ty.AsTaskInReviewDaoAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTaskInReviewProjectId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTaskInReviewU642)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTaskInReviewTAccountId3)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeProjectPalletEvent) Variant() (uint8, error) {
	if ty.IsProjectJoined {
		return 0, nil
	}
	if ty.IsProjectCreated {
		return 1, nil
	}
	if ty.IsTaskCreated {
		return 2, nil
	}
	if ty.IsTaskInProgress {
		return 3, nil
	}
	if ty.IsTaskInReview {
		return 4, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeProjectPalletEvent) MarshalJSON() ([]byte, error) {
	if ty.IsProjectJoined {
		m := map[string]interface{}{"WeteeProjectPalletEvent::ProjectJoined": map[string]interface{}{
			"AsProjectJoinedDaoAssetId0": ty.AsProjectJoinedDaoAssetId0,
			"AsProjectJoinedProjectId1":  ty.AsProjectJoinedProjectId1,
			"AsProjectJoinedTAccountId2": ty.AsProjectJoinedTAccountId2,
		}}
		return json.Marshal(m)
	}
	if ty.IsProjectCreated {
		m := map[string]interface{}{"WeteeProjectPalletEvent::ProjectCreated": map[string]interface{}{
			"AsProjectCreatedDaoAssetId0": ty.AsProjectCreatedDaoAssetId0,
			"AsProjectCreatedProjectId1":  ty.AsProjectCreatedProjectId1,
			"AsProjectCreatedTAccountId2": ty.AsProjectCreatedTAccountId2,
		}}
		return json.Marshal(m)
	}
	if ty.IsTaskCreated {
		m := map[string]interface{}{"WeteeProjectPalletEvent::TaskCreated": map[string]interface{}{
			"AsTaskCreatedDaoAssetId0": ty.AsTaskCreatedDaoAssetId0,
			"AsTaskCreatedProjectId1":  ty.AsTaskCreatedProjectId1,
			"AsTaskCreatedTAccountId3": ty.AsTaskCreatedTAccountId3,
			"AsTaskCreatedU642":        ty.AsTaskCreatedU642,
		}}
		return json.Marshal(m)
	}
	if ty.IsTaskInProgress {
		m := map[string]interface{}{"WeteeProjectPalletEvent::TaskInProgress": map[string]interface{}{
			"AsTaskInProgressDaoAssetId0": ty.AsTaskInProgressDaoAssetId0,
			"AsTaskInProgressProjectId1":  ty.AsTaskInProgressProjectId1,
			"AsTaskInProgressTAccountId3": ty.AsTaskInProgressTAccountId3,
			"AsTaskInProgressU642":        ty.AsTaskInProgressU642,
		}}
		return json.Marshal(m)
	}
	if ty.IsTaskInReview {
		m := map[string]interface{}{"WeteeProjectPalletEvent::TaskInReview": map[string]interface{}{
			"AsTaskInReviewDaoAssetId0": ty.AsTaskInReviewDaoAssetId0,
			"AsTaskInReviewProjectId1":  ty.AsTaskInReviewProjectId1,
			"AsTaskInReviewTAccountId3": ty.AsTaskInReviewTAccountId3,
			"AsTaskInReviewU642":        ty.AsTaskInReviewU642,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeRuntimeVotePledge with id=56
type Pledge struct {
	IsFungToken       bool
	AsFungTokenField0 types.U128
}

func (ty Pledge) Encode(encoder scale.Encoder) (err error) {
	if ty.IsFungToken {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsFungTokenField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *Pledge) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsFungToken = true
		err = decoder.Decode(&ty.AsFungTokenField0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *Pledge) Variant() (uint8, error) {
	if ty.IsFungToken {
		return 0, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty Pledge) MarshalJSON() ([]byte, error) {
	if ty.IsFungToken {
		m := map[string]interface{}{"Pledge::FungToken": ty.AsFungTokenField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeGovPalletEvent with id=55
type WeteeGovPalletEvent struct {
	IsProposed                    bool
	AsProposedDaoAssetId0         uint64
	AsProposedTHash1              [32]byte
	IsRecreate                    bool
	AsRecreateDaoAssetId0         uint64
	AsRecreateBalanceOfT1         types.U128
	IsStartTable                  bool
	AsStartTableDaoAssetId0       uint64
	AsStartTablePropIndex1        uint32
	IsVote                        bool
	AsVoteDaoAssetId0             uint64
	AsVotePropIndex1              uint32
	AsVoteTPledge2                Pledge
	IsCancelVote                  bool
	AsCancelVoteDaoAssetId0       uint64
	AsCancelVotePropIndex1        uint32
	IsEnactProposal               bool
	AsEnactProposalDaoId0         uint64
	AsEnactProposalIndex1         uint32
	AsEnactProposalResult2        Result
	IsUnlock                      bool
	AsUnlockTAccountId0           [32]byte
	AsUnlockDaoAssetId1           uint64
	AsUnlockTPledge2              Pledge
	IsUnreserved                  bool
	AsUnreservedTAccountId0       [32]byte
	AsUnreservedBalanceOfT1       types.U128
	IsSetMinVoteWeight            bool
	AsSetMinVoteWeightDaoAssetId0 uint64
	AsSetMinVoteWeightTCallId1    uint32
	AsSetMinVoteWeightBalanceOfT2 types.U128
	IsSetMaxPreProps              bool
	AsSetMaxPrePropsDaoId0        uint64
	AsSetMaxPrePropsMax1          uint32
	IsVoteModelUpdate             bool
	AsVoteModelUpdateDaoId0       uint64
	AsVoteModelUpdateModel1       byte
	IsPeriodUpdate                bool
	AsPeriodUpdateDaoId0          uint64
}

func (ty WeteeGovPalletEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsProposed {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProposedDaoAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProposedTHash1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsRecreate {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRecreateDaoAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRecreateBalanceOfT1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsStartTable {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsStartTableDaoAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsStartTablePropIndex1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsVote {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsVoteDaoAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsVotePropIndex1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsVoteTPledge2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsCancelVote {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCancelVoteDaoAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCancelVotePropIndex1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsEnactProposal {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsEnactProposalDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsEnactProposalIndex1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsEnactProposalResult2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUnlock {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUnlockTAccountId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUnlockDaoAssetId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUnlockTPledge2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUnreserved {
		err = encoder.PushByte(7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUnreservedTAccountId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUnreservedBalanceOfT1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetMinVoteWeight {
		err = encoder.PushByte(8)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetMinVoteWeightDaoAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetMinVoteWeightTCallId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetMinVoteWeightBalanceOfT2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetMaxPreProps {
		err = encoder.PushByte(9)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetMaxPrePropsDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetMaxPrePropsMax1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsVoteModelUpdate {
		err = encoder.PushByte(10)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsVoteModelUpdateDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsVoteModelUpdateModel1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsPeriodUpdate {
		err = encoder.PushByte(11)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsPeriodUpdateDaoId0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeGovPalletEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsProposed = true
		err = decoder.Decode(&ty.AsProposedDaoAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsProposedTHash1)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsRecreate = true
		err = decoder.Decode(&ty.AsRecreateDaoAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsRecreateBalanceOfT1)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsStartTable = true
		err = decoder.Decode(&ty.AsStartTableDaoAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsStartTablePropIndex1)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsVote = true
		err = decoder.Decode(&ty.AsVoteDaoAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsVotePropIndex1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsVoteTPledge2)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsCancelVote = true
		err = decoder.Decode(&ty.AsCancelVoteDaoAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCancelVotePropIndex1)
		if err != nil {
			return err
		}
		return
	case 5:
		ty.IsEnactProposal = true
		err = decoder.Decode(&ty.AsEnactProposalDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsEnactProposalIndex1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsEnactProposalResult2)
		if err != nil {
			return err
		}
		return
	case 6:
		ty.IsUnlock = true
		err = decoder.Decode(&ty.AsUnlockTAccountId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUnlockDaoAssetId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUnlockTPledge2)
		if err != nil {
			return err
		}
		return
	case 7:
		ty.IsUnreserved = true
		err = decoder.Decode(&ty.AsUnreservedTAccountId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUnreservedBalanceOfT1)
		if err != nil {
			return err
		}
		return
	case 8:
		ty.IsSetMinVoteWeight = true
		err = decoder.Decode(&ty.AsSetMinVoteWeightDaoAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetMinVoteWeightTCallId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetMinVoteWeightBalanceOfT2)
		if err != nil {
			return err
		}
		return
	case 9:
		ty.IsSetMaxPreProps = true
		err = decoder.Decode(&ty.AsSetMaxPrePropsDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetMaxPrePropsMax1)
		if err != nil {
			return err
		}
		return
	case 10:
		ty.IsVoteModelUpdate = true
		err = decoder.Decode(&ty.AsVoteModelUpdateDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsVoteModelUpdateModel1)
		if err != nil {
			return err
		}
		return
	case 11:
		ty.IsPeriodUpdate = true
		err = decoder.Decode(&ty.AsPeriodUpdateDaoId0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeGovPalletEvent) Variant() (uint8, error) {
	if ty.IsProposed {
		return 0, nil
	}
	if ty.IsRecreate {
		return 1, nil
	}
	if ty.IsStartTable {
		return 2, nil
	}
	if ty.IsVote {
		return 3, nil
	}
	if ty.IsCancelVote {
		return 4, nil
	}
	if ty.IsEnactProposal {
		return 5, nil
	}
	if ty.IsUnlock {
		return 6, nil
	}
	if ty.IsUnreserved {
		return 7, nil
	}
	if ty.IsSetMinVoteWeight {
		return 8, nil
	}
	if ty.IsSetMaxPreProps {
		return 9, nil
	}
	if ty.IsVoteModelUpdate {
		return 10, nil
	}
	if ty.IsPeriodUpdate {
		return 11, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeGovPalletEvent) MarshalJSON() ([]byte, error) {
	if ty.IsProposed {
		m := map[string]interface{}{"WeteeGovPalletEvent::Proposed": map[string]interface{}{
			"AsProposedDaoAssetId0": ty.AsProposedDaoAssetId0,
			"AsProposedTHash1":      ty.AsProposedTHash1,
		}}
		return json.Marshal(m)
	}
	if ty.IsRecreate {
		m := map[string]interface{}{"WeteeGovPalletEvent::Recreate": map[string]interface{}{
			"AsRecreateBalanceOfT1": ty.AsRecreateBalanceOfT1,
			"AsRecreateDaoAssetId0": ty.AsRecreateDaoAssetId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsStartTable {
		m := map[string]interface{}{"WeteeGovPalletEvent::StartTable": map[string]interface{}{
			"AsStartTableDaoAssetId0": ty.AsStartTableDaoAssetId0,
			"AsStartTablePropIndex1":  ty.AsStartTablePropIndex1,
		}}
		return json.Marshal(m)
	}
	if ty.IsVote {
		m := map[string]interface{}{"WeteeGovPalletEvent::Vote": map[string]interface{}{
			"AsVoteDaoAssetId0": ty.AsVoteDaoAssetId0,
			"AsVotePropIndex1":  ty.AsVotePropIndex1,
			"AsVoteTPledge2":    ty.AsVoteTPledge2,
		}}
		return json.Marshal(m)
	}
	if ty.IsCancelVote {
		m := map[string]interface{}{"WeteeGovPalletEvent::CancelVote": map[string]interface{}{
			"AsCancelVoteDaoAssetId0": ty.AsCancelVoteDaoAssetId0,
			"AsCancelVotePropIndex1":  ty.AsCancelVotePropIndex1,
		}}
		return json.Marshal(m)
	}
	if ty.IsEnactProposal {
		m := map[string]interface{}{"WeteeGovPalletEvent::EnactProposal": map[string]interface{}{
			"AsEnactProposalDaoId0":  ty.AsEnactProposalDaoId0,
			"AsEnactProposalIndex1":  ty.AsEnactProposalIndex1,
			"AsEnactProposalResult2": ty.AsEnactProposalResult2,
		}}
		return json.Marshal(m)
	}
	if ty.IsUnlock {
		m := map[string]interface{}{"WeteeGovPalletEvent::Unlock": map[string]interface{}{
			"AsUnlockDaoAssetId1": ty.AsUnlockDaoAssetId1,
			"AsUnlockTAccountId0": ty.AsUnlockTAccountId0,
			"AsUnlockTPledge2":    ty.AsUnlockTPledge2,
		}}
		return json.Marshal(m)
	}
	if ty.IsUnreserved {
		m := map[string]interface{}{"WeteeGovPalletEvent::Unreserved": map[string]interface{}{
			"AsUnreservedBalanceOfT1": ty.AsUnreservedBalanceOfT1,
			"AsUnreservedTAccountId0": ty.AsUnreservedTAccountId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsSetMinVoteWeight {
		m := map[string]interface{}{"WeteeGovPalletEvent::SetMinVoteWeight": map[string]interface{}{
			"AsSetMinVoteWeightBalanceOfT2": ty.AsSetMinVoteWeightBalanceOfT2,
			"AsSetMinVoteWeightDaoAssetId0": ty.AsSetMinVoteWeightDaoAssetId0,
			"AsSetMinVoteWeightTCallId1":    ty.AsSetMinVoteWeightTCallId1,
		}}
		return json.Marshal(m)
	}
	if ty.IsSetMaxPreProps {
		m := map[string]interface{}{"WeteeGovPalletEvent::SetMaxPreProps": map[string]interface{}{
			"AsSetMaxPrePropsDaoId0": ty.AsSetMaxPrePropsDaoId0,
			"AsSetMaxPrePropsMax1":   ty.AsSetMaxPrePropsMax1,
		}}
		return json.Marshal(m)
	}
	if ty.IsVoteModelUpdate {
		m := map[string]interface{}{"WeteeGovPalletEvent::VoteModelUpdate": map[string]interface{}{
			"AsVoteModelUpdateDaoId0": ty.AsVoteModelUpdateDaoId0,
			"AsVoteModelUpdateModel1": ty.AsVoteModelUpdateModel1,
		}}
		return json.Marshal(m)
	}
	if ty.IsPeriodUpdate {
		m := map[string]interface{}{"WeteeGovPalletEvent::PeriodUpdate": ty.AsPeriodUpdateDaoId0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeTreasuryPalletEvent with id=57
type WeteeTreasuryPalletEvent struct {
	IsSpendApproved             bool
	AsSpendApprovedDaoId0       uint64
	AsSpendApprovedAmount1      types.U128
	AsSpendApprovedBeneficiary2 [32]byte
	IsSpendRejected             bool
	AsSpendRejectedDaoId0       uint64
	AsSpendRejectedAmount1      types.U128
	AsSpendRejectedBeneficiary2 [32]byte
}

func (ty WeteeTreasuryPalletEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsSpendApproved {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSpendApprovedDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSpendApprovedAmount1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSpendApprovedBeneficiary2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSpendRejected {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSpendRejectedDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSpendRejectedAmount1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSpendRejectedBeneficiary2)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeTreasuryPalletEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsSpendApproved = true
		err = decoder.Decode(&ty.AsSpendApprovedDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSpendApprovedAmount1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSpendApprovedBeneficiary2)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsSpendRejected = true
		err = decoder.Decode(&ty.AsSpendRejectedDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSpendRejectedAmount1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSpendRejectedBeneficiary2)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeTreasuryPalletEvent) Variant() (uint8, error) {
	if ty.IsSpendApproved {
		return 0, nil
	}
	if ty.IsSpendRejected {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeTreasuryPalletEvent) MarshalJSON() ([]byte, error) {
	if ty.IsSpendApproved {
		m := map[string]interface{}{"WeteeTreasuryPalletEvent::SpendApproved": map[string]interface{}{
			"AsSpendApprovedAmount1":      ty.AsSpendApprovedAmount1,
			"AsSpendApprovedBeneficiary2": ty.AsSpendApprovedBeneficiary2,
			"AsSpendApprovedDaoId0":       ty.AsSpendApprovedDaoId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsSpendRejected {
		m := map[string]interface{}{"WeteeTreasuryPalletEvent::SpendRejected": map[string]interface{}{
			"AsSpendRejectedAmount1":      ty.AsSpendRejectedAmount1,
			"AsSpendRejectedBeneficiary2": ty.AsSpendRejectedBeneficiary2,
			"AsSpendRejectedDaoId0":       ty.AsSpendRejectedDaoId0,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteePrimitivesTypesWorkType with id=60
type WorkType struct {
	IsAPP  bool
	IsTASK bool
}

func (ty WorkType) Encode(encoder scale.Encoder) (err error) {
	if ty.IsAPP {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTASK {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WorkType) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsAPP = true
		return
	case 1:
		ty.IsTASK = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WorkType) Variant() (uint8, error) {
	if ty.IsAPP {
		return 0, nil
	}
	if ty.IsTASK {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WorkType) MarshalJSON() ([]byte, error) {
	if ty.IsAPP {
		return json.Marshal("WorkType::APP")
	}
	if ty.IsTASK {
		return json.Marshal("WorkType::TASK")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated wetee_primitives_types_WorkId with id={{false [59]}}
type WorkId struct {
	// Field 0 with TypeId=60
	Wtype WorkType
	// Field 1 with TypeId=4
	Id uint64
}

// Generated WeteeAppPalletEvent with id=58
type WeteeAppPalletEvent struct {
	IsCreatedApp         bool
	AsCreatedAppCreator0 [32]byte
	AsCreatedAppId1      uint64
	IsAppRuning          bool
	AsAppRuningCreator0  [32]byte
	AsAppRuningId1       uint64
	IsAppStop            bool
	AsAppStopCreator0    [32]byte
	AsAppStopId1         uint64
	IsCharge             bool
	AsChargeFrom0        [32]byte
	AsChargeTo1          [32]byte
	AsChargeAmount2      types.U128
	IsPayRunFee          bool
	AsPayRunFeeFrom0     [32]byte
	AsPayRunFeeTo1       [32]byte
	AsPayRunFeeAmount2   types.U128
	IsWorkUpdated        bool
	AsWorkUpdatedUser0   [32]byte
	AsWorkUpdatedWorkId1 WorkId
	IsWorkStopped        bool
	AsWorkStoppedUser0   [32]byte
	AsWorkStoppedWorkId1 WorkId
}

func (ty WeteeAppPalletEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsCreatedApp {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreatedAppCreator0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreatedAppId1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsAppRuning {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsAppRuningCreator0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsAppRuningId1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsAppStop {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsAppStopCreator0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsAppStopId1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsCharge {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsChargeFrom0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsChargeTo1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsChargeAmount2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsPayRunFee {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsPayRunFeeFrom0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsPayRunFeeTo1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsPayRunFeeAmount2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWorkUpdated {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWorkUpdatedUser0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWorkUpdatedWorkId1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWorkStopped {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWorkStoppedUser0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWorkStoppedWorkId1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeAppPalletEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsCreatedApp = true
		err = decoder.Decode(&ty.AsCreatedAppCreator0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreatedAppId1)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsAppRuning = true
		err = decoder.Decode(&ty.AsAppRuningCreator0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsAppRuningId1)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsAppStop = true
		err = decoder.Decode(&ty.AsAppStopCreator0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsAppStopId1)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsCharge = true
		err = decoder.Decode(&ty.AsChargeFrom0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsChargeTo1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsChargeAmount2)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsPayRunFee = true
		err = decoder.Decode(&ty.AsPayRunFeeFrom0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsPayRunFeeTo1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsPayRunFeeAmount2)
		if err != nil {
			return err
		}
		return
	case 5:
		ty.IsWorkUpdated = true
		err = decoder.Decode(&ty.AsWorkUpdatedUser0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsWorkUpdatedWorkId1)
		if err != nil {
			return err
		}
		return
	case 6:
		ty.IsWorkStopped = true
		err = decoder.Decode(&ty.AsWorkStoppedUser0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsWorkStoppedWorkId1)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeAppPalletEvent) Variant() (uint8, error) {
	if ty.IsCreatedApp {
		return 0, nil
	}
	if ty.IsAppRuning {
		return 1, nil
	}
	if ty.IsAppStop {
		return 2, nil
	}
	if ty.IsCharge {
		return 3, nil
	}
	if ty.IsPayRunFee {
		return 4, nil
	}
	if ty.IsWorkUpdated {
		return 5, nil
	}
	if ty.IsWorkStopped {
		return 6, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeAppPalletEvent) MarshalJSON() ([]byte, error) {
	if ty.IsCreatedApp {
		m := map[string]interface{}{"WeteeAppPalletEvent::CreatedApp": map[string]interface{}{
			"AsCreatedAppCreator0": ty.AsCreatedAppCreator0,
			"AsCreatedAppId1":      ty.AsCreatedAppId1,
		}}
		return json.Marshal(m)
	}
	if ty.IsAppRuning {
		m := map[string]interface{}{"WeteeAppPalletEvent::AppRuning": map[string]interface{}{
			"AsAppRuningCreator0": ty.AsAppRuningCreator0,
			"AsAppRuningId1":      ty.AsAppRuningId1,
		}}
		return json.Marshal(m)
	}
	if ty.IsAppStop {
		m := map[string]interface{}{"WeteeAppPalletEvent::AppStop": map[string]interface{}{
			"AsAppStopCreator0": ty.AsAppStopCreator0,
			"AsAppStopId1":      ty.AsAppStopId1,
		}}
		return json.Marshal(m)
	}
	if ty.IsCharge {
		m := map[string]interface{}{"WeteeAppPalletEvent::Charge": map[string]interface{}{
			"AsChargeAmount2": ty.AsChargeAmount2,
			"AsChargeFrom0":   ty.AsChargeFrom0,
			"AsChargeTo1":     ty.AsChargeTo1,
		}}
		return json.Marshal(m)
	}
	if ty.IsPayRunFee {
		m := map[string]interface{}{"WeteeAppPalletEvent::PayRunFee": map[string]interface{}{
			"AsPayRunFeeAmount2": ty.AsPayRunFeeAmount2,
			"AsPayRunFeeFrom0":   ty.AsPayRunFeeFrom0,
			"AsPayRunFeeTo1":     ty.AsPayRunFeeTo1,
		}}
		return json.Marshal(m)
	}
	if ty.IsWorkUpdated {
		m := map[string]interface{}{"WeteeAppPalletEvent::WorkUpdated": map[string]interface{}{
			"AsWorkUpdatedUser0":   ty.AsWorkUpdatedUser0,
			"AsWorkUpdatedWorkId1": ty.AsWorkUpdatedWorkId1,
		}}
		return json.Marshal(m)
	}
	if ty.IsWorkStopped {
		m := map[string]interface{}{"WeteeAppPalletEvent::WorkStopped": map[string]interface{}{
			"AsWorkStoppedUser0":   ty.AsWorkStoppedUser0,
			"AsWorkStoppedWorkId1": ty.AsWorkStoppedWorkId1,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeTaskPalletEvent with id=61
type WeteeTaskPalletEvent struct {
	IsCreatedTask         bool
	AsCreatedTaskCreator0 [32]byte
	AsCreatedTaskId1      uint64
	IsTaskRuning          bool
	AsTaskRuningCreator0  [32]byte
	AsTaskRuningId1       uint64
	IsTaskStop            bool
	AsTaskStopCreator0    [32]byte
	AsTaskStopId1         uint64
	IsCharge              bool
	AsChargeFrom0         [32]byte
	AsChargeTo1           [32]byte
	AsChargeAmount2       types.U128
	IsPayRunFee           bool
	AsPayRunFeeFrom0      [32]byte
	AsPayRunFeeTo1        [32]byte
	AsPayRunFeeAmount2    types.U128
}

func (ty WeteeTaskPalletEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsCreatedTask {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreatedTaskCreator0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreatedTaskId1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTaskRuning {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskRuningCreator0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskRuningId1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTaskStop {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskStopCreator0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskStopId1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsCharge {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsChargeFrom0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsChargeTo1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsChargeAmount2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsPayRunFee {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsPayRunFeeFrom0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsPayRunFeeTo1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsPayRunFeeAmount2)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeTaskPalletEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsCreatedTask = true
		err = decoder.Decode(&ty.AsCreatedTaskCreator0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreatedTaskId1)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsTaskRuning = true
		err = decoder.Decode(&ty.AsTaskRuningCreator0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTaskRuningId1)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsTaskStop = true
		err = decoder.Decode(&ty.AsTaskStopCreator0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTaskStopId1)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsCharge = true
		err = decoder.Decode(&ty.AsChargeFrom0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsChargeTo1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsChargeAmount2)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsPayRunFee = true
		err = decoder.Decode(&ty.AsPayRunFeeFrom0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsPayRunFeeTo1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsPayRunFeeAmount2)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeTaskPalletEvent) Variant() (uint8, error) {
	if ty.IsCreatedTask {
		return 0, nil
	}
	if ty.IsTaskRuning {
		return 1, nil
	}
	if ty.IsTaskStop {
		return 2, nil
	}
	if ty.IsCharge {
		return 3, nil
	}
	if ty.IsPayRunFee {
		return 4, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeTaskPalletEvent) MarshalJSON() ([]byte, error) {
	if ty.IsCreatedTask {
		m := map[string]interface{}{"WeteeTaskPalletEvent::CreatedTask": map[string]interface{}{
			"AsCreatedTaskCreator0": ty.AsCreatedTaskCreator0,
			"AsCreatedTaskId1":      ty.AsCreatedTaskId1,
		}}
		return json.Marshal(m)
	}
	if ty.IsTaskRuning {
		m := map[string]interface{}{"WeteeTaskPalletEvent::TaskRuning": map[string]interface{}{
			"AsTaskRuningCreator0": ty.AsTaskRuningCreator0,
			"AsTaskRuningId1":      ty.AsTaskRuningId1,
		}}
		return json.Marshal(m)
	}
	if ty.IsTaskStop {
		m := map[string]interface{}{"WeteeTaskPalletEvent::TaskStop": map[string]interface{}{
			"AsTaskStopCreator0": ty.AsTaskStopCreator0,
			"AsTaskStopId1":      ty.AsTaskStopId1,
		}}
		return json.Marshal(m)
	}
	if ty.IsCharge {
		m := map[string]interface{}{"WeteeTaskPalletEvent::Charge": map[string]interface{}{
			"AsChargeAmount2": ty.AsChargeAmount2,
			"AsChargeFrom0":   ty.AsChargeFrom0,
			"AsChargeTo1":     ty.AsChargeTo1,
		}}
		return json.Marshal(m)
	}
	if ty.IsPayRunFee {
		m := map[string]interface{}{"WeteeTaskPalletEvent::PayRunFee": map[string]interface{}{
			"AsPayRunFeeAmount2": ty.AsPayRunFeeAmount2,
			"AsPayRunFeeFrom0":   ty.AsPayRunFeeFrom0,
			"AsPayRunFeeTo1":     ty.AsPayRunFeeTo1,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeWorkerPalletEvent with id=62
type WeteeWorkerPalletEvent struct {
	IsClusterCreated         bool
	AsClusterCreatedCreator0 [32]byte
	IsWorkRuning             bool
	AsWorkRuningUser0        [32]byte
	AsWorkRuningWorkId1      WorkId
}

func (ty WeteeWorkerPalletEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsClusterCreated {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterCreatedCreator0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWorkRuning {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWorkRuningUser0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWorkRuningWorkId1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeWorkerPalletEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsClusterCreated = true
		err = decoder.Decode(&ty.AsClusterCreatedCreator0)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsWorkRuning = true
		err = decoder.Decode(&ty.AsWorkRuningUser0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsWorkRuningWorkId1)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeWorkerPalletEvent) Variant() (uint8, error) {
	if ty.IsClusterCreated {
		return 0, nil
	}
	if ty.IsWorkRuning {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeWorkerPalletEvent) MarshalJSON() ([]byte, error) {
	if ty.IsClusterCreated {
		m := map[string]interface{}{"WeteeWorkerPalletEvent::ClusterCreated": ty.AsClusterCreatedCreator0}
		return json.Marshal(m)
	}
	if ty.IsWorkRuning {
		m := map[string]interface{}{"WeteeWorkerPalletEvent::WorkRuning": map[string]interface{}{
			"AsWorkRuningUser0":   ty.AsWorkRuningUser0,
			"AsWorkRuningWorkId1": ty.AsWorkRuningWorkId1,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeRuntimeRuntimeEvent with id=20
type RuntimeEvent struct {
	IsSystem                   bool
	AsSystemField0             *FrameSystemPalletEvent
	IsGrandpa                  bool
	AsGrandpaField0            *PalletGrandpaPalletEvent
	IsBalances                 bool
	AsBalancesField0           *PalletBalancesPalletEvent
	IsTransactionPayment       bool
	AsTransactionPaymentField0 *PalletTransactionPaymentPalletEvent
	IsSudo                     bool
	AsSudoField0               *PalletSudoPalletEvent
	IsTokens                   bool
	AsTokensField0             *OrmlTokensModuleEvent
	IsMessageQueue             bool
	AsMessageQueueField0       *PalletMessageQueuePalletEvent
	IsWeteeOrg                 bool
	AsWeteeOrgField0           *WeteeOrgPalletEvent
	IsWeteeAsset               bool
	AsWeteeAssetField0         *WeteeAssetsPalletEvent
	IsWeteeSudo                bool
	AsWeteeSudoField0          *WeteeSudoPalletEvent
	IsWeteeGuild               bool
	AsWeteeGuildField0         *WeteeGuildPalletEvent
	IsWeteeProject             bool
	AsWeteeProjectField0       *WeteeProjectPalletEvent
	IsWeteeGov                 bool
	AsWeteeGovField0           *WeteeGovPalletEvent
	IsWeteeTreasury            bool
	AsWeteeTreasuryField0      *WeteeTreasuryPalletEvent
	IsWeteeApp                 bool
	AsWeteeAppField0           *WeteeAppPalletEvent
	IsWeteeTask                bool
	AsWeteeTaskField0          *WeteeTaskPalletEvent
	IsWeteeWorker              bool
	AsWeteeWorkerField0        *WeteeWorkerPalletEvent
}

func (ty RuntimeEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsSystem {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSystemField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsGrandpa {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsGrandpaField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsBalances {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBalancesField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTransactionPayment {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransactionPaymentField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSudo {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSudoField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTokens {
		err = encoder.PushByte(7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTokensField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsMessageQueue {
		err = encoder.PushByte(9)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsMessageQueueField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWeteeOrg {
		err = encoder.PushByte(10)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWeteeOrgField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWeteeAsset {
		err = encoder.PushByte(11)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWeteeAssetField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWeteeSudo {
		err = encoder.PushByte(12)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWeteeSudoField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWeteeGuild {
		err = encoder.PushByte(13)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWeteeGuildField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWeteeProject {
		err = encoder.PushByte(14)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWeteeProjectField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWeteeGov {
		err = encoder.PushByte(15)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWeteeGovField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWeteeTreasury {
		err = encoder.PushByte(16)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWeteeTreasuryField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWeteeApp {
		err = encoder.PushByte(17)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWeteeAppField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWeteeTask {
		err = encoder.PushByte(18)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWeteeTaskField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWeteeWorker {
		err = encoder.PushByte(19)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWeteeWorkerField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *RuntimeEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsSystem = true
		var tmp FrameSystemPalletEvent
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsSystemField0 = &tmp
		return
	case 3:
		ty.IsGrandpa = true
		var tmp PalletGrandpaPalletEvent
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsGrandpaField0 = &tmp
		return
	case 4:
		ty.IsBalances = true
		var tmp PalletBalancesPalletEvent
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsBalancesField0 = &tmp
		return
	case 5:
		ty.IsTransactionPayment = true
		var tmp PalletTransactionPaymentPalletEvent
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsTransactionPaymentField0 = &tmp
		return
	case 6:
		ty.IsSudo = true
		var tmp PalletSudoPalletEvent
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsSudoField0 = &tmp
		return
	case 7:
		ty.IsTokens = true
		var tmp OrmlTokensModuleEvent
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsTokensField0 = &tmp
		return
	case 9:
		ty.IsMessageQueue = true
		var tmp PalletMessageQueuePalletEvent
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsMessageQueueField0 = &tmp
		return
	case 10:
		ty.IsWeteeOrg = true
		var tmp WeteeOrgPalletEvent
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsWeteeOrgField0 = &tmp
		return
	case 11:
		ty.IsWeteeAsset = true
		var tmp WeteeAssetsPalletEvent
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsWeteeAssetField0 = &tmp
		return
	case 12:
		ty.IsWeteeSudo = true
		var tmp WeteeSudoPalletEvent
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsWeteeSudoField0 = &tmp
		return
	case 13:
		ty.IsWeteeGuild = true
		var tmp WeteeGuildPalletEvent
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsWeteeGuildField0 = &tmp
		return
	case 14:
		ty.IsWeteeProject = true
		var tmp WeteeProjectPalletEvent
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsWeteeProjectField0 = &tmp
		return
	case 15:
		ty.IsWeteeGov = true
		var tmp WeteeGovPalletEvent
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsWeteeGovField0 = &tmp
		return
	case 16:
		ty.IsWeteeTreasury = true
		var tmp WeteeTreasuryPalletEvent
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsWeteeTreasuryField0 = &tmp
		return
	case 17:
		ty.IsWeteeApp = true
		var tmp WeteeAppPalletEvent
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsWeteeAppField0 = &tmp
		return
	case 18:
		ty.IsWeteeTask = true
		var tmp WeteeTaskPalletEvent
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsWeteeTaskField0 = &tmp
		return
	case 19:
		ty.IsWeteeWorker = true
		var tmp WeteeWorkerPalletEvent
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsWeteeWorkerField0 = &tmp
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *RuntimeEvent) Variant() (uint8, error) {
	if ty.IsSystem {
		return 0, nil
	}
	if ty.IsGrandpa {
		return 3, nil
	}
	if ty.IsBalances {
		return 4, nil
	}
	if ty.IsTransactionPayment {
		return 5, nil
	}
	if ty.IsSudo {
		return 6, nil
	}
	if ty.IsTokens {
		return 7, nil
	}
	if ty.IsMessageQueue {
		return 9, nil
	}
	if ty.IsWeteeOrg {
		return 10, nil
	}
	if ty.IsWeteeAsset {
		return 11, nil
	}
	if ty.IsWeteeSudo {
		return 12, nil
	}
	if ty.IsWeteeGuild {
		return 13, nil
	}
	if ty.IsWeteeProject {
		return 14, nil
	}
	if ty.IsWeteeGov {
		return 15, nil
	}
	if ty.IsWeteeTreasury {
		return 16, nil
	}
	if ty.IsWeteeApp {
		return 17, nil
	}
	if ty.IsWeteeTask {
		return 18, nil
	}
	if ty.IsWeteeWorker {
		return 19, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty RuntimeEvent) MarshalJSON() ([]byte, error) {
	if ty.IsSystem {
		m := map[string]interface{}{"RuntimeEvent::System": ty.AsSystemField0}
		return json.Marshal(m)
	}
	if ty.IsGrandpa {
		m := map[string]interface{}{"RuntimeEvent::Grandpa": ty.AsGrandpaField0}
		return json.Marshal(m)
	}
	if ty.IsBalances {
		m := map[string]interface{}{"RuntimeEvent::Balances": ty.AsBalancesField0}
		return json.Marshal(m)
	}
	if ty.IsTransactionPayment {
		m := map[string]interface{}{"RuntimeEvent::TransactionPayment": ty.AsTransactionPaymentField0}
		return json.Marshal(m)
	}
	if ty.IsSudo {
		m := map[string]interface{}{"RuntimeEvent::Sudo": ty.AsSudoField0}
		return json.Marshal(m)
	}
	if ty.IsTokens {
		m := map[string]interface{}{"RuntimeEvent::Tokens": ty.AsTokensField0}
		return json.Marshal(m)
	}
	if ty.IsMessageQueue {
		m := map[string]interface{}{"RuntimeEvent::MessageQueue": ty.AsMessageQueueField0}
		return json.Marshal(m)
	}
	if ty.IsWeteeOrg {
		m := map[string]interface{}{"RuntimeEvent::WeteeOrg": ty.AsWeteeOrgField0}
		return json.Marshal(m)
	}
	if ty.IsWeteeAsset {
		m := map[string]interface{}{"RuntimeEvent::WeteeAsset": ty.AsWeteeAssetField0}
		return json.Marshal(m)
	}
	if ty.IsWeteeSudo {
		m := map[string]interface{}{"RuntimeEvent::WeteeSudo": ty.AsWeteeSudoField0}
		return json.Marshal(m)
	}
	if ty.IsWeteeGuild {
		m := map[string]interface{}{"RuntimeEvent::WeteeGuild": ty.AsWeteeGuildField0}
		return json.Marshal(m)
	}
	if ty.IsWeteeProject {
		m := map[string]interface{}{"RuntimeEvent::WeteeProject": ty.AsWeteeProjectField0}
		return json.Marshal(m)
	}
	if ty.IsWeteeGov {
		m := map[string]interface{}{"RuntimeEvent::WeteeGov": ty.AsWeteeGovField0}
		return json.Marshal(m)
	}
	if ty.IsWeteeTreasury {
		m := map[string]interface{}{"RuntimeEvent::WeteeTreasury": ty.AsWeteeTreasuryField0}
		return json.Marshal(m)
	}
	if ty.IsWeteeApp {
		m := map[string]interface{}{"RuntimeEvent::WeteeApp": ty.AsWeteeAppField0}
		return json.Marshal(m)
	}
	if ty.IsWeteeTask {
		m := map[string]interface{}{"RuntimeEvent::WeteeTask": ty.AsWeteeTaskField0}
		return json.Marshal(m)
	}
	if ty.IsWeteeWorker {
		m := map[string]interface{}{"RuntimeEvent::WeteeWorker": ty.AsWeteeWorkerField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated frame_system_EventRecord with id={{false [19]}}
type EventRecord struct {
	// Field 0 with TypeId=63
	Phase Phase
	// Field 1 with TypeId=20
	Event RuntimeEvent
	// Field 2 with TypeId=64
	Topics [][32]byte
}

// Tuple type generated from metadata id 66
type TupleOfUint64Uint32 struct {
	Elem0 uint64
	Elem1 uint32
}

// Generated frame_system_LastRuntimeUpgradeInfo with id={{false [67]}}
type LastRuntimeUpgradeInfo struct {
	// Field 0 with TypeId=68
	SpecVersion types.UCompact
	// Field 1 with TypeId=69
	SpecName string
}

// Tuple type generated from metadata id 72
type TupleOfByteSliceByteSlice struct {
	Elem0 []byte
	Elem1 []byte
}

// Generated FrameSystemPalletCall with id=70
type FrameSystemPalletCall struct {
	IsRemark                    bool
	AsRemarkRemark0             []byte
	IsSetHeapPages              bool
	AsSetHeapPagesPages0        uint64
	IsSetCode                   bool
	AsSetCodeCode0              []byte
	IsSetCodeWithoutChecks      bool
	AsSetCodeWithoutChecksCode0 []byte
	IsSetStorage                bool
	AsSetStorageItems0          []TupleOfByteSliceByteSlice
	IsKillStorage               bool
	AsKillStorageKeys0          [][]byte
	IsKillPrefix                bool
	AsKillPrefixPrefix0         []byte
	AsKillPrefixSubkeys1        uint32
	IsRemarkWithEvent           bool
	AsRemarkWithEventRemark0    []byte
}

func (ty FrameSystemPalletCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsRemark {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRemarkRemark0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetHeapPages {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetHeapPagesPages0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetCode {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetCodeCode0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetCodeWithoutChecks {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetCodeWithoutChecksCode0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetStorage {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetStorageItems0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsKillStorage {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsKillStorageKeys0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsKillPrefix {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsKillPrefixPrefix0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsKillPrefixSubkeys1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsRemarkWithEvent {
		err = encoder.PushByte(7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRemarkWithEventRemark0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *FrameSystemPalletCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsRemark = true
		err = decoder.Decode(&ty.AsRemarkRemark0)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsSetHeapPages = true
		err = decoder.Decode(&ty.AsSetHeapPagesPages0)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsSetCode = true
		err = decoder.Decode(&ty.AsSetCodeCode0)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsSetCodeWithoutChecks = true
		err = decoder.Decode(&ty.AsSetCodeWithoutChecksCode0)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsSetStorage = true
		err = decoder.Decode(&ty.AsSetStorageItems0)
		if err != nil {
			return err
		}
		return
	case 5:
		ty.IsKillStorage = true
		err = decoder.Decode(&ty.AsKillStorageKeys0)
		if err != nil {
			return err
		}
		return
	case 6:
		ty.IsKillPrefix = true
		err = decoder.Decode(&ty.AsKillPrefixPrefix0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsKillPrefixSubkeys1)
		if err != nil {
			return err
		}
		return
	case 7:
		ty.IsRemarkWithEvent = true
		err = decoder.Decode(&ty.AsRemarkWithEventRemark0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *FrameSystemPalletCall) Variant() (uint8, error) {
	if ty.IsRemark {
		return 0, nil
	}
	if ty.IsSetHeapPages {
		return 1, nil
	}
	if ty.IsSetCode {
		return 2, nil
	}
	if ty.IsSetCodeWithoutChecks {
		return 3, nil
	}
	if ty.IsSetStorage {
		return 4, nil
	}
	if ty.IsKillStorage {
		return 5, nil
	}
	if ty.IsKillPrefix {
		return 6, nil
	}
	if ty.IsRemarkWithEvent {
		return 7, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty FrameSystemPalletCall) MarshalJSON() ([]byte, error) {
	if ty.IsRemark {
		m := map[string]interface{}{"FrameSystemPalletCall::remark": ty.AsRemarkRemark0}
		return json.Marshal(m)
	}
	if ty.IsSetHeapPages {
		m := map[string]interface{}{"FrameSystemPalletCall::set_heap_pages": ty.AsSetHeapPagesPages0}
		return json.Marshal(m)
	}
	if ty.IsSetCode {
		m := map[string]interface{}{"FrameSystemPalletCall::set_code": ty.AsSetCodeCode0}
		return json.Marshal(m)
	}
	if ty.IsSetCodeWithoutChecks {
		m := map[string]interface{}{"FrameSystemPalletCall::set_code_without_checks": ty.AsSetCodeWithoutChecksCode0}
		return json.Marshal(m)
	}
	if ty.IsSetStorage {
		m := map[string]interface{}{"FrameSystemPalletCall::set_storage": ty.AsSetStorageItems0}
		return json.Marshal(m)
	}
	if ty.IsKillStorage {
		m := map[string]interface{}{"FrameSystemPalletCall::kill_storage": ty.AsKillStorageKeys0}
		return json.Marshal(m)
	}
	if ty.IsKillPrefix {
		m := map[string]interface{}{"FrameSystemPalletCall::kill_prefix": map[string]interface{}{
			"AsKillPrefixPrefix0":  ty.AsKillPrefixPrefix0,
			"AsKillPrefixSubkeys1": ty.AsKillPrefixSubkeys1,
		}}
		return json.Marshal(m)
	}
	if ty.IsRemarkWithEvent {
		m := map[string]interface{}{"FrameSystemPalletCall::remark_with_event": ty.AsRemarkWithEventRemark0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated PalletTimestampPalletCall with id=87
type PalletTimestampPalletCall struct {
	IsSet     bool
	AsSetNow0 types.UCompact
}

func (ty PalletTimestampPalletCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsSet {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetNow0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *PalletTimestampPalletCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsSet = true
		err = decoder.Decode(&ty.AsSetNow0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *PalletTimestampPalletCall) Variant() (uint8, error) {
	if ty.IsSet {
		return 0, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty PalletTimestampPalletCall) MarshalJSON() ([]byte, error) {
	if ty.IsSet {
		m := map[string]interface{}{"PalletTimestampPalletCall::set": ty.AsSetNow0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated finality_grandpa_Prevote with id={{false [102]}}
type Prevote struct {
	// Field 0 with TypeId=12
	TargetHash [32]byte
	// Field 1 with TypeId=4
	TargetNumber uint64
}

// Tuple type generated from metadata id 106
type TupleOfPrevoteByteArray64 struct {
	Elem0 Prevote
	Elem1 [64]byte
}

// Generated finality_grandpa_Equivocation with id={{false [101]}}
type EquivocationIdByteArray32 struct {
	// Field 0 with TypeId=4
	RoundNumber uint64
	// Field 1 with TypeId=33
	Identity [32]byte
	// Field 2 with TypeId=106
	First TupleOfPrevoteByteArray64
	// Field 3 with TypeId=106
	Second TupleOfPrevoteByteArray64
}

// Generated finality_grandpa_Precommit with id={{false [108]}}
type Precommit struct {
	// Field 0 with TypeId=12
	TargetHash [32]byte
	// Field 1 with TypeId=4
	TargetNumber uint64
}

// Tuple type generated from metadata id 109
type TupleOfPrecommitByteArray64 struct {
	Elem0 Precommit
	Elem1 [64]byte
}

// Generated finality_grandpa_Equivocation with id={{false [107]}}
type EquivocationIdByteArray32VPrecommit struct {
	// Field 0 with TypeId=4
	RoundNumber uint64
	// Field 1 with TypeId=33
	Identity [32]byte
	// Field 2 with TypeId=109
	First TupleOfPrecommitByteArray64
	// Field 3 with TypeId=109
	Second TupleOfPrecommitByteArray64
}

// Generated SpConsensusGrandpaEquivocation with id=100
type Equivocation struct {
	IsPrevote         bool
	AsPrevoteField0   EquivocationIdByteArray32
	IsPrecommit       bool
	AsPrecommitField0 EquivocationIdByteArray32VPrecommit
}

func (ty Equivocation) Encode(encoder scale.Encoder) (err error) {
	if ty.IsPrevote {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsPrevoteField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsPrecommit {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsPrecommitField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *Equivocation) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsPrevote = true
		err = decoder.Decode(&ty.AsPrevoteField0)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsPrecommit = true
		err = decoder.Decode(&ty.AsPrecommitField0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *Equivocation) Variant() (uint8, error) {
	if ty.IsPrevote {
		return 0, nil
	}
	if ty.IsPrecommit {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty Equivocation) MarshalJSON() ([]byte, error) {
	if ty.IsPrevote {
		m := map[string]interface{}{"Equivocation::Prevote": ty.AsPrevoteField0}
		return json.Marshal(m)
	}
	if ty.IsPrecommit {
		m := map[string]interface{}{"Equivocation::Precommit": ty.AsPrecommitField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated sp_consensus_grandpa_EquivocationProof with id={{false [99]}}
type EquivocationProof struct {
	// Field 0 with TypeId=4
	SetId uint64
	// Field 1 with TypeId=100
	Equivocation Equivocation
}

// Generated PalletGrandpaPalletCall with id=98
type PalletGrandpaPalletCall struct {
	IsReportEquivocation                           bool
	AsReportEquivocationEquivocationProof0         *EquivocationProof
	AsReportEquivocationKeyOwnerProof1             struct{}
	IsReportEquivocationUnsigned                   bool
	AsReportEquivocationUnsignedEquivocationProof0 *EquivocationProof
	AsReportEquivocationUnsignedKeyOwnerProof1     struct{}
	IsNoteStalled                                  bool
	AsNoteStalledDelay0                            uint64
	AsNoteStalledBestFinalizedBlockNumber1         uint64
}

func (ty PalletGrandpaPalletCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsReportEquivocation {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReportEquivocationEquivocationProof0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReportEquivocationKeyOwnerProof1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsReportEquivocationUnsigned {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReportEquivocationUnsignedEquivocationProof0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReportEquivocationUnsignedKeyOwnerProof1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsNoteStalled {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsNoteStalledDelay0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsNoteStalledBestFinalizedBlockNumber1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *PalletGrandpaPalletCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsReportEquivocation = true
		err = decoder.Decode(&ty.AsReportEquivocationEquivocationProof0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsReportEquivocationKeyOwnerProof1)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsReportEquivocationUnsigned = true
		err = decoder.Decode(&ty.AsReportEquivocationUnsignedEquivocationProof0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsReportEquivocationUnsignedKeyOwnerProof1)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsNoteStalled = true
		err = decoder.Decode(&ty.AsNoteStalledDelay0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsNoteStalledBestFinalizedBlockNumber1)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *PalletGrandpaPalletCall) Variant() (uint8, error) {
	if ty.IsReportEquivocation {
		return 0, nil
	}
	if ty.IsReportEquivocationUnsigned {
		return 1, nil
	}
	if ty.IsNoteStalled {
		return 2, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty PalletGrandpaPalletCall) MarshalJSON() ([]byte, error) {
	if ty.IsReportEquivocation {
		m := map[string]interface{}{"PalletGrandpaPalletCall::report_equivocation": map[string]interface{}{
			"AsReportEquivocationEquivocationProof0": ty.AsReportEquivocationEquivocationProof0,
			"AsReportEquivocationKeyOwnerProof1":     ty.AsReportEquivocationKeyOwnerProof1,
		}}
		return json.Marshal(m)
	}
	if ty.IsReportEquivocationUnsigned {
		m := map[string]interface{}{"PalletGrandpaPalletCall::report_equivocation_unsigned": map[string]interface{}{
			"AsReportEquivocationUnsignedEquivocationProof0": ty.AsReportEquivocationUnsignedEquivocationProof0,
			"AsReportEquivocationUnsignedKeyOwnerProof1":     ty.AsReportEquivocationUnsignedKeyOwnerProof1,
		}}
		return json.Marshal(m)
	}
	if ty.IsNoteStalled {
		m := map[string]interface{}{"PalletGrandpaPalletCall::note_stalled": map[string]interface{}{
			"AsNoteStalledBestFinalizedBlockNumber1": ty.AsNoteStalledBestFinalizedBlockNumber1,
			"AsNoteStalledDelay0":                    ty.AsNoteStalledDelay0,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated SpRuntimeMultiaddressMultiAddress with id=123
type MultiAddress struct {
	IsId              bool
	AsIdField0        [32]byte
	IsIndex           bool
	AsIndexField0     struct{}
	IsRaw             bool
	AsRawField0       []byte
	IsAddress32       bool
	AsAddress32Field0 [32]byte
	IsAddress20       bool
	AsAddress20Field0 [20]byte
}

func (ty MultiAddress) Encode(encoder scale.Encoder) (err error) {
	if ty.IsId {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsIdField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsIndex {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsIndexField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsRaw {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRawField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsAddress32 {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsAddress32Field0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsAddress20 {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsAddress20Field0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *MultiAddress) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsId = true
		err = decoder.Decode(&ty.AsIdField0)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsIndex = true
		err = decoder.Decode(&ty.AsIndexField0)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsRaw = true
		err = decoder.Decode(&ty.AsRawField0)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsAddress32 = true
		err = decoder.Decode(&ty.AsAddress32Field0)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsAddress20 = true
		err = decoder.Decode(&ty.AsAddress20Field0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *MultiAddress) Variant() (uint8, error) {
	if ty.IsId {
		return 0, nil
	}
	if ty.IsIndex {
		return 1, nil
	}
	if ty.IsRaw {
		return 2, nil
	}
	if ty.IsAddress32 {
		return 3, nil
	}
	if ty.IsAddress20 {
		return 4, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty MultiAddress) MarshalJSON() ([]byte, error) {
	if ty.IsId {
		m := map[string]interface{}{"MultiAddress::Id": ty.AsIdField0}
		return json.Marshal(m)
	}
	if ty.IsIndex {
		m := map[string]interface{}{"MultiAddress::Index": ty.AsIndexField0}
		return json.Marshal(m)
	}
	if ty.IsRaw {
		m := map[string]interface{}{"MultiAddress::Raw": ty.AsRawField0}
		return json.Marshal(m)
	}
	if ty.IsAddress32 {
		m := map[string]interface{}{"MultiAddress::Address32": ty.AsAddress32Field0}
		return json.Marshal(m)
	}
	if ty.IsAddress20 {
		m := map[string]interface{}{"MultiAddress::Address20": ty.AsAddress20Field0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated PalletBalancesPalletCall with id=122
type PalletBalancesPalletCall struct {
	IsTransferAllowDeath               bool
	AsTransferAllowDeathDest0          MultiAddress
	AsTransferAllowDeathValue1         types.UCompact
	IsSetBalanceDeprecated             bool
	AsSetBalanceDeprecatedWho0         MultiAddress
	AsSetBalanceDeprecatedNewFree1     types.UCompact
	AsSetBalanceDeprecatedOldReserved2 types.UCompact
	IsForceTransfer                    bool
	AsForceTransferSource0             MultiAddress
	AsForceTransferDest1               MultiAddress
	AsForceTransferValue2              types.UCompact
	IsTransferKeepAlive                bool
	AsTransferKeepAliveDest0           MultiAddress
	AsTransferKeepAliveValue1          types.UCompact
	IsTransferAll                      bool
	AsTransferAllDest0                 MultiAddress
	AsTransferAllKeepAlive1            bool
	IsForceUnreserve                   bool
	AsForceUnreserveWho0               MultiAddress
	AsForceUnreserveAmount1            types.U128
	IsUpgradeAccounts                  bool
	AsUpgradeAccountsWho0              [][32]byte
	IsTransfer                         bool
	AsTransferDest0                    MultiAddress
	AsTransferValue1                   types.UCompact
	IsForceSetBalance                  bool
	AsForceSetBalanceWho0              MultiAddress
	AsForceSetBalanceNewFree1          types.UCompact
}

func (ty PalletBalancesPalletCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsTransferAllowDeath {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferAllowDeathDest0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferAllowDeathValue1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetBalanceDeprecated {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetBalanceDeprecatedWho0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetBalanceDeprecatedNewFree1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetBalanceDeprecatedOldReserved2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsForceTransfer {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsForceTransferSource0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsForceTransferDest1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsForceTransferValue2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTransferKeepAlive {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferKeepAliveDest0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferKeepAliveValue1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTransferAll {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferAllDest0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferAllKeepAlive1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsForceUnreserve {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsForceUnreserveWho0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsForceUnreserveAmount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUpgradeAccounts {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpgradeAccountsWho0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTransfer {
		err = encoder.PushByte(7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferDest0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferValue1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsForceSetBalance {
		err = encoder.PushByte(8)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsForceSetBalanceWho0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsForceSetBalanceNewFree1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *PalletBalancesPalletCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsTransferAllowDeath = true
		err = decoder.Decode(&ty.AsTransferAllowDeathDest0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTransferAllowDeathValue1)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsSetBalanceDeprecated = true
		err = decoder.Decode(&ty.AsSetBalanceDeprecatedWho0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetBalanceDeprecatedNewFree1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetBalanceDeprecatedOldReserved2)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsForceTransfer = true
		err = decoder.Decode(&ty.AsForceTransferSource0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsForceTransferDest1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsForceTransferValue2)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsTransferKeepAlive = true
		err = decoder.Decode(&ty.AsTransferKeepAliveDest0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTransferKeepAliveValue1)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsTransferAll = true
		err = decoder.Decode(&ty.AsTransferAllDest0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTransferAllKeepAlive1)
		if err != nil {
			return err
		}
		return
	case 5:
		ty.IsForceUnreserve = true
		err = decoder.Decode(&ty.AsForceUnreserveWho0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsForceUnreserveAmount1)
		if err != nil {
			return err
		}
		return
	case 6:
		ty.IsUpgradeAccounts = true
		err = decoder.Decode(&ty.AsUpgradeAccountsWho0)
		if err != nil {
			return err
		}
		return
	case 7:
		ty.IsTransfer = true
		err = decoder.Decode(&ty.AsTransferDest0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTransferValue1)
		if err != nil {
			return err
		}
		return
	case 8:
		ty.IsForceSetBalance = true
		err = decoder.Decode(&ty.AsForceSetBalanceWho0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsForceSetBalanceNewFree1)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *PalletBalancesPalletCall) Variant() (uint8, error) {
	if ty.IsTransferAllowDeath {
		return 0, nil
	}
	if ty.IsSetBalanceDeprecated {
		return 1, nil
	}
	if ty.IsForceTransfer {
		return 2, nil
	}
	if ty.IsTransferKeepAlive {
		return 3, nil
	}
	if ty.IsTransferAll {
		return 4, nil
	}
	if ty.IsForceUnreserve {
		return 5, nil
	}
	if ty.IsUpgradeAccounts {
		return 6, nil
	}
	if ty.IsTransfer {
		return 7, nil
	}
	if ty.IsForceSetBalance {
		return 8, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty PalletBalancesPalletCall) MarshalJSON() ([]byte, error) {
	if ty.IsTransferAllowDeath {
		m := map[string]interface{}{"PalletBalancesPalletCall::transfer_allow_death": map[string]interface{}{
			"AsTransferAllowDeathDest0":  ty.AsTransferAllowDeathDest0,
			"AsTransferAllowDeathValue1": ty.AsTransferAllowDeathValue1,
		}}
		return json.Marshal(m)
	}
	if ty.IsSetBalanceDeprecated {
		m := map[string]interface{}{"PalletBalancesPalletCall::set_balance_deprecated": map[string]interface{}{
			"AsSetBalanceDeprecatedNewFree1":     ty.AsSetBalanceDeprecatedNewFree1,
			"AsSetBalanceDeprecatedOldReserved2": ty.AsSetBalanceDeprecatedOldReserved2,
			"AsSetBalanceDeprecatedWho0":         ty.AsSetBalanceDeprecatedWho0,
		}}
		return json.Marshal(m)
	}
	if ty.IsForceTransfer {
		m := map[string]interface{}{"PalletBalancesPalletCall::force_transfer": map[string]interface{}{
			"AsForceTransferDest1":   ty.AsForceTransferDest1,
			"AsForceTransferSource0": ty.AsForceTransferSource0,
			"AsForceTransferValue2":  ty.AsForceTransferValue2,
		}}
		return json.Marshal(m)
	}
	if ty.IsTransferKeepAlive {
		m := map[string]interface{}{"PalletBalancesPalletCall::transfer_keep_alive": map[string]interface{}{
			"AsTransferKeepAliveDest0":  ty.AsTransferKeepAliveDest0,
			"AsTransferKeepAliveValue1": ty.AsTransferKeepAliveValue1,
		}}
		return json.Marshal(m)
	}
	if ty.IsTransferAll {
		m := map[string]interface{}{"PalletBalancesPalletCall::transfer_all": map[string]interface{}{
			"AsTransferAllDest0":      ty.AsTransferAllDest0,
			"AsTransferAllKeepAlive1": ty.AsTransferAllKeepAlive1,
		}}
		return json.Marshal(m)
	}
	if ty.IsForceUnreserve {
		m := map[string]interface{}{"PalletBalancesPalletCall::force_unreserve": map[string]interface{}{
			"AsForceUnreserveAmount1": ty.AsForceUnreserveAmount1,
			"AsForceUnreserveWho0":    ty.AsForceUnreserveWho0,
		}}
		return json.Marshal(m)
	}
	if ty.IsUpgradeAccounts {
		m := map[string]interface{}{"PalletBalancesPalletCall::upgrade_accounts": ty.AsUpgradeAccountsWho0}
		return json.Marshal(m)
	}
	if ty.IsTransfer {
		m := map[string]interface{}{"PalletBalancesPalletCall::transfer": map[string]interface{}{
			"AsTransferDest0":  ty.AsTransferDest0,
			"AsTransferValue1": ty.AsTransferValue1,
		}}
		return json.Marshal(m)
	}
	if ty.IsForceSetBalance {
		m := map[string]interface{}{"PalletBalancesPalletCall::force_set_balance": map[string]interface{}{
			"AsForceSetBalanceNewFree1": ty.AsForceSetBalanceNewFree1,
			"AsForceSetBalanceWho0":     ty.AsForceSetBalanceWho0,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated PalletSudoPalletCall with id=131
type PalletSudoPalletCall struct {
	IsSudo                       bool
	AsSudoCall0                  *RuntimeCall
	IsSudoUncheckedWeight        bool
	AsSudoUncheckedWeightCall0   *RuntimeCall
	AsSudoUncheckedWeightWeight1 Weight
	IsSetKey                     bool
	AsSetKeyNew0                 *MultiAddress
	IsSudoAs                     bool
	AsSudoAsWho0                 MultiAddress
	AsSudoAsCall1                *RuntimeCall
}

func (ty PalletSudoPalletCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsSudo {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSudoCall0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSudoUncheckedWeight {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSudoUncheckedWeightCall0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSudoUncheckedWeightWeight1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetKey {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetKeyNew0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSudoAs {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSudoAsWho0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSudoAsCall1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *PalletSudoPalletCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsSudo = true
		var tmp RuntimeCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsSudoCall0 = &tmp
		return
	case 1:
		ty.IsSudoUncheckedWeight = true
		err = decoder.Decode(&ty.AsSudoUncheckedWeightCall0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSudoUncheckedWeightWeight1)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsSetKey = true
		var tmp MultiAddress
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsSetKeyNew0 = &tmp
		return
	case 3:
		ty.IsSudoAs = true
		err = decoder.Decode(&ty.AsSudoAsWho0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSudoAsCall1)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *PalletSudoPalletCall) Variant() (uint8, error) {
	if ty.IsSudo {
		return 0, nil
	}
	if ty.IsSudoUncheckedWeight {
		return 1, nil
	}
	if ty.IsSetKey {
		return 2, nil
	}
	if ty.IsSudoAs {
		return 3, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty PalletSudoPalletCall) MarshalJSON() ([]byte, error) {
	if ty.IsSudo {
		m := map[string]interface{}{"PalletSudoPalletCall::sudo": ty.AsSudoCall0}
		return json.Marshal(m)
	}
	if ty.IsSudoUncheckedWeight {
		m := map[string]interface{}{"PalletSudoPalletCall::sudo_unchecked_weight": map[string]interface{}{
			"AsSudoUncheckedWeightCall0":   ty.AsSudoUncheckedWeightCall0,
			"AsSudoUncheckedWeightWeight1": ty.AsSudoUncheckedWeightWeight1,
		}}
		return json.Marshal(m)
	}
	if ty.IsSetKey {
		m := map[string]interface{}{"PalletSudoPalletCall::set_key": ty.AsSetKeyNew0}
		return json.Marshal(m)
	}
	if ty.IsSudoAs {
		m := map[string]interface{}{"PalletSudoPalletCall::sudo_as": map[string]interface{}{
			"AsSudoAsCall1": ty.AsSudoAsCall1,
			"AsSudoAsWho0":  ty.AsSudoAsWho0,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated OrmlTokensModuleCall with id=133
type OrmlTokensModuleCall struct {
	IsTransfer                     bool
	AsTransferDest0                MultiAddress
	AsTransferCurrencyId1          uint64
	AsTransferAmount2              types.UCompact
	IsTransferAll                  bool
	AsTransferAllDest0             MultiAddress
	AsTransferAllCurrencyId1       uint64
	AsTransferAllKeepAlive2        bool
	IsTransferKeepAlive            bool
	AsTransferKeepAliveDest0       MultiAddress
	AsTransferKeepAliveCurrencyId1 uint64
	AsTransferKeepAliveAmount2     types.UCompact
	IsForceTransfer                bool
	AsForceTransferSource0         MultiAddress
	AsForceTransferDest1           MultiAddress
	AsForceTransferCurrencyId2     uint64
	AsForceTransferAmount3         types.UCompact
	IsSetBalance                   bool
	AsSetBalanceWho0               MultiAddress
	AsSetBalanceCurrencyId1        uint64
	AsSetBalanceNewFree2           types.UCompact
	AsSetBalanceNewReserved3       types.UCompact
}

func (ty OrmlTokensModuleCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsTransfer {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferDest0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferCurrencyId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferAmount2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTransferAll {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferAllDest0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferAllCurrencyId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferAllKeepAlive2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTransferKeepAlive {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferKeepAliveDest0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferKeepAliveCurrencyId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferKeepAliveAmount2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsForceTransfer {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsForceTransferSource0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsForceTransferDest1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsForceTransferCurrencyId2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsForceTransferAmount3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetBalance {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetBalanceWho0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetBalanceCurrencyId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetBalanceNewFree2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetBalanceNewReserved3)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *OrmlTokensModuleCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsTransfer = true
		err = decoder.Decode(&ty.AsTransferDest0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTransferCurrencyId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTransferAmount2)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsTransferAll = true
		err = decoder.Decode(&ty.AsTransferAllDest0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTransferAllCurrencyId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTransferAllKeepAlive2)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsTransferKeepAlive = true
		err = decoder.Decode(&ty.AsTransferKeepAliveDest0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTransferKeepAliveCurrencyId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTransferKeepAliveAmount2)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsForceTransfer = true
		err = decoder.Decode(&ty.AsForceTransferSource0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsForceTransferDest1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsForceTransferCurrencyId2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsForceTransferAmount3)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsSetBalance = true
		err = decoder.Decode(&ty.AsSetBalanceWho0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetBalanceCurrencyId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetBalanceNewFree2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetBalanceNewReserved3)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *OrmlTokensModuleCall) Variant() (uint8, error) {
	if ty.IsTransfer {
		return 0, nil
	}
	if ty.IsTransferAll {
		return 1, nil
	}
	if ty.IsTransferKeepAlive {
		return 2, nil
	}
	if ty.IsForceTransfer {
		return 3, nil
	}
	if ty.IsSetBalance {
		return 4, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty OrmlTokensModuleCall) MarshalJSON() ([]byte, error) {
	if ty.IsTransfer {
		m := map[string]interface{}{"OrmlTokensModuleCall::transfer": map[string]interface{}{
			"AsTransferAmount2":     ty.AsTransferAmount2,
			"AsTransferCurrencyId1": ty.AsTransferCurrencyId1,
			"AsTransferDest0":       ty.AsTransferDest0,
		}}
		return json.Marshal(m)
	}
	if ty.IsTransferAll {
		m := map[string]interface{}{"OrmlTokensModuleCall::transfer_all": map[string]interface{}{
			"AsTransferAllCurrencyId1": ty.AsTransferAllCurrencyId1,
			"AsTransferAllDest0":       ty.AsTransferAllDest0,
			"AsTransferAllKeepAlive2":  ty.AsTransferAllKeepAlive2,
		}}
		return json.Marshal(m)
	}
	if ty.IsTransferKeepAlive {
		m := map[string]interface{}{"OrmlTokensModuleCall::transfer_keep_alive": map[string]interface{}{
			"AsTransferKeepAliveAmount2":     ty.AsTransferKeepAliveAmount2,
			"AsTransferKeepAliveCurrencyId1": ty.AsTransferKeepAliveCurrencyId1,
			"AsTransferKeepAliveDest0":       ty.AsTransferKeepAliveDest0,
		}}
		return json.Marshal(m)
	}
	if ty.IsForceTransfer {
		m := map[string]interface{}{"OrmlTokensModuleCall::force_transfer": map[string]interface{}{
			"AsForceTransferAmount3":     ty.AsForceTransferAmount3,
			"AsForceTransferCurrencyId2": ty.AsForceTransferCurrencyId2,
			"AsForceTransferDest1":       ty.AsForceTransferDest1,
			"AsForceTransferSource0":     ty.AsForceTransferSource0,
		}}
		return json.Marshal(m)
	}
	if ty.IsSetBalance {
		m := map[string]interface{}{"OrmlTokensModuleCall::set_balance": map[string]interface{}{
			"AsSetBalanceCurrencyId1":  ty.AsSetBalanceCurrencyId1,
			"AsSetBalanceNewFree2":     ty.AsSetBalanceNewFree2,
			"AsSetBalanceNewReserved3": ty.AsSetBalanceNewReserved3,
			"AsSetBalanceWho0":         ty.AsSetBalanceWho0,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated PalletMessageQueuePalletCall with id=134
type PalletMessageQueuePalletCall struct {
	IsReapPage                        bool
	AsReapPageMessageOrigin0          MessageOrigin
	AsReapPagePageIndex1              uint32
	IsExecuteOverweight               bool
	AsExecuteOverweightMessageOrigin0 MessageOrigin
	AsExecuteOverweightPage1          uint32
	AsExecuteOverweightIndex2         uint32
	AsExecuteOverweightWeightLimit3   Weight
}

func (ty PalletMessageQueuePalletCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsReapPage {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReapPageMessageOrigin0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReapPagePageIndex1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsExecuteOverweight {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsExecuteOverweightMessageOrigin0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsExecuteOverweightPage1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsExecuteOverweightIndex2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsExecuteOverweightWeightLimit3)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *PalletMessageQueuePalletCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsReapPage = true
		err = decoder.Decode(&ty.AsReapPageMessageOrigin0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsReapPagePageIndex1)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsExecuteOverweight = true
		err = decoder.Decode(&ty.AsExecuteOverweightMessageOrigin0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsExecuteOverweightPage1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsExecuteOverweightIndex2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsExecuteOverweightWeightLimit3)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *PalletMessageQueuePalletCall) Variant() (uint8, error) {
	if ty.IsReapPage {
		return 0, nil
	}
	if ty.IsExecuteOverweight {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty PalletMessageQueuePalletCall) MarshalJSON() ([]byte, error) {
	if ty.IsReapPage {
		m := map[string]interface{}{"PalletMessageQueuePalletCall::reap_page": map[string]interface{}{
			"AsReapPageMessageOrigin0": ty.AsReapPageMessageOrigin0,
			"AsReapPagePageIndex1":     ty.AsReapPagePageIndex1,
		}}
		return json.Marshal(m)
	}
	if ty.IsExecuteOverweight {
		m := map[string]interface{}{"PalletMessageQueuePalletCall::execute_overweight": map[string]interface{}{
			"AsExecuteOverweightIndex2":         ty.AsExecuteOverweightIndex2,
			"AsExecuteOverweightMessageOrigin0": ty.AsExecuteOverweightMessageOrigin0,
			"AsExecuteOverweightPage1":          ty.AsExecuteOverweightPage1,
			"AsExecuteOverweightWeightLimit3":   ty.AsExecuteOverweightWeightLimit3,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated Option with id=136
type OptionTByteSlice struct {
	IsNone       bool
	IsSome       bool
	AsSomeField0 []byte
}

func (ty OptionTByteSlice) Encode(encoder scale.Encoder) (err error) {
	if ty.IsNone {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSome {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSomeField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *OptionTByteSlice) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsNone = true
		return
	case 1:
		ty.IsSome = true
		err = decoder.Decode(&ty.AsSomeField0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *OptionTByteSlice) Variant() (uint8, error) {
	if ty.IsNone {
		return 0, nil
	}
	if ty.IsSome {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty OptionTByteSlice) MarshalJSON() ([]byte, error) {
	if ty.IsNone {
		return json.Marshal("OptionTByteSlice::None")
	}
	if ty.IsSome {
		m := map[string]interface{}{"OptionTByteSlice::Some": ty.AsSomeField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeOrgStatus with id=138
type Status struct {
	IsActive   bool
	IsInActive bool
}

func (ty Status) Encode(encoder scale.Encoder) (err error) {
	if ty.IsActive {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsInActive {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *Status) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsActive = true
		return
	case 1:
		ty.IsInActive = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *Status) Variant() (uint8, error) {
	if ty.IsActive {
		return 0, nil
	}
	if ty.IsInActive {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty Status) MarshalJSON() ([]byte, error) {
	if ty.IsActive {
		return json.Marshal("Status::Active")
	}
	if ty.IsInActive {
		return json.Marshal("Status::InActive")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated Option with id=137
type OptionTStatus struct {
	IsNone       bool
	IsSome       bool
	AsSomeField0 *Status
}

func (ty OptionTStatus) Encode(encoder scale.Encoder) (err error) {
	if ty.IsNone {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSome {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSomeField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *OptionTStatus) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsNone = true
		return
	case 1:
		ty.IsSome = true
		var tmp Status
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsSomeField0 = &tmp
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *OptionTStatus) Variant() (uint8, error) {
	if ty.IsNone {
		return 0, nil
	}
	if ty.IsSome {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty OptionTStatus) MarshalJSON() ([]byte, error) {
	if ty.IsNone {
		return json.Marshal("OptionTStatus::None")
	}
	if ty.IsSome {
		m := map[string]interface{}{"OptionTStatus::Some": ty.AsSomeField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeOrgPalletCall with id=135
type WeteeOrgPalletCall struct {
	IsCreateDao                   bool
	AsCreateDaoName0              []byte
	AsCreateDaoDesc1              []byte
	AsCreateDaoPurpose2           []byte
	AsCreateDaoMetaData3          []byte
	AsCreateDaoImApi4             []byte
	AsCreateDaoBg5                []byte
	AsCreateDaoLogo6              []byte
	AsCreateDaoImg7               []byte
	AsCreateDaoHomeUrl8           []byte
	IsUpdateDao                   bool
	AsUpdateDaoDaoId0             uint64
	AsUpdateDaoName1              OptionTByteSlice
	AsUpdateDaoDesc2              OptionTByteSlice
	AsUpdateDaoPurpose3           OptionTByteSlice
	AsUpdateDaoMetaData4          OptionTByteSlice
	AsUpdateDaoImApi5             OptionTByteSlice
	AsUpdateDaoBg6                OptionTByteSlice
	AsUpdateDaoLogo7              OptionTByteSlice
	AsUpdateDaoImg8               OptionTByteSlice
	AsUpdateDaoHomeUrl9           OptionTByteSlice
	AsUpdateDaoStatus10           OptionTStatus
	IsCreateRoadmapTask           bool
	AsCreateRoadmapTaskDaoId0     uint64
	AsCreateRoadmapTaskRoadmapId1 uint32
	AsCreateRoadmapTaskName2      []byte
	AsCreateRoadmapTaskPriority3  byte
	AsCreateRoadmapTaskTags4      OptionTByteSlice
	IsUpdateRoadmapTask           bool
	AsUpdateRoadmapTaskDaoId0     uint64
	AsUpdateRoadmapTaskRoadmapId1 uint32
	AsUpdateRoadmapTaskTaskId2    uint64
	AsUpdateRoadmapTaskPriority3  byte
	AsUpdateRoadmapTaskStatus4    byte
	AsUpdateRoadmapTaskTags5      OptionTByteSlice
	IsCreateApp                   bool
	AsCreateAppName0              []byte
	AsCreateAppDesc1              []byte
	AsCreateAppIcon2              []byte
	AsCreateAppUrl3               []byte
	IsUpdateAppStatus             bool
	AsUpdateAppStatusAppId0       uint64
	AsUpdateAppStatusStatus1      Status
	IsOrgIntegrateApp             bool
	AsOrgIntegrateAppDaoId0       uint64
	AsOrgIntegrateAppAppId1       uint64
	IsUpdateOrgAppStatus          bool
	AsUpdateOrgAppStatusDaoId0    uint64
	AsUpdateOrgAppStatusAppId1    uint64
	AsUpdateOrgAppStatusStatus2   Status
}

func (ty WeteeOrgPalletCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsCreateDao {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateDaoName0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateDaoDesc1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateDaoPurpose2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateDaoMetaData3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateDaoImApi4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateDaoBg5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateDaoLogo6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateDaoImg7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateDaoHomeUrl8)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUpdateDao {
		err = encoder.PushByte(8)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateDaoDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateDaoName1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateDaoDesc2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateDaoPurpose3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateDaoMetaData4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateDaoImApi5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateDaoBg6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateDaoLogo7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateDaoImg8)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateDaoHomeUrl9)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateDaoStatus10)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsCreateRoadmapTask {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateRoadmapTaskDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateRoadmapTaskRoadmapId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateRoadmapTaskName2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateRoadmapTaskPriority3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateRoadmapTaskTags4)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUpdateRoadmapTask {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateRoadmapTaskDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateRoadmapTaskRoadmapId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateRoadmapTaskTaskId2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateRoadmapTaskPriority3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateRoadmapTaskStatus4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateRoadmapTaskTags5)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsCreateApp {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateAppName0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateAppDesc1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateAppIcon2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateAppUrl3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUpdateAppStatus {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateAppStatusAppId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateAppStatusStatus1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsOrgIntegrateApp {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsOrgIntegrateAppDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsOrgIntegrateAppAppId1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUpdateOrgAppStatus {
		err = encoder.PushByte(7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateOrgAppStatusDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateOrgAppStatusAppId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateOrgAppStatusStatus2)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeOrgPalletCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 1:
		ty.IsCreateDao = true
		err = decoder.Decode(&ty.AsCreateDaoName0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateDaoDesc1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateDaoPurpose2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateDaoMetaData3)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateDaoImApi4)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateDaoBg5)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateDaoLogo6)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateDaoImg7)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateDaoHomeUrl8)
		if err != nil {
			return err
		}
		return
	case 8:
		ty.IsUpdateDao = true
		err = decoder.Decode(&ty.AsUpdateDaoDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateDaoName1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateDaoDesc2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateDaoPurpose3)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateDaoMetaData4)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateDaoImApi5)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateDaoBg6)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateDaoLogo7)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateDaoImg8)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateDaoHomeUrl9)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateDaoStatus10)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsCreateRoadmapTask = true
		err = decoder.Decode(&ty.AsCreateRoadmapTaskDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateRoadmapTaskRoadmapId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateRoadmapTaskName2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateRoadmapTaskPriority3)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateRoadmapTaskTags4)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsUpdateRoadmapTask = true
		err = decoder.Decode(&ty.AsUpdateRoadmapTaskDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateRoadmapTaskRoadmapId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateRoadmapTaskTaskId2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateRoadmapTaskPriority3)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateRoadmapTaskStatus4)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateRoadmapTaskTags5)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsCreateApp = true
		err = decoder.Decode(&ty.AsCreateAppName0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateAppDesc1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateAppIcon2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateAppUrl3)
		if err != nil {
			return err
		}
		return
	case 5:
		ty.IsUpdateAppStatus = true
		err = decoder.Decode(&ty.AsUpdateAppStatusAppId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateAppStatusStatus1)
		if err != nil {
			return err
		}
		return
	case 6:
		ty.IsOrgIntegrateApp = true
		err = decoder.Decode(&ty.AsOrgIntegrateAppDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsOrgIntegrateAppAppId1)
		if err != nil {
			return err
		}
		return
	case 7:
		ty.IsUpdateOrgAppStatus = true
		err = decoder.Decode(&ty.AsUpdateOrgAppStatusDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateOrgAppStatusAppId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateOrgAppStatusStatus2)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeOrgPalletCall) Variant() (uint8, error) {
	if ty.IsCreateDao {
		return 1, nil
	}
	if ty.IsUpdateDao {
		return 8, nil
	}
	if ty.IsCreateRoadmapTask {
		return 2, nil
	}
	if ty.IsUpdateRoadmapTask {
		return 3, nil
	}
	if ty.IsCreateApp {
		return 4, nil
	}
	if ty.IsUpdateAppStatus {
		return 5, nil
	}
	if ty.IsOrgIntegrateApp {
		return 6, nil
	}
	if ty.IsUpdateOrgAppStatus {
		return 7, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeOrgPalletCall) MarshalJSON() ([]byte, error) {
	if ty.IsCreateDao {
		m := map[string]interface{}{"WeteeOrgPalletCall::create_dao": map[string]interface{}{
			"AsCreateDaoBg5":       ty.AsCreateDaoBg5,
			"AsCreateDaoDesc1":     ty.AsCreateDaoDesc1,
			"AsCreateDaoHomeUrl8":  ty.AsCreateDaoHomeUrl8,
			"AsCreateDaoImApi4":    ty.AsCreateDaoImApi4,
			"AsCreateDaoImg7":      ty.AsCreateDaoImg7,
			"AsCreateDaoLogo6":     ty.AsCreateDaoLogo6,
			"AsCreateDaoMetaData3": ty.AsCreateDaoMetaData3,
			"AsCreateDaoName0":     ty.AsCreateDaoName0,
			"AsCreateDaoPurpose2":  ty.AsCreateDaoPurpose2,
		}}
		return json.Marshal(m)
	}
	if ty.IsUpdateDao {
		m := map[string]interface{}{"WeteeOrgPalletCall::update_dao": map[string]interface{}{
			"AsUpdateDaoBg6":       ty.AsUpdateDaoBg6,
			"AsUpdateDaoDaoId0":    ty.AsUpdateDaoDaoId0,
			"AsUpdateDaoDesc2":     ty.AsUpdateDaoDesc2,
			"AsUpdateDaoHomeUrl9":  ty.AsUpdateDaoHomeUrl9,
			"AsUpdateDaoImApi5":    ty.AsUpdateDaoImApi5,
			"AsUpdateDaoImg8":      ty.AsUpdateDaoImg8,
			"AsUpdateDaoLogo7":     ty.AsUpdateDaoLogo7,
			"AsUpdateDaoMetaData4": ty.AsUpdateDaoMetaData4,
			"AsUpdateDaoName1":     ty.AsUpdateDaoName1,
			"AsUpdateDaoPurpose3":  ty.AsUpdateDaoPurpose3,
			"AsUpdateDaoStatus10":  ty.AsUpdateDaoStatus10,
		}}
		return json.Marshal(m)
	}
	if ty.IsCreateRoadmapTask {
		m := map[string]interface{}{"WeteeOrgPalletCall::create_roadmap_task": map[string]interface{}{
			"AsCreateRoadmapTaskDaoId0":     ty.AsCreateRoadmapTaskDaoId0,
			"AsCreateRoadmapTaskName2":      ty.AsCreateRoadmapTaskName2,
			"AsCreateRoadmapTaskPriority3":  ty.AsCreateRoadmapTaskPriority3,
			"AsCreateRoadmapTaskRoadmapId1": ty.AsCreateRoadmapTaskRoadmapId1,
			"AsCreateRoadmapTaskTags4":      ty.AsCreateRoadmapTaskTags4,
		}}
		return json.Marshal(m)
	}
	if ty.IsUpdateRoadmapTask {
		m := map[string]interface{}{"WeteeOrgPalletCall::update_roadmap_task": map[string]interface{}{
			"AsUpdateRoadmapTaskDaoId0":     ty.AsUpdateRoadmapTaskDaoId0,
			"AsUpdateRoadmapTaskPriority3":  ty.AsUpdateRoadmapTaskPriority3,
			"AsUpdateRoadmapTaskRoadmapId1": ty.AsUpdateRoadmapTaskRoadmapId1,
			"AsUpdateRoadmapTaskStatus4":    ty.AsUpdateRoadmapTaskStatus4,
			"AsUpdateRoadmapTaskTags5":      ty.AsUpdateRoadmapTaskTags5,
			"AsUpdateRoadmapTaskTaskId2":    ty.AsUpdateRoadmapTaskTaskId2,
		}}
		return json.Marshal(m)
	}
	if ty.IsCreateApp {
		m := map[string]interface{}{"WeteeOrgPalletCall::create_app": map[string]interface{}{
			"AsCreateAppDesc1": ty.AsCreateAppDesc1,
			"AsCreateAppIcon2": ty.AsCreateAppIcon2,
			"AsCreateAppName0": ty.AsCreateAppName0,
			"AsCreateAppUrl3":  ty.AsCreateAppUrl3,
		}}
		return json.Marshal(m)
	}
	if ty.IsUpdateAppStatus {
		m := map[string]interface{}{"WeteeOrgPalletCall::update_app_status": map[string]interface{}{
			"AsUpdateAppStatusAppId0":  ty.AsUpdateAppStatusAppId0,
			"AsUpdateAppStatusStatus1": ty.AsUpdateAppStatusStatus1,
		}}
		return json.Marshal(m)
	}
	if ty.IsOrgIntegrateApp {
		m := map[string]interface{}{"WeteeOrgPalletCall::org_integrate_app": map[string]interface{}{
			"AsOrgIntegrateAppAppId1": ty.AsOrgIntegrateAppAppId1,
			"AsOrgIntegrateAppDaoId0": ty.AsOrgIntegrateAppDaoId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsUpdateOrgAppStatus {
		m := map[string]interface{}{"WeteeOrgPalletCall::update_org_app_status": map[string]interface{}{
			"AsUpdateOrgAppStatusAppId1":  ty.AsUpdateOrgAppStatusAppId1,
			"AsUpdateOrgAppStatusDaoId0":  ty.AsUpdateOrgAppStatusDaoId0,
			"AsUpdateOrgAppStatusStatus2": ty.AsUpdateOrgAppStatusStatus2,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeAssetsPalletCall with id=139
type WeteeAssetsPalletCall struct {
	IsCreateAsset                            bool
	AsCreateAssetDaoId0                      uint64
	AsCreateAssetMetadata1                   DaoAssetMeta
	AsCreateAssetAmount2                     types.U128
	AsCreateAssetInitDaoAsset3               types.U128
	IsSetExistenialDeposit                   bool
	AsSetExistenialDepositDaoId0             uint64
	AsSetExistenialDepositExistenialDeposit1 types.U128
	IsSetMetadata                            bool
	AsSetMetadataDaoId0                      uint64
	AsSetMetadataMetadata1                   DaoAssetMeta
	IsBurn                                   bool
	AsBurnDaoId0                             uint64
	AsBurnAmount1                            types.U128
	IsTransfer                               bool
	AsTransferDest0                          MultiAddress
	AsTransferDaoId1                         uint64
	AsTransferAmount2                        types.UCompact
	IsJoin                                   bool
	AsJoinDaoId0                             uint64
	AsJoinShareExpect1                       uint32
	AsJoinExistenialDeposit2                 types.UCompact
}

func (ty WeteeAssetsPalletCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsCreateAsset {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateAssetDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateAssetMetadata1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateAssetAmount2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateAssetInitDaoAsset3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetExistenialDeposit {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetExistenialDepositDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetExistenialDepositExistenialDeposit1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetMetadata {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetMetadataDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetMetadataMetadata1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsBurn {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBurnDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBurnAmount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTransfer {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferDest0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferDaoId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferAmount2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsJoin {
		err = encoder.PushByte(7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsJoinDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsJoinShareExpect1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsJoinExistenialDeposit2)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeAssetsPalletCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 1:
		ty.IsCreateAsset = true
		err = decoder.Decode(&ty.AsCreateAssetDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateAssetMetadata1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateAssetAmount2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateAssetInitDaoAsset3)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsSetExistenialDeposit = true
		err = decoder.Decode(&ty.AsSetExistenialDepositDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetExistenialDepositExistenialDeposit1)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsSetMetadata = true
		err = decoder.Decode(&ty.AsSetMetadataDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetMetadataMetadata1)
		if err != nil {
			return err
		}
		return
	case 5:
		ty.IsBurn = true
		err = decoder.Decode(&ty.AsBurnDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsBurnAmount1)
		if err != nil {
			return err
		}
		return
	case 6:
		ty.IsTransfer = true
		err = decoder.Decode(&ty.AsTransferDest0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTransferDaoId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTransferAmount2)
		if err != nil {
			return err
		}
		return
	case 7:
		ty.IsJoin = true
		err = decoder.Decode(&ty.AsJoinDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsJoinShareExpect1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsJoinExistenialDeposit2)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeAssetsPalletCall) Variant() (uint8, error) {
	if ty.IsCreateAsset {
		return 1, nil
	}
	if ty.IsSetExistenialDeposit {
		return 3, nil
	}
	if ty.IsSetMetadata {
		return 4, nil
	}
	if ty.IsBurn {
		return 5, nil
	}
	if ty.IsTransfer {
		return 6, nil
	}
	if ty.IsJoin {
		return 7, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeAssetsPalletCall) MarshalJSON() ([]byte, error) {
	if ty.IsCreateAsset {
		m := map[string]interface{}{"WeteeAssetsPalletCall::create_asset": map[string]interface{}{
			"AsCreateAssetAmount2":       ty.AsCreateAssetAmount2,
			"AsCreateAssetDaoId0":        ty.AsCreateAssetDaoId0,
			"AsCreateAssetInitDaoAsset3": ty.AsCreateAssetInitDaoAsset3,
			"AsCreateAssetMetadata1":     ty.AsCreateAssetMetadata1,
		}}
		return json.Marshal(m)
	}
	if ty.IsSetExistenialDeposit {
		m := map[string]interface{}{"WeteeAssetsPalletCall::set_existenial_deposit": map[string]interface{}{
			"AsSetExistenialDepositDaoId0":             ty.AsSetExistenialDepositDaoId0,
			"AsSetExistenialDepositExistenialDeposit1": ty.AsSetExistenialDepositExistenialDeposit1,
		}}
		return json.Marshal(m)
	}
	if ty.IsSetMetadata {
		m := map[string]interface{}{"WeteeAssetsPalletCall::set_metadata": map[string]interface{}{
			"AsSetMetadataDaoId0":    ty.AsSetMetadataDaoId0,
			"AsSetMetadataMetadata1": ty.AsSetMetadataMetadata1,
		}}
		return json.Marshal(m)
	}
	if ty.IsBurn {
		m := map[string]interface{}{"WeteeAssetsPalletCall::burn": map[string]interface{}{
			"AsBurnAmount1": ty.AsBurnAmount1,
			"AsBurnDaoId0":  ty.AsBurnDaoId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsTransfer {
		m := map[string]interface{}{"WeteeAssetsPalletCall::transfer": map[string]interface{}{
			"AsTransferAmount2": ty.AsTransferAmount2,
			"AsTransferDaoId1":  ty.AsTransferDaoId1,
			"AsTransferDest0":   ty.AsTransferDest0,
		}}
		return json.Marshal(m)
	}
	if ty.IsJoin {
		m := map[string]interface{}{"WeteeAssetsPalletCall::join": map[string]interface{}{
			"AsJoinDaoId0":             ty.AsJoinDaoId0,
			"AsJoinExistenialDeposit2": ty.AsJoinExistenialDeposit2,
			"AsJoinShareExpect1":       ty.AsJoinShareExpect1,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeSudoPalletCall with id=140
type WeteeSudoPalletCall struct {
	IsSudo                       bool
	AsSudoDaoId0                 uint64
	AsSudoCall1                  *RuntimeCall
	IsSetSudoAccount             bool
	AsSetSudoAccountDaoId0       uint64
	AsSetSudoAccountSudoAccount1 [32]byte
	IsCloseSudo                  bool
	AsCloseSudoDaoId0            uint64
}

func (ty WeteeSudoPalletCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsSudo {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSudoDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSudoCall1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetSudoAccount {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetSudoAccountDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetSudoAccountSudoAccount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsCloseSudo {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCloseSudoDaoId0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeSudoPalletCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 1:
		ty.IsSudo = true
		err = decoder.Decode(&ty.AsSudoDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSudoCall1)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsSetSudoAccount = true
		err = decoder.Decode(&ty.AsSetSudoAccountDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetSudoAccountSudoAccount1)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsCloseSudo = true
		err = decoder.Decode(&ty.AsCloseSudoDaoId0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeSudoPalletCall) Variant() (uint8, error) {
	if ty.IsSudo {
		return 1, nil
	}
	if ty.IsSetSudoAccount {
		return 2, nil
	}
	if ty.IsCloseSudo {
		return 3, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeSudoPalletCall) MarshalJSON() ([]byte, error) {
	if ty.IsSudo {
		m := map[string]interface{}{"WeteeSudoPalletCall::sudo": map[string]interface{}{
			"AsSudoCall1":  ty.AsSudoCall1,
			"AsSudoDaoId0": ty.AsSudoDaoId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsSetSudoAccount {
		m := map[string]interface{}{"WeteeSudoPalletCall::set_sudo_account": map[string]interface{}{
			"AsSetSudoAccountDaoId0":       ty.AsSetSudoAccountDaoId0,
			"AsSetSudoAccountSudoAccount1": ty.AsSetSudoAccountSudoAccount1,
		}}
		return json.Marshal(m)
	}
	if ty.IsCloseSudo {
		m := map[string]interface{}{"WeteeSudoPalletCall::close_sudo": ty.AsCloseSudoDaoId0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeGuildPalletCall with id=141
type WeteeGuildPalletCall struct {
	IsGuildJoin            bool
	AsGuildJoinDaoId0      uint64
	AsGuildJoinGuildId1    uint64
	AsGuildJoinWho2        [32]byte
	IsCreateGuild          bool
	AsCreateGuildDaoId0    uint64
	AsCreateGuildName1     []byte
	AsCreateGuildDesc2     []byte
	AsCreateGuildMetaData3 []byte
	AsCreateGuildCreator4  [32]byte
}

func (ty WeteeGuildPalletCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsGuildJoin {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsGuildJoinDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsGuildJoinGuildId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsGuildJoinWho2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsCreateGuild {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateGuildDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateGuildName1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateGuildDesc2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateGuildMetaData3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateGuildCreator4)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeGuildPalletCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 1:
		ty.IsGuildJoin = true
		err = decoder.Decode(&ty.AsGuildJoinDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsGuildJoinGuildId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsGuildJoinWho2)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsCreateGuild = true
		err = decoder.Decode(&ty.AsCreateGuildDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateGuildName1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateGuildDesc2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateGuildMetaData3)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateGuildCreator4)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeGuildPalletCall) Variant() (uint8, error) {
	if ty.IsGuildJoin {
		return 1, nil
	}
	if ty.IsCreateGuild {
		return 2, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeGuildPalletCall) MarshalJSON() ([]byte, error) {
	if ty.IsGuildJoin {
		m := map[string]interface{}{"WeteeGuildPalletCall::guild_join": map[string]interface{}{
			"AsGuildJoinDaoId0":   ty.AsGuildJoinDaoId0,
			"AsGuildJoinGuildId1": ty.AsGuildJoinGuildId1,
			"AsGuildJoinWho2":     ty.AsGuildJoinWho2,
		}}
		return json.Marshal(m)
	}
	if ty.IsCreateGuild {
		m := map[string]interface{}{"WeteeGuildPalletCall::create_guild": map[string]interface{}{
			"AsCreateGuildCreator4":  ty.AsCreateGuildCreator4,
			"AsCreateGuildDaoId0":    ty.AsCreateGuildDaoId0,
			"AsCreateGuildDesc2":     ty.AsCreateGuildDesc2,
			"AsCreateGuildMetaData3": ty.AsCreateGuildMetaData3,
			"AsCreateGuildName1":     ty.AsCreateGuildName1,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated Option with id=143
type OptionTByte struct {
	IsNone       bool
	IsSome       bool
	AsSomeField0 byte
}

func (ty OptionTByte) Encode(encoder scale.Encoder) (err error) {
	if ty.IsNone {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSome {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSomeField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *OptionTByte) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsNone = true
		return
	case 1:
		ty.IsSome = true
		err = decoder.Decode(&ty.AsSomeField0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *OptionTByte) Variant() (uint8, error) {
	if ty.IsNone {
		return 0, nil
	}
	if ty.IsSome {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty OptionTByte) MarshalJSON() ([]byte, error) {
	if ty.IsNone {
		return json.Marshal("OptionTByte::None")
	}
	if ty.IsSome {
		m := map[string]interface{}{"OptionTByte::Some": ty.AsSomeField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated Option with id=144
type OptionTByteArray32Slice struct {
	IsNone       bool
	IsSome       bool
	AsSomeField0 [][32]byte
}

func (ty OptionTByteArray32Slice) Encode(encoder scale.Encoder) (err error) {
	if ty.IsNone {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSome {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSomeField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *OptionTByteArray32Slice) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsNone = true
		return
	case 1:
		ty.IsSome = true
		err = decoder.Decode(&ty.AsSomeField0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *OptionTByteArray32Slice) Variant() (uint8, error) {
	if ty.IsNone {
		return 0, nil
	}
	if ty.IsSome {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty OptionTByteArray32Slice) MarshalJSON() ([]byte, error) {
	if ty.IsNone {
		return json.Marshal("OptionTByteArray32Slice::None")
	}
	if ty.IsSome {
		m := map[string]interface{}{"OptionTByteArray32Slice::Some": ty.AsSomeField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeProjectReviewOpinion with id=145
type ReviewOpinion struct {
	IsYES bool
	IsNO  bool
}

func (ty ReviewOpinion) Encode(encoder scale.Encoder) (err error) {
	if ty.IsYES {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsNO {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *ReviewOpinion) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsYES = true
		return
	case 1:
		ty.IsNO = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *ReviewOpinion) Variant() (uint8, error) {
	if ty.IsYES {
		return 0, nil
	}
	if ty.IsNO {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty ReviewOpinion) MarshalJSON() ([]byte, error) {
	if ty.IsYES {
		return json.Marshal("ReviewOpinion::YES")
	}
	if ty.IsNO {
		return json.Marshal("ReviewOpinion::NO")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeProjectPalletCall with id=142
type WeteeProjectPalletCall struct {
	IsProjectJoinRequest           bool
	AsProjectJoinRequestDaoId0     uint64
	AsProjectJoinRequestProjectId1 uint64
	AsProjectJoinRequestWho2       [32]byte
	IsCreateProject                bool
	AsCreateProjectDaoId0          uint64
	AsCreateProjectName1           []byte
	AsCreateProjectDescription2    []byte
	AsCreateProjectCreator3        [32]byte
	IsApplyProjectFunds            bool
	AsApplyProjectFundsDaoId0      uint64
	AsApplyProjectFundsProjectId1  uint64
	AsApplyProjectFundsAmount2     types.U128
	IsCreateTask                   bool
	AsCreateTaskDaoId0             uint64
	AsCreateTaskProjectId1         uint64
	AsCreateTaskName2              []byte
	AsCreateTaskDescription3       []byte
	AsCreateTaskPoint4             uint16
	AsCreateTaskPriority5          byte
	AsCreateTaskMaxAssignee6       OptionTByte
	AsCreateTaskSkills7            OptionTByteSlice
	AsCreateTaskAssignees8         OptionTByteArray32Slice
	AsCreateTaskReviewers9         OptionTByteArray32Slice
	AsCreateTaskAmount10           types.U128
	IsJoinTask                     bool
	AsJoinTaskDaoId0               uint64
	AsJoinTaskProjectId1           uint64
	AsJoinTaskTaskId2              uint64
	IsLeaveTask                    bool
	AsLeaveTaskDaoId0              uint64
	AsLeaveTaskProjectId1          uint64
	AsLeaveTaskTaskId2             uint64
	IsJoinTaskReview               bool
	AsJoinTaskReviewDaoId0         uint64
	AsJoinTaskReviewProjectId1     uint64
	AsJoinTaskReviewTaskId2        uint64
	IsLeaveTaskReview              bool
	AsLeaveTaskReviewDaoId0        uint64
	AsLeaveTaskReviewProjectId1    uint64
	AsLeaveTaskReviewTaskId2       uint64
	IsStartTask                    bool
	AsStartTaskDaoId0              uint64
	AsStartTaskProjectId1          uint64
	AsStartTaskTaskId2             uint64
	IsRequestReview                bool
	AsRequestReviewDaoId0          uint64
	AsRequestReviewProjectId1      uint64
	AsRequestReviewTaskId2         uint64
	IsTaskDone                     bool
	AsTaskDoneDaoId0               uint64
	AsTaskDoneProjectId1           uint64
	AsTaskDoneTaskId2              uint64
	IsMakeReview                   bool
	AsMakeReviewDaoId0             uint64
	AsMakeReviewProjectId1         uint64
	AsMakeReviewTaskId2            uint64
	AsMakeReviewOpinion3           ReviewOpinion
	AsMakeReviewMeta4              []byte
}

func (ty WeteeProjectPalletCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsProjectJoinRequest {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProjectJoinRequestDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProjectJoinRequestProjectId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProjectJoinRequestWho2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsCreateProject {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateProjectDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateProjectName1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateProjectDescription2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateProjectCreator3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsApplyProjectFunds {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsApplyProjectFundsDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsApplyProjectFundsProjectId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsApplyProjectFundsAmount2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsCreateTask {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateTaskDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateTaskProjectId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateTaskName2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateTaskDescription3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateTaskPoint4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateTaskPriority5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateTaskMaxAssignee6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateTaskSkills7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateTaskAssignees8)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateTaskReviewers9)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateTaskAmount10)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsJoinTask {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsJoinTaskDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsJoinTaskProjectId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsJoinTaskTaskId2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsLeaveTask {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsLeaveTaskDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsLeaveTaskProjectId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsLeaveTaskTaskId2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsJoinTaskReview {
		err = encoder.PushByte(7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsJoinTaskReviewDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsJoinTaskReviewProjectId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsJoinTaskReviewTaskId2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsLeaveTaskReview {
		err = encoder.PushByte(8)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsLeaveTaskReviewDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsLeaveTaskReviewProjectId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsLeaveTaskReviewTaskId2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsStartTask {
		err = encoder.PushByte(9)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsStartTaskDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsStartTaskProjectId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsStartTaskTaskId2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsRequestReview {
		err = encoder.PushByte(10)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRequestReviewDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRequestReviewProjectId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRequestReviewTaskId2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTaskDone {
		err = encoder.PushByte(11)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskDoneDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskDoneProjectId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskDoneTaskId2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsMakeReview {
		err = encoder.PushByte(12)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsMakeReviewDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsMakeReviewProjectId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsMakeReviewTaskId2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsMakeReviewOpinion3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsMakeReviewMeta4)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeProjectPalletCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 1:
		ty.IsProjectJoinRequest = true
		err = decoder.Decode(&ty.AsProjectJoinRequestDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsProjectJoinRequestProjectId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsProjectJoinRequestWho2)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsCreateProject = true
		err = decoder.Decode(&ty.AsCreateProjectDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateProjectName1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateProjectDescription2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateProjectCreator3)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsApplyProjectFunds = true
		err = decoder.Decode(&ty.AsApplyProjectFundsDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsApplyProjectFundsProjectId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsApplyProjectFundsAmount2)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsCreateTask = true
		err = decoder.Decode(&ty.AsCreateTaskDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateTaskProjectId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateTaskName2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateTaskDescription3)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateTaskPoint4)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateTaskPriority5)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateTaskMaxAssignee6)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateTaskSkills7)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateTaskAssignees8)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateTaskReviewers9)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateTaskAmount10)
		if err != nil {
			return err
		}
		return
	case 5:
		ty.IsJoinTask = true
		err = decoder.Decode(&ty.AsJoinTaskDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsJoinTaskProjectId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsJoinTaskTaskId2)
		if err != nil {
			return err
		}
		return
	case 6:
		ty.IsLeaveTask = true
		err = decoder.Decode(&ty.AsLeaveTaskDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsLeaveTaskProjectId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsLeaveTaskTaskId2)
		if err != nil {
			return err
		}
		return
	case 7:
		ty.IsJoinTaskReview = true
		err = decoder.Decode(&ty.AsJoinTaskReviewDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsJoinTaskReviewProjectId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsJoinTaskReviewTaskId2)
		if err != nil {
			return err
		}
		return
	case 8:
		ty.IsLeaveTaskReview = true
		err = decoder.Decode(&ty.AsLeaveTaskReviewDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsLeaveTaskReviewProjectId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsLeaveTaskReviewTaskId2)
		if err != nil {
			return err
		}
		return
	case 9:
		ty.IsStartTask = true
		err = decoder.Decode(&ty.AsStartTaskDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsStartTaskProjectId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsStartTaskTaskId2)
		if err != nil {
			return err
		}
		return
	case 10:
		ty.IsRequestReview = true
		err = decoder.Decode(&ty.AsRequestReviewDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsRequestReviewProjectId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsRequestReviewTaskId2)
		if err != nil {
			return err
		}
		return
	case 11:
		ty.IsTaskDone = true
		err = decoder.Decode(&ty.AsTaskDoneDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTaskDoneProjectId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTaskDoneTaskId2)
		if err != nil {
			return err
		}
		return
	case 12:
		ty.IsMakeReview = true
		err = decoder.Decode(&ty.AsMakeReviewDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsMakeReviewProjectId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsMakeReviewTaskId2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsMakeReviewOpinion3)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsMakeReviewMeta4)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeProjectPalletCall) Variant() (uint8, error) {
	if ty.IsProjectJoinRequest {
		return 1, nil
	}
	if ty.IsCreateProject {
		return 2, nil
	}
	if ty.IsApplyProjectFunds {
		return 3, nil
	}
	if ty.IsCreateTask {
		return 4, nil
	}
	if ty.IsJoinTask {
		return 5, nil
	}
	if ty.IsLeaveTask {
		return 6, nil
	}
	if ty.IsJoinTaskReview {
		return 7, nil
	}
	if ty.IsLeaveTaskReview {
		return 8, nil
	}
	if ty.IsStartTask {
		return 9, nil
	}
	if ty.IsRequestReview {
		return 10, nil
	}
	if ty.IsTaskDone {
		return 11, nil
	}
	if ty.IsMakeReview {
		return 12, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeProjectPalletCall) MarshalJSON() ([]byte, error) {
	if ty.IsProjectJoinRequest {
		m := map[string]interface{}{"WeteeProjectPalletCall::project_join_request": map[string]interface{}{
			"AsProjectJoinRequestDaoId0":     ty.AsProjectJoinRequestDaoId0,
			"AsProjectJoinRequestProjectId1": ty.AsProjectJoinRequestProjectId1,
			"AsProjectJoinRequestWho2":       ty.AsProjectJoinRequestWho2,
		}}
		return json.Marshal(m)
	}
	if ty.IsCreateProject {
		m := map[string]interface{}{"WeteeProjectPalletCall::create_project": map[string]interface{}{
			"AsCreateProjectCreator3":     ty.AsCreateProjectCreator3,
			"AsCreateProjectDaoId0":       ty.AsCreateProjectDaoId0,
			"AsCreateProjectDescription2": ty.AsCreateProjectDescription2,
			"AsCreateProjectName1":        ty.AsCreateProjectName1,
		}}
		return json.Marshal(m)
	}
	if ty.IsApplyProjectFunds {
		m := map[string]interface{}{"WeteeProjectPalletCall::apply_project_funds": map[string]interface{}{
			"AsApplyProjectFundsAmount2":    ty.AsApplyProjectFundsAmount2,
			"AsApplyProjectFundsDaoId0":     ty.AsApplyProjectFundsDaoId0,
			"AsApplyProjectFundsProjectId1": ty.AsApplyProjectFundsProjectId1,
		}}
		return json.Marshal(m)
	}
	if ty.IsCreateTask {
		m := map[string]interface{}{"WeteeProjectPalletCall::create_task": map[string]interface{}{
			"AsCreateTaskAmount10":     ty.AsCreateTaskAmount10,
			"AsCreateTaskAssignees8":   ty.AsCreateTaskAssignees8,
			"AsCreateTaskDaoId0":       ty.AsCreateTaskDaoId0,
			"AsCreateTaskDescription3": ty.AsCreateTaskDescription3,
			"AsCreateTaskMaxAssignee6": ty.AsCreateTaskMaxAssignee6,
			"AsCreateTaskName2":        ty.AsCreateTaskName2,
			"AsCreateTaskPoint4":       ty.AsCreateTaskPoint4,
			"AsCreateTaskPriority5":    ty.AsCreateTaskPriority5,
			"AsCreateTaskProjectId1":   ty.AsCreateTaskProjectId1,
			"AsCreateTaskReviewers9":   ty.AsCreateTaskReviewers9,
			"AsCreateTaskSkills7":      ty.AsCreateTaskSkills7,
		}}
		return json.Marshal(m)
	}
	if ty.IsJoinTask {
		m := map[string]interface{}{"WeteeProjectPalletCall::join_task": map[string]interface{}{
			"AsJoinTaskDaoId0":     ty.AsJoinTaskDaoId0,
			"AsJoinTaskProjectId1": ty.AsJoinTaskProjectId1,
			"AsJoinTaskTaskId2":    ty.AsJoinTaskTaskId2,
		}}
		return json.Marshal(m)
	}
	if ty.IsLeaveTask {
		m := map[string]interface{}{"WeteeProjectPalletCall::leave_task": map[string]interface{}{
			"AsLeaveTaskDaoId0":     ty.AsLeaveTaskDaoId0,
			"AsLeaveTaskProjectId1": ty.AsLeaveTaskProjectId1,
			"AsLeaveTaskTaskId2":    ty.AsLeaveTaskTaskId2,
		}}
		return json.Marshal(m)
	}
	if ty.IsJoinTaskReview {
		m := map[string]interface{}{"WeteeProjectPalletCall::join_task_review": map[string]interface{}{
			"AsJoinTaskReviewDaoId0":     ty.AsJoinTaskReviewDaoId0,
			"AsJoinTaskReviewProjectId1": ty.AsJoinTaskReviewProjectId1,
			"AsJoinTaskReviewTaskId2":    ty.AsJoinTaskReviewTaskId2,
		}}
		return json.Marshal(m)
	}
	if ty.IsLeaveTaskReview {
		m := map[string]interface{}{"WeteeProjectPalletCall::leave_task_review": map[string]interface{}{
			"AsLeaveTaskReviewDaoId0":     ty.AsLeaveTaskReviewDaoId0,
			"AsLeaveTaskReviewProjectId1": ty.AsLeaveTaskReviewProjectId1,
			"AsLeaveTaskReviewTaskId2":    ty.AsLeaveTaskReviewTaskId2,
		}}
		return json.Marshal(m)
	}
	if ty.IsStartTask {
		m := map[string]interface{}{"WeteeProjectPalletCall::start_task": map[string]interface{}{
			"AsStartTaskDaoId0":     ty.AsStartTaskDaoId0,
			"AsStartTaskProjectId1": ty.AsStartTaskProjectId1,
			"AsStartTaskTaskId2":    ty.AsStartTaskTaskId2,
		}}
		return json.Marshal(m)
	}
	if ty.IsRequestReview {
		m := map[string]interface{}{"WeteeProjectPalletCall::request_review": map[string]interface{}{
			"AsRequestReviewDaoId0":     ty.AsRequestReviewDaoId0,
			"AsRequestReviewProjectId1": ty.AsRequestReviewProjectId1,
			"AsRequestReviewTaskId2":    ty.AsRequestReviewTaskId2,
		}}
		return json.Marshal(m)
	}
	if ty.IsTaskDone {
		m := map[string]interface{}{"WeteeProjectPalletCall::task_done": map[string]interface{}{
			"AsTaskDoneDaoId0":     ty.AsTaskDoneDaoId0,
			"AsTaskDoneProjectId1": ty.AsTaskDoneProjectId1,
			"AsTaskDoneTaskId2":    ty.AsTaskDoneTaskId2,
		}}
		return json.Marshal(m)
	}
	if ty.IsMakeReview {
		m := map[string]interface{}{"WeteeProjectPalletCall::make_review": map[string]interface{}{
			"AsMakeReviewDaoId0":     ty.AsMakeReviewDaoId0,
			"AsMakeReviewMeta4":      ty.AsMakeReviewMeta4,
			"AsMakeReviewOpinion3":   ty.AsMakeReviewOpinion3,
			"AsMakeReviewProjectId1": ty.AsMakeReviewProjectId1,
			"AsMakeReviewTaskId2":    ty.AsMakeReviewTaskId2,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeGovMemberData with id=147
type MemberData struct {
	IsGLOBAL        bool
	IsGUILD         bool
	AsGUILDField0   uint64
	IsPROJECT       bool
	AsPROJECTField0 uint64
}

func (ty MemberData) Encode(encoder scale.Encoder) (err error) {
	if ty.IsGLOBAL {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsGUILD {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsGUILDField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsPROJECT {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsPROJECTField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *MemberData) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsGLOBAL = true
		return
	case 1:
		ty.IsGUILD = true
		err = decoder.Decode(&ty.AsGUILDField0)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsPROJECT = true
		err = decoder.Decode(&ty.AsPROJECTField0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *MemberData) Variant() (uint8, error) {
	if ty.IsGLOBAL {
		return 0, nil
	}
	if ty.IsGUILD {
		return 1, nil
	}
	if ty.IsPROJECT {
		return 2, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty MemberData) MarshalJSON() ([]byte, error) {
	if ty.IsGLOBAL {
		return json.Marshal("MemberData::GLOBAL")
	}
	if ty.IsGUILD {
		m := map[string]interface{}{"MemberData::GUILD": ty.AsGUILDField0}
		return json.Marshal(m)
	}
	if ty.IsPROJECT {
		m := map[string]interface{}{"MemberData::PROJECT": ty.AsPROJECTField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeGovOpinion with id=148
type Opinion struct {
	IsYES bool
	IsNO  bool
}

func (ty Opinion) Encode(encoder scale.Encoder) (err error) {
	if ty.IsYES {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsNO {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *Opinion) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsYES = true
		return
	case 1:
		ty.IsNO = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *Opinion) Variant() (uint8, error) {
	if ty.IsYES {
		return 0, nil
	}
	if ty.IsNO {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty Opinion) MarshalJSON() ([]byte, error) {
	if ty.IsYES {
		return json.Marshal("Opinion::YES")
	}
	if ty.IsNO {
		return json.Marshal("Opinion::NO")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated wetee_gov_Period with id={{false [150]}}
type Period struct {
	// Field 0 with TypeId=13
	Name []byte
	// Field 1 with TypeId=85
	PalletIndex uint16
	// Field 2 with TypeId=4
	PreparePeriod uint64
	// Field 3 with TypeId=4
	MaxDeciding uint64
	// Field 4 with TypeId=4
	ConfirmPeriod uint64
	// Field 5 with TypeId=4
	DecisionPeriod uint64
	// Field 6 with TypeId=4
	MinEnactmentPeriod uint64
	// Field 7 with TypeId=6
	DecisionDeposit types.U128
	// Field 8 with TypeId=2
	MinApproval byte
	// Field 9 with TypeId=2
	MinSupport byte
	// Field 10 with TypeId=6
	MaxBalance types.U128
}

// Generated WeteeGovPalletCall with id=146
type WeteeGovPalletCall struct {
	IsSubmitProposal             bool
	AsSubmitProposalDaoId0       uint64
	AsSubmitProposalMemberData1  MemberData
	AsSubmitProposalProposal2    *RuntimeCall
	AsSubmitProposalPeriodIndex3 uint32
	IsDepositProposal            bool
	AsDepositProposalDaoId0      uint64
	AsDepositProposalProposeId1  uint32
	AsDepositProposalDeposit2    types.UCompact
	IsVoteForProp                bool
	AsVoteForPropDaoId0          uint64
	AsVoteForPropPropIndex1      uint32
	AsVoteForPropPledge2         Pledge
	AsVoteForPropOpinion3        Opinion
	IsCancelVote                 bool
	AsCancelVoteDaoId0           uint64
	AsCancelVoteIndex1           uint32
	IsRunProposal                bool
	AsRunProposalDaoId0          uint64
	AsRunProposalIndex1          uint32
	IsUnlock                     bool
	AsUnlockDaoId0               uint64
	IsSetMaxPreProps             bool
	AsSetMaxPrePropsDaoId0       uint64
	AsSetMaxPrePropsMax1         uint32
	IsUpdateVoteModel            bool
	AsUpdateVoteModelDaoId0      uint64
	AsUpdateVoteModelModel1      byte
	IsSetPeriods                 bool
	AsSetPeriodsDaoId0           uint64
	AsSetPeriodsPeriods1         []Period
}

func (ty WeteeGovPalletCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsSubmitProposal {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSubmitProposalDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSubmitProposalMemberData1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSubmitProposalProposal2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSubmitProposalPeriodIndex3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsDepositProposal {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDepositProposalDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDepositProposalProposeId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDepositProposalDeposit2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsVoteForProp {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsVoteForPropDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsVoteForPropPropIndex1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsVoteForPropPledge2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsVoteForPropOpinion3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsCancelVote {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCancelVoteDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCancelVoteIndex1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsRunProposal {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRunProposalDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRunProposalIndex1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUnlock {
		err = encoder.PushByte(7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUnlockDaoId0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetMaxPreProps {
		err = encoder.PushByte(9)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetMaxPrePropsDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetMaxPrePropsMax1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUpdateVoteModel {
		err = encoder.PushByte(15)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateVoteModelDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateVoteModelModel1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetPeriods {
		err = encoder.PushByte(16)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetPeriodsDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetPeriodsPeriods1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeGovPalletCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 1:
		ty.IsSubmitProposal = true
		err = decoder.Decode(&ty.AsSubmitProposalDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSubmitProposalMemberData1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSubmitProposalProposal2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSubmitProposalPeriodIndex3)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsDepositProposal = true
		err = decoder.Decode(&ty.AsDepositProposalDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsDepositProposalProposeId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsDepositProposalDeposit2)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsVoteForProp = true
		err = decoder.Decode(&ty.AsVoteForPropDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsVoteForPropPropIndex1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsVoteForPropPledge2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsVoteForPropOpinion3)
		if err != nil {
			return err
		}
		return
	case 5:
		ty.IsCancelVote = true
		err = decoder.Decode(&ty.AsCancelVoteDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCancelVoteIndex1)
		if err != nil {
			return err
		}
		return
	case 6:
		ty.IsRunProposal = true
		err = decoder.Decode(&ty.AsRunProposalDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsRunProposalIndex1)
		if err != nil {
			return err
		}
		return
	case 7:
		ty.IsUnlock = true
		err = decoder.Decode(&ty.AsUnlockDaoId0)
		if err != nil {
			return err
		}
		return
	case 9:
		ty.IsSetMaxPreProps = true
		err = decoder.Decode(&ty.AsSetMaxPrePropsDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetMaxPrePropsMax1)
		if err != nil {
			return err
		}
		return
	case 15:
		ty.IsUpdateVoteModel = true
		err = decoder.Decode(&ty.AsUpdateVoteModelDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateVoteModelModel1)
		if err != nil {
			return err
		}
		return
	case 16:
		ty.IsSetPeriods = true
		err = decoder.Decode(&ty.AsSetPeriodsDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetPeriodsPeriods1)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeGovPalletCall) Variant() (uint8, error) {
	if ty.IsSubmitProposal {
		return 1, nil
	}
	if ty.IsDepositProposal {
		return 3, nil
	}
	if ty.IsVoteForProp {
		return 4, nil
	}
	if ty.IsCancelVote {
		return 5, nil
	}
	if ty.IsRunProposal {
		return 6, nil
	}
	if ty.IsUnlock {
		return 7, nil
	}
	if ty.IsSetMaxPreProps {
		return 9, nil
	}
	if ty.IsUpdateVoteModel {
		return 15, nil
	}
	if ty.IsSetPeriods {
		return 16, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeGovPalletCall) MarshalJSON() ([]byte, error) {
	if ty.IsSubmitProposal {
		m := map[string]interface{}{"WeteeGovPalletCall::submit_proposal": map[string]interface{}{
			"AsSubmitProposalDaoId0":       ty.AsSubmitProposalDaoId0,
			"AsSubmitProposalMemberData1":  ty.AsSubmitProposalMemberData1,
			"AsSubmitProposalPeriodIndex3": ty.AsSubmitProposalPeriodIndex3,
			"AsSubmitProposalProposal2":    ty.AsSubmitProposalProposal2,
		}}
		return json.Marshal(m)
	}
	if ty.IsDepositProposal {
		m := map[string]interface{}{"WeteeGovPalletCall::deposit_proposal": map[string]interface{}{
			"AsDepositProposalDaoId0":     ty.AsDepositProposalDaoId0,
			"AsDepositProposalDeposit2":   ty.AsDepositProposalDeposit2,
			"AsDepositProposalProposeId1": ty.AsDepositProposalProposeId1,
		}}
		return json.Marshal(m)
	}
	if ty.IsVoteForProp {
		m := map[string]interface{}{"WeteeGovPalletCall::vote_for_prop": map[string]interface{}{
			"AsVoteForPropDaoId0":     ty.AsVoteForPropDaoId0,
			"AsVoteForPropOpinion3":   ty.AsVoteForPropOpinion3,
			"AsVoteForPropPledge2":    ty.AsVoteForPropPledge2,
			"AsVoteForPropPropIndex1": ty.AsVoteForPropPropIndex1,
		}}
		return json.Marshal(m)
	}
	if ty.IsCancelVote {
		m := map[string]interface{}{"WeteeGovPalletCall::cancel_vote": map[string]interface{}{
			"AsCancelVoteDaoId0": ty.AsCancelVoteDaoId0,
			"AsCancelVoteIndex1": ty.AsCancelVoteIndex1,
		}}
		return json.Marshal(m)
	}
	if ty.IsRunProposal {
		m := map[string]interface{}{"WeteeGovPalletCall::run_proposal": map[string]interface{}{
			"AsRunProposalDaoId0": ty.AsRunProposalDaoId0,
			"AsRunProposalIndex1": ty.AsRunProposalIndex1,
		}}
		return json.Marshal(m)
	}
	if ty.IsUnlock {
		m := map[string]interface{}{"WeteeGovPalletCall::unlock": ty.AsUnlockDaoId0}
		return json.Marshal(m)
	}
	if ty.IsSetMaxPreProps {
		m := map[string]interface{}{"WeteeGovPalletCall::set_max_pre_props": map[string]interface{}{
			"AsSetMaxPrePropsDaoId0": ty.AsSetMaxPrePropsDaoId0,
			"AsSetMaxPrePropsMax1":   ty.AsSetMaxPrePropsMax1,
		}}
		return json.Marshal(m)
	}
	if ty.IsUpdateVoteModel {
		m := map[string]interface{}{"WeteeGovPalletCall::update_vote_model": map[string]interface{}{
			"AsUpdateVoteModelDaoId0": ty.AsUpdateVoteModelDaoId0,
			"AsUpdateVoteModelModel1": ty.AsUpdateVoteModelModel1,
		}}
		return json.Marshal(m)
	}
	if ty.IsSetPeriods {
		m := map[string]interface{}{"WeteeGovPalletCall::set_periods": map[string]interface{}{
			"AsSetPeriodsDaoId0":   ty.AsSetPeriodsDaoId0,
			"AsSetPeriodsPeriods1": ty.AsSetPeriodsPeriods1,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeTreasuryPalletCall with id=151
type WeteeTreasuryPalletCall struct {
	IsSpend             bool
	AsSpendDaoId0       uint64
	AsSpendBeneficiary1 [32]byte
	AsSpendAmount2      types.UCompact
}

func (ty WeteeTreasuryPalletCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsSpend {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSpendDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSpendBeneficiary1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSpendAmount2)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeTreasuryPalletCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 2:
		ty.IsSpend = true
		err = decoder.Decode(&ty.AsSpendDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSpendBeneficiary1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSpendAmount2)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeTreasuryPalletCall) Variant() (uint8, error) {
	if ty.IsSpend {
		return 2, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeTreasuryPalletCall) MarshalJSON() ([]byte, error) {
	if ty.IsSpend {
		m := map[string]interface{}{"WeteeTreasuryPalletCall::spend": map[string]interface{}{
			"AsSpendAmount2":      ty.AsSpendAmount2,
			"AsSpendBeneficiary1": ty.AsSpendBeneficiary1,
			"AsSpendDaoId0":       ty.AsSpendDaoId0,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteePrimitivesTypesEditType with id=156
type EditType struct {
	IsINSERT       bool
	IsUPDATE       bool
	AsUPDATEField0 uint16
	IsREMOVE       bool
	AsREMOVEField0 uint16
}

func (ty EditType) Encode(encoder scale.Encoder) (err error) {
	if ty.IsINSERT {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUPDATE {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUPDATEField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsREMOVE {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsREMOVEField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *EditType) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsINSERT = true
		return
	case 1:
		ty.IsUPDATE = true
		err = decoder.Decode(&ty.AsUPDATEField0)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsREMOVE = true
		err = decoder.Decode(&ty.AsREMOVEField0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *EditType) Variant() (uint8, error) {
	if ty.IsINSERT {
		return 0, nil
	}
	if ty.IsUPDATE {
		return 1, nil
	}
	if ty.IsREMOVE {
		return 2, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty EditType) MarshalJSON() ([]byte, error) {
	if ty.IsINSERT {
		return json.Marshal("EditType::INSERT")
	}
	if ty.IsUPDATE {
		m := map[string]interface{}{"EditType::UPDATE": ty.AsUPDATEField0}
		return json.Marshal(m)
	}
	if ty.IsREMOVE {
		m := map[string]interface{}{"EditType::REMOVE": ty.AsREMOVEField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated wetee_primitives_types_AppSettingInput with id={{false [155]}}
type AppSettingInput struct {
	// Field 0 with TypeId=156
	Etype EditType
	// Field 1 with TypeId=13
	K []byte
	// Field 2 with TypeId=13
	V []byte
}

// Generated WeteeAppPalletCall with id=152
type WeteeAppPalletCall struct {
	IsCreate            bool
	AsCreateName0       []byte
	AsCreateImage1      []byte
	AsCreatePort2       []uint32
	AsCreateCpu3        uint16
	AsCreateMemory4     uint16
	AsCreateDisk5       uint16
	AsCreateLevel6      byte
	AsCreateDeposit7    types.UCompact
	IsUpdate            bool
	AsUpdateAppId0      uint64
	AsUpdateName1       []byte
	AsUpdateImage2      []byte
	AsUpdatePort3       []uint32
	IsSetSettings       bool
	AsSetSettingsAppId0 uint64
	AsSetSettingsValue1 []AppSettingInput
	IsRecharge          bool
	AsRechargeId0       uint64
	AsRechargeDeposit1  types.U128
	IsStop              bool
	AsStopAppId0        uint64
}

func (ty WeteeAppPalletCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsCreate {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateName0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateImage1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreatePort2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateCpu3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateMemory4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateDisk5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateLevel6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateDeposit7)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUpdate {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateAppId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateName1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateImage2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdatePort3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetSettings {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetSettingsAppId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetSettingsValue1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsRecharge {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRechargeId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRechargeDeposit1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsStop {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsStopAppId0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeAppPalletCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 1:
		ty.IsCreate = true
		err = decoder.Decode(&ty.AsCreateName0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateImage1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreatePort2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateCpu3)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateMemory4)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateDisk5)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateLevel6)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateDeposit7)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsUpdate = true
		err = decoder.Decode(&ty.AsUpdateAppId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateName1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateImage2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdatePort3)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsSetSettings = true
		err = decoder.Decode(&ty.AsSetSettingsAppId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetSettingsValue1)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsRecharge = true
		err = decoder.Decode(&ty.AsRechargeId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsRechargeDeposit1)
		if err != nil {
			return err
		}
		return
	case 5:
		ty.IsStop = true
		err = decoder.Decode(&ty.AsStopAppId0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeAppPalletCall) Variant() (uint8, error) {
	if ty.IsCreate {
		return 1, nil
	}
	if ty.IsUpdate {
		return 2, nil
	}
	if ty.IsSetSettings {
		return 3, nil
	}
	if ty.IsRecharge {
		return 4, nil
	}
	if ty.IsStop {
		return 5, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeAppPalletCall) MarshalJSON() ([]byte, error) {
	if ty.IsCreate {
		m := map[string]interface{}{"WeteeAppPalletCall::create": map[string]interface{}{
			"AsCreateCpu3":     ty.AsCreateCpu3,
			"AsCreateDeposit7": ty.AsCreateDeposit7,
			"AsCreateDisk5":    ty.AsCreateDisk5,
			"AsCreateImage1":   ty.AsCreateImage1,
			"AsCreateLevel6":   ty.AsCreateLevel6,
			"AsCreateMemory4":  ty.AsCreateMemory4,
			"AsCreateName0":    ty.AsCreateName0,
			"AsCreatePort2":    ty.AsCreatePort2,
		}}
		return json.Marshal(m)
	}
	if ty.IsUpdate {
		m := map[string]interface{}{"WeteeAppPalletCall::update": map[string]interface{}{
			"AsUpdateAppId0": ty.AsUpdateAppId0,
			"AsUpdateImage2": ty.AsUpdateImage2,
			"AsUpdateName1":  ty.AsUpdateName1,
			"AsUpdatePort3":  ty.AsUpdatePort3,
		}}
		return json.Marshal(m)
	}
	if ty.IsSetSettings {
		m := map[string]interface{}{"WeteeAppPalletCall::set_settings": map[string]interface{}{
			"AsSetSettingsAppId0": ty.AsSetSettingsAppId0,
			"AsSetSettingsValue1": ty.AsSetSettingsValue1,
		}}
		return json.Marshal(m)
	}
	if ty.IsRecharge {
		m := map[string]interface{}{"WeteeAppPalletCall::recharge": map[string]interface{}{
			"AsRechargeDeposit1": ty.AsRechargeDeposit1,
			"AsRechargeId0":      ty.AsRechargeId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsStop {
		m := map[string]interface{}{"WeteeAppPalletCall::stop": ty.AsStopAppId0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeTaskPalletCall with id=157
type WeteeTaskPalletCall struct {
	IsCreate            bool
	AsCreateName0       []byte
	AsCreateImage1      []byte
	AsCreatePort2       []uint32
	AsCreateCpu3        uint16
	AsCreateMemory4     uint16
	AsCreateDisk5       uint16
	AsCreateLevel6      byte
	AsCreateDeposit7    types.UCompact
	IsRerun             bool
	AsRerunId0          uint64
	IsUpdate            bool
	AsUpdateAppId0      uint64
	AsUpdateName1       []byte
	AsUpdateImage2      []byte
	AsUpdatePort3       []uint32
	IsSetSettings       bool
	AsSetSettingsAppId0 uint64
	AsSetSettingsValue1 []AppSettingInput
	IsRecharge          bool
	AsRechargeId0       uint64
	AsRechargeDeposit1  types.U128
	IsStop              bool
	AsStopAppId0        uint64
}

func (ty WeteeTaskPalletCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsCreate {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateName0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateImage1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreatePort2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateCpu3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateMemory4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateDisk5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateLevel6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateDeposit7)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsRerun {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRerunId0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUpdate {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateAppId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateName1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateImage2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdatePort3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetSettings {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetSettingsAppId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetSettingsValue1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsRecharge {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRechargeId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRechargeDeposit1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsStop {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsStopAppId0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeTaskPalletCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 1:
		ty.IsCreate = true
		err = decoder.Decode(&ty.AsCreateName0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateImage1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreatePort2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateCpu3)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateMemory4)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateDisk5)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateLevel6)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateDeposit7)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsRerun = true
		err = decoder.Decode(&ty.AsRerunId0)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsUpdate = true
		err = decoder.Decode(&ty.AsUpdateAppId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateName1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateImage2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdatePort3)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsSetSettings = true
		err = decoder.Decode(&ty.AsSetSettingsAppId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetSettingsValue1)
		if err != nil {
			return err
		}
		return
	case 5:
		ty.IsRecharge = true
		err = decoder.Decode(&ty.AsRechargeId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsRechargeDeposit1)
		if err != nil {
			return err
		}
		return
	case 6:
		ty.IsStop = true
		err = decoder.Decode(&ty.AsStopAppId0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeTaskPalletCall) Variant() (uint8, error) {
	if ty.IsCreate {
		return 1, nil
	}
	if ty.IsRerun {
		return 2, nil
	}
	if ty.IsUpdate {
		return 3, nil
	}
	if ty.IsSetSettings {
		return 4, nil
	}
	if ty.IsRecharge {
		return 5, nil
	}
	if ty.IsStop {
		return 6, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeTaskPalletCall) MarshalJSON() ([]byte, error) {
	if ty.IsCreate {
		m := map[string]interface{}{"WeteeTaskPalletCall::create": map[string]interface{}{
			"AsCreateCpu3":     ty.AsCreateCpu3,
			"AsCreateDeposit7": ty.AsCreateDeposit7,
			"AsCreateDisk5":    ty.AsCreateDisk5,
			"AsCreateImage1":   ty.AsCreateImage1,
			"AsCreateLevel6":   ty.AsCreateLevel6,
			"AsCreateMemory4":  ty.AsCreateMemory4,
			"AsCreateName0":    ty.AsCreateName0,
			"AsCreatePort2":    ty.AsCreatePort2,
		}}
		return json.Marshal(m)
	}
	if ty.IsRerun {
		m := map[string]interface{}{"WeteeTaskPalletCall::rerun": ty.AsRerunId0}
		return json.Marshal(m)
	}
	if ty.IsUpdate {
		m := map[string]interface{}{"WeteeTaskPalletCall::update": map[string]interface{}{
			"AsUpdateAppId0": ty.AsUpdateAppId0,
			"AsUpdateImage2": ty.AsUpdateImage2,
			"AsUpdateName1":  ty.AsUpdateName1,
			"AsUpdatePort3":  ty.AsUpdatePort3,
		}}
		return json.Marshal(m)
	}
	if ty.IsSetSettings {
		m := map[string]interface{}{"WeteeTaskPalletCall::set_settings": map[string]interface{}{
			"AsSetSettingsAppId0": ty.AsSetSettingsAppId0,
			"AsSetSettingsValue1": ty.AsSetSettingsValue1,
		}}
		return json.Marshal(m)
	}
	if ty.IsRecharge {
		m := map[string]interface{}{"WeteeTaskPalletCall::recharge": map[string]interface{}{
			"AsRechargeDeposit1": ty.AsRechargeDeposit1,
			"AsRechargeId0":      ty.AsRechargeId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsStop {
		m := map[string]interface{}{"WeteeTaskPalletCall::stop": ty.AsStopAppId0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated Option with id=161
type OptionTUint32 struct {
	IsNone       bool
	IsSome       bool
	AsSomeField0 uint32
}

func (ty OptionTUint32) Encode(encoder scale.Encoder) (err error) {
	if ty.IsNone {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSome {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSomeField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *OptionTUint32) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsNone = true
		return
	case 1:
		ty.IsSome = true
		err = decoder.Decode(&ty.AsSomeField0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *OptionTUint32) Variant() (uint8, error) {
	if ty.IsNone {
		return 0, nil
	}
	if ty.IsSome {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty OptionTUint32) MarshalJSON() ([]byte, error) {
	if ty.IsNone {
		return json.Marshal("OptionTUint32::None")
	}
	if ty.IsSome {
		m := map[string]interface{}{"OptionTUint32::Some": ty.AsSomeField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated Option with id=162
type OptionTU128 struct {
	IsNone       bool
	IsSome       bool
	AsSomeField0 types.U128
}

func (ty OptionTU128) Encode(encoder scale.Encoder) (err error) {
	if ty.IsNone {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSome {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSomeField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *OptionTU128) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsNone = true
		return
	case 1:
		ty.IsSome = true
		err = decoder.Decode(&ty.AsSomeField0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *OptionTU128) Variant() (uint8, error) {
	if ty.IsNone {
		return 0, nil
	}
	if ty.IsSome {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty OptionTU128) MarshalJSON() ([]byte, error) {
	if ty.IsNone {
		return json.Marshal("OptionTU128::None")
	}
	if ty.IsSome {
		m := map[string]interface{}{"OptionTU128::Some": ty.AsSomeField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated wetee_worker_Ip with id={{false [160]}}
type Ip struct {
	// Field 0 with TypeId=161
	Ipv4 OptionTUint32
	// Field 1 with TypeId=162
	Ipv6 OptionTU128
}

// Generated wetee_primitives_types_Cr with id={{false [165]}}
type Cr struct {
	// Field 0 with TypeId=85
	Cpu uint16
	// Field 1 with TypeId=85
	Mem uint16
	// Field 2 with TypeId=85
	Disk uint16
}

// Generated wetee_worker_ProofOfWork with id={{false [164]}}
type ProofOfWork struct {
	// Field 0 with TypeId=13
	LogHash []byte
	// Field 1 with TypeId=165
	Cr Cr
	// Field 2 with TypeId=13
	CrHash []byte
	// Field 3 with TypeId=13
	PublicKey []byte
}

// Generated WeteeWorkerPalletCall with id=158
type WeteeWorkerPalletCall struct {
	IsClusterRegister            bool
	AsClusterRegisterName0       []byte
	AsClusterRegisterIp1         []Ip
	AsClusterRegisterPort2       uint32
	AsClusterRegisterLevel3      byte
	IsClusterProofUpload         bool
	AsClusterProofUploadId0      uint64
	AsClusterProofUploadProof1   []byte
	IsClusterMortgage            bool
	AsClusterMortgageId0         uint64
	AsClusterMortgageCpu1        uint16
	AsClusterMortgageMem2        uint16
	AsClusterMortgageDisk3       uint16
	AsClusterMortgageDeposit4    types.UCompact
	IsClusterUnmortgage          bool
	AsClusterUnmortgageId0       uint64
	AsClusterUnmortgageBlockNum1 uint64
	IsWorkProofUpload            bool
	AsWorkProofUploadWorkId0     WorkId
	AsWorkProofUploadProof1      ProofOfWork
	IsClusterWithdrawal          bool
	AsClusterWithdrawalWorkId0   WorkId
	AsClusterWithdrawalAmount1   types.U128
	IsClusterStop                bool
	AsClusterStopId0             uint64
	IsClusterReport              bool
	AsClusterReportClusterId0    uint64
	AsClusterReportWorkId1       WorkId
	AsClusterReportReason2       []byte
	IsReportClose                bool
	AsReportCloseClusterId0      uint64
	AsReportCloseWorkId1         WorkId
}

func (ty WeteeWorkerPalletCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsClusterRegister {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterRegisterName0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterRegisterIp1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterRegisterPort2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterRegisterLevel3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsClusterProofUpload {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterProofUploadId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterProofUploadProof1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsClusterMortgage {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterMortgageId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterMortgageCpu1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterMortgageMem2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterMortgageDisk3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterMortgageDeposit4)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsClusterUnmortgage {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterUnmortgageId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterUnmortgageBlockNum1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWorkProofUpload {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWorkProofUploadWorkId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWorkProofUploadProof1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsClusterWithdrawal {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterWithdrawalWorkId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterWithdrawalAmount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsClusterStop {
		err = encoder.PushByte(7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterStopId0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsClusterReport {
		err = encoder.PushByte(8)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterReportClusterId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterReportWorkId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterReportReason2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsReportClose {
		err = encoder.PushByte(9)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReportCloseClusterId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReportCloseWorkId1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeWorkerPalletCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 1:
		ty.IsClusterRegister = true
		err = decoder.Decode(&ty.AsClusterRegisterName0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsClusterRegisterIp1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsClusterRegisterPort2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsClusterRegisterLevel3)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsClusterProofUpload = true
		err = decoder.Decode(&ty.AsClusterProofUploadId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsClusterProofUploadProof1)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsClusterMortgage = true
		err = decoder.Decode(&ty.AsClusterMortgageId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsClusterMortgageCpu1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsClusterMortgageMem2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsClusterMortgageDisk3)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsClusterMortgageDeposit4)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsClusterUnmortgage = true
		err = decoder.Decode(&ty.AsClusterUnmortgageId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsClusterUnmortgageBlockNum1)
		if err != nil {
			return err
		}
		return
	case 5:
		ty.IsWorkProofUpload = true
		err = decoder.Decode(&ty.AsWorkProofUploadWorkId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsWorkProofUploadProof1)
		if err != nil {
			return err
		}
		return
	case 6:
		ty.IsClusterWithdrawal = true
		err = decoder.Decode(&ty.AsClusterWithdrawalWorkId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsClusterWithdrawalAmount1)
		if err != nil {
			return err
		}
		return
	case 7:
		ty.IsClusterStop = true
		err = decoder.Decode(&ty.AsClusterStopId0)
		if err != nil {
			return err
		}
		return
	case 8:
		ty.IsClusterReport = true
		err = decoder.Decode(&ty.AsClusterReportClusterId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsClusterReportWorkId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsClusterReportReason2)
		if err != nil {
			return err
		}
		return
	case 9:
		ty.IsReportClose = true
		err = decoder.Decode(&ty.AsReportCloseClusterId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsReportCloseWorkId1)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeWorkerPalletCall) Variant() (uint8, error) {
	if ty.IsClusterRegister {
		return 1, nil
	}
	if ty.IsClusterProofUpload {
		return 4, nil
	}
	if ty.IsClusterMortgage {
		return 2, nil
	}
	if ty.IsClusterUnmortgage {
		return 3, nil
	}
	if ty.IsWorkProofUpload {
		return 5, nil
	}
	if ty.IsClusterWithdrawal {
		return 6, nil
	}
	if ty.IsClusterStop {
		return 7, nil
	}
	if ty.IsClusterReport {
		return 8, nil
	}
	if ty.IsReportClose {
		return 9, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeWorkerPalletCall) MarshalJSON() ([]byte, error) {
	if ty.IsClusterRegister {
		m := map[string]interface{}{"WeteeWorkerPalletCall::cluster_register": map[string]interface{}{
			"AsClusterRegisterIp1":    ty.AsClusterRegisterIp1,
			"AsClusterRegisterLevel3": ty.AsClusterRegisterLevel3,
			"AsClusterRegisterName0":  ty.AsClusterRegisterName0,
			"AsClusterRegisterPort2":  ty.AsClusterRegisterPort2,
		}}
		return json.Marshal(m)
	}
	if ty.IsClusterProofUpload {
		m := map[string]interface{}{"WeteeWorkerPalletCall::cluster_proof_upload": map[string]interface{}{
			"AsClusterProofUploadId0":    ty.AsClusterProofUploadId0,
			"AsClusterProofUploadProof1": ty.AsClusterProofUploadProof1,
		}}
		return json.Marshal(m)
	}
	if ty.IsClusterMortgage {
		m := map[string]interface{}{"WeteeWorkerPalletCall::cluster_mortgage": map[string]interface{}{
			"AsClusterMortgageCpu1":     ty.AsClusterMortgageCpu1,
			"AsClusterMortgageDeposit4": ty.AsClusterMortgageDeposit4,
			"AsClusterMortgageDisk3":    ty.AsClusterMortgageDisk3,
			"AsClusterMortgageId0":      ty.AsClusterMortgageId0,
			"AsClusterMortgageMem2":     ty.AsClusterMortgageMem2,
		}}
		return json.Marshal(m)
	}
	if ty.IsClusterUnmortgage {
		m := map[string]interface{}{"WeteeWorkerPalletCall::cluster_unmortgage": map[string]interface{}{
			"AsClusterUnmortgageBlockNum1": ty.AsClusterUnmortgageBlockNum1,
			"AsClusterUnmortgageId0":       ty.AsClusterUnmortgageId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsWorkProofUpload {
		m := map[string]interface{}{"WeteeWorkerPalletCall::work_proof_upload": map[string]interface{}{
			"AsWorkProofUploadProof1":  ty.AsWorkProofUploadProof1,
			"AsWorkProofUploadWorkId0": ty.AsWorkProofUploadWorkId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsClusterWithdrawal {
		m := map[string]interface{}{"WeteeWorkerPalletCall::cluster_withdrawal": map[string]interface{}{
			"AsClusterWithdrawalAmount1": ty.AsClusterWithdrawalAmount1,
			"AsClusterWithdrawalWorkId0": ty.AsClusterWithdrawalWorkId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsClusterStop {
		m := map[string]interface{}{"WeteeWorkerPalletCall::cluster_stop": ty.AsClusterStopId0}
		return json.Marshal(m)
	}
	if ty.IsClusterReport {
		m := map[string]interface{}{"WeteeWorkerPalletCall::cluster_report": map[string]interface{}{
			"AsClusterReportClusterId0": ty.AsClusterReportClusterId0,
			"AsClusterReportReason2":    ty.AsClusterReportReason2,
			"AsClusterReportWorkId1":    ty.AsClusterReportWorkId1,
		}}
		return json.Marshal(m)
	}
	if ty.IsReportClose {
		m := map[string]interface{}{"WeteeWorkerPalletCall::report_close": map[string]interface{}{
			"AsReportCloseClusterId0": ty.AsReportCloseClusterId0,
			"AsReportCloseWorkId1":    ty.AsReportCloseWorkId1,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeRuntimeRuntimeCall with id=132
type RuntimeCall struct {
	IsSystem              bool
	AsSystemField0        *FrameSystemPalletCall
	IsTimestamp           bool
	AsTimestampField0     *PalletTimestampPalletCall
	IsGrandpa             bool
	AsGrandpaField0       *PalletGrandpaPalletCall
	IsBalances            bool
	AsBalancesField0      *PalletBalancesPalletCall
	IsSudo                bool
	AsSudoField0          *PalletSudoPalletCall
	IsTokens              bool
	AsTokensField0        *OrmlTokensModuleCall
	IsMessageQueue        bool
	AsMessageQueueField0  *PalletMessageQueuePalletCall
	IsWeteeOrg            bool
	AsWeteeOrgField0      *WeteeOrgPalletCall
	IsWeteeAsset          bool
	AsWeteeAssetField0    *WeteeAssetsPalletCall
	IsWeteeSudo           bool
	AsWeteeSudoField0     *WeteeSudoPalletCall
	IsWeteeGuild          bool
	AsWeteeGuildField0    *WeteeGuildPalletCall
	IsWeteeProject        bool
	AsWeteeProjectField0  *WeteeProjectPalletCall
	IsWeteeGov            bool
	AsWeteeGovField0      *WeteeGovPalletCall
	IsWeteeTreasury       bool
	AsWeteeTreasuryField0 *WeteeTreasuryPalletCall
	IsWeteeApp            bool
	AsWeteeAppField0      *WeteeAppPalletCall
	IsWeteeTask           bool
	AsWeteeTaskField0     *WeteeTaskPalletCall
	IsWeteeWorker         bool
	AsWeteeWorkerField0   *WeteeWorkerPalletCall
}

func (ty RuntimeCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsSystem {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSystemField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTimestamp {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTimestampField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsGrandpa {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsGrandpaField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsBalances {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBalancesField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSudo {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSudoField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTokens {
		err = encoder.PushByte(7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTokensField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsMessageQueue {
		err = encoder.PushByte(9)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsMessageQueueField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWeteeOrg {
		err = encoder.PushByte(10)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWeteeOrgField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWeteeAsset {
		err = encoder.PushByte(11)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWeteeAssetField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWeteeSudo {
		err = encoder.PushByte(12)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWeteeSudoField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWeteeGuild {
		err = encoder.PushByte(13)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWeteeGuildField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWeteeProject {
		err = encoder.PushByte(14)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWeteeProjectField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWeteeGov {
		err = encoder.PushByte(15)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWeteeGovField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWeteeTreasury {
		err = encoder.PushByte(16)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWeteeTreasuryField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWeteeApp {
		err = encoder.PushByte(17)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWeteeAppField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWeteeTask {
		err = encoder.PushByte(18)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWeteeTaskField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWeteeWorker {
		err = encoder.PushByte(19)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWeteeWorkerField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *RuntimeCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsSystem = true
		var tmp FrameSystemPalletCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsSystemField0 = &tmp
		return
	case 1:
		ty.IsTimestamp = true
		var tmp PalletTimestampPalletCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsTimestampField0 = &tmp
		return
	case 3:
		ty.IsGrandpa = true
		var tmp PalletGrandpaPalletCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsGrandpaField0 = &tmp
		return
	case 4:
		ty.IsBalances = true
		var tmp PalletBalancesPalletCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsBalancesField0 = &tmp
		return
	case 6:
		ty.IsSudo = true
		var tmp PalletSudoPalletCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsSudoField0 = &tmp
		return
	case 7:
		ty.IsTokens = true
		var tmp OrmlTokensModuleCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsTokensField0 = &tmp
		return
	case 9:
		ty.IsMessageQueue = true
		var tmp PalletMessageQueuePalletCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsMessageQueueField0 = &tmp
		return
	case 10:
		ty.IsWeteeOrg = true
		var tmp WeteeOrgPalletCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsWeteeOrgField0 = &tmp
		return
	case 11:
		ty.IsWeteeAsset = true
		var tmp WeteeAssetsPalletCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsWeteeAssetField0 = &tmp
		return
	case 12:
		ty.IsWeteeSudo = true
		var tmp WeteeSudoPalletCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsWeteeSudoField0 = &tmp
		return
	case 13:
		ty.IsWeteeGuild = true
		var tmp WeteeGuildPalletCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsWeteeGuildField0 = &tmp
		return
	case 14:
		ty.IsWeteeProject = true
		var tmp WeteeProjectPalletCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsWeteeProjectField0 = &tmp
		return
	case 15:
		ty.IsWeteeGov = true
		var tmp WeteeGovPalletCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsWeteeGovField0 = &tmp
		return
	case 16:
		ty.IsWeteeTreasury = true
		var tmp WeteeTreasuryPalletCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsWeteeTreasuryField0 = &tmp
		return
	case 17:
		ty.IsWeteeApp = true
		var tmp WeteeAppPalletCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsWeteeAppField0 = &tmp
		return
	case 18:
		ty.IsWeteeTask = true
		var tmp WeteeTaskPalletCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsWeteeTaskField0 = &tmp
		return
	case 19:
		ty.IsWeteeWorker = true
		var tmp WeteeWorkerPalletCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsWeteeWorkerField0 = &tmp
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *RuntimeCall) Variant() (uint8, error) {
	if ty.IsSystem {
		return 0, nil
	}
	if ty.IsTimestamp {
		return 1, nil
	}
	if ty.IsGrandpa {
		return 3, nil
	}
	if ty.IsBalances {
		return 4, nil
	}
	if ty.IsSudo {
		return 6, nil
	}
	if ty.IsTokens {
		return 7, nil
	}
	if ty.IsMessageQueue {
		return 9, nil
	}
	if ty.IsWeteeOrg {
		return 10, nil
	}
	if ty.IsWeteeAsset {
		return 11, nil
	}
	if ty.IsWeteeSudo {
		return 12, nil
	}
	if ty.IsWeteeGuild {
		return 13, nil
	}
	if ty.IsWeteeProject {
		return 14, nil
	}
	if ty.IsWeteeGov {
		return 15, nil
	}
	if ty.IsWeteeTreasury {
		return 16, nil
	}
	if ty.IsWeteeApp {
		return 17, nil
	}
	if ty.IsWeteeTask {
		return 18, nil
	}
	if ty.IsWeteeWorker {
		return 19, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty RuntimeCall) MarshalJSON() ([]byte, error) {
	if ty.IsSystem {
		m := map[string]interface{}{"RuntimeCall::System": ty.AsSystemField0}
		return json.Marshal(m)
	}
	if ty.IsTimestamp {
		m := map[string]interface{}{"RuntimeCall::Timestamp": ty.AsTimestampField0}
		return json.Marshal(m)
	}
	if ty.IsGrandpa {
		m := map[string]interface{}{"RuntimeCall::Grandpa": ty.AsGrandpaField0}
		return json.Marshal(m)
	}
	if ty.IsBalances {
		m := map[string]interface{}{"RuntimeCall::Balances": ty.AsBalancesField0}
		return json.Marshal(m)
	}
	if ty.IsSudo {
		m := map[string]interface{}{"RuntimeCall::Sudo": ty.AsSudoField0}
		return json.Marshal(m)
	}
	if ty.IsTokens {
		m := map[string]interface{}{"RuntimeCall::Tokens": ty.AsTokensField0}
		return json.Marshal(m)
	}
	if ty.IsMessageQueue {
		m := map[string]interface{}{"RuntimeCall::MessageQueue": ty.AsMessageQueueField0}
		return json.Marshal(m)
	}
	if ty.IsWeteeOrg {
		m := map[string]interface{}{"RuntimeCall::WeteeOrg": ty.AsWeteeOrgField0}
		return json.Marshal(m)
	}
	if ty.IsWeteeAsset {
		m := map[string]interface{}{"RuntimeCall::WeteeAsset": ty.AsWeteeAssetField0}
		return json.Marshal(m)
	}
	if ty.IsWeteeSudo {
		m := map[string]interface{}{"RuntimeCall::WeteeSudo": ty.AsWeteeSudoField0}
		return json.Marshal(m)
	}
	if ty.IsWeteeGuild {
		m := map[string]interface{}{"RuntimeCall::WeteeGuild": ty.AsWeteeGuildField0}
		return json.Marshal(m)
	}
	if ty.IsWeteeProject {
		m := map[string]interface{}{"RuntimeCall::WeteeProject": ty.AsWeteeProjectField0}
		return json.Marshal(m)
	}
	if ty.IsWeteeGov {
		m := map[string]interface{}{"RuntimeCall::WeteeGov": ty.AsWeteeGovField0}
		return json.Marshal(m)
	}
	if ty.IsWeteeTreasury {
		m := map[string]interface{}{"RuntimeCall::WeteeTreasury": ty.AsWeteeTreasuryField0}
		return json.Marshal(m)
	}
	if ty.IsWeteeApp {
		m := map[string]interface{}{"RuntimeCall::WeteeApp": ty.AsWeteeAppField0}
		return json.Marshal(m)
	}
	if ty.IsWeteeTask {
		m := map[string]interface{}{"RuntimeCall::WeteeTask": ty.AsWeteeTaskField0}
		return json.Marshal(m)
	}
	if ty.IsWeteeWorker {
		m := map[string]interface{}{"RuntimeCall::WeteeWorker": ty.AsWeteeWorkerField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated PalletGrandpaStoredState with id=93
type StoredState struct {
	IsLive                      bool
	IsPendingPause              bool
	AsPendingPauseScheduledAt0  uint64
	AsPendingPauseDelay1        uint64
	IsPaused                    bool
	IsPendingResume             bool
	AsPendingResumeScheduledAt0 uint64
	AsPendingResumeDelay1       uint64
}

func (ty StoredState) Encode(encoder scale.Encoder) (err error) {
	if ty.IsLive {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsPendingPause {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsPendingPauseScheduledAt0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsPendingPauseDelay1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsPaused {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsPendingResume {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsPendingResumeScheduledAt0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsPendingResumeDelay1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *StoredState) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsLive = true
		return
	case 1:
		ty.IsPendingPause = true
		err = decoder.Decode(&ty.AsPendingPauseScheduledAt0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsPendingPauseDelay1)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsPaused = true
		return
	case 3:
		ty.IsPendingResume = true
		err = decoder.Decode(&ty.AsPendingResumeScheduledAt0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsPendingResumeDelay1)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *StoredState) Variant() (uint8, error) {
	if ty.IsLive {
		return 0, nil
	}
	if ty.IsPendingPause {
		return 1, nil
	}
	if ty.IsPaused {
		return 2, nil
	}
	if ty.IsPendingResume {
		return 3, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty StoredState) MarshalJSON() ([]byte, error) {
	if ty.IsLive {
		return json.Marshal("StoredState::Live")
	}
	if ty.IsPendingPause {
		m := map[string]interface{}{"StoredState::PendingPause": map[string]interface{}{
			"AsPendingPauseDelay1":       ty.AsPendingPauseDelay1,
			"AsPendingPauseScheduledAt0": ty.AsPendingPauseScheduledAt0,
		}}
		return json.Marshal(m)
	}
	if ty.IsPaused {
		return json.Marshal("StoredState::Paused")
	}
	if ty.IsPendingResume {
		m := map[string]interface{}{"StoredState::PendingResume": map[string]interface{}{
			"AsPendingResumeDelay1":       ty.AsPendingResumeDelay1,
			"AsPendingResumeScheduledAt0": ty.AsPendingResumeScheduledAt0,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated Option with id=96
type OptionTUint64 struct {
	IsNone       bool
	IsSome       bool
	AsSomeField0 uint64
}

func (ty OptionTUint64) Encode(encoder scale.Encoder) (err error) {
	if ty.IsNone {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSome {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSomeField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *OptionTUint64) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsNone = true
		return
	case 1:
		ty.IsSome = true
		err = decoder.Decode(&ty.AsSomeField0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *OptionTUint64) Variant() (uint8, error) {
	if ty.IsNone {
		return 0, nil
	}
	if ty.IsSome {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty OptionTUint64) MarshalJSON() ([]byte, error) {
	if ty.IsNone {
		return json.Marshal("OptionTUint64::None")
	}
	if ty.IsSome {
		m := map[string]interface{}{"OptionTUint64::Some": ty.AsSomeField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated pallet_grandpa_StoredPendingChange with id={{false [94]}}
type StoredPendingChange struct {
	// Field 0 with TypeId=4
	ScheduledAt uint64
	// Field 1 with TypeId=4
	Delay uint64
	// Field 2 with TypeId=95
	NextAuthorities []TupleOfByteArray32Uint64
	// Field 3 with TypeId=96
	Forced OptionTUint64
}

// Tuple type generated from metadata id 97
type TupleOfUint64Uint64 struct {
	Elem0 uint64
	Elem1 uint64
}

// Generated PalletBalancesTypesReasons with id=114
type Reasons struct {
	IsFee  bool
	IsMisc bool
	IsAll  bool
}

func (ty Reasons) Encode(encoder scale.Encoder) (err error) {
	if ty.IsFee {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsMisc {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsAll {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *Reasons) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsFee = true
		return
	case 1:
		ty.IsMisc = true
		return
	case 2:
		ty.IsAll = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *Reasons) Variant() (uint8, error) {
	if ty.IsFee {
		return 0, nil
	}
	if ty.IsMisc {
		return 1, nil
	}
	if ty.IsAll {
		return 2, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty Reasons) MarshalJSON() ([]byte, error) {
	if ty.IsFee {
		return json.Marshal("Reasons::Fee")
	}
	if ty.IsMisc {
		return json.Marshal("Reasons::Misc")
	}
	if ty.IsAll {
		return json.Marshal("Reasons::All")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated pallet_balances_types_BalanceLock with id={{false [113]}}
type BalanceLock struct {
	// Field 0 with TypeId=43
	Id [8]byte
	// Field 1 with TypeId=6
	Amount types.U128
	// Field 2 with TypeId=114
	Reasons Reasons
}

// Generated pallet_balances_types_ReserveData with id={{false [117]}}
type ReserveData struct {
	// Field 0 with TypeId=43
	Id [8]byte
	// Field 1 with TypeId=6
	Amount types.U128
}

// Generated pallet_balances_types_IdAmount with id={{false [120]}}
type IdAmount struct {
	// Field 0 with TypeId=40
	Id struct{}
	// Field 1 with TypeId=6
	Amount types.U128
}

// Generated PalletTransactionPaymentReleases with id=130
type Releases struct {
	IsV1Ancient bool
	IsV2        bool
}

func (ty Releases) Encode(encoder scale.Encoder) (err error) {
	if ty.IsV1Ancient {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsV2 {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *Releases) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsV1Ancient = true
		return
	case 1:
		ty.IsV2 = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *Releases) Variant() (uint8, error) {
	if ty.IsV1Ancient {
		return 0, nil
	}
	if ty.IsV2 {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty Releases) MarshalJSON() ([]byte, error) {
	if ty.IsV1Ancient {
		return json.Marshal("Releases::V1Ancient")
	}
	if ty.IsV2 {
		return json.Marshal("Releases::V2")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Tuple type generated from metadata id 167
type TupleOfByteArray32Uint641 struct {
	Elem0 [32]byte
	Elem1 uint64
}

// Generated orml_tokens_BalanceLock with id={{false [169]}}
type BalanceLock1 struct {
	// Field 0 with TypeId=43
	Id [8]byte
	// Field 1 with TypeId=6
	Amount types.U128
}

// Generated orml_tokens_AccountData with id={{false [171]}}
type AccountData1 struct {
	// Field 0 with TypeId=6
	Free types.U128
	// Field 1 with TypeId=6
	Reserved types.U128
	// Field 2 with TypeId=6
	Frozen types.U128
}

// Generated orml_tokens_ReserveData with id={{false [173]}}
type ReserveDataReserveIdentifierByteArray8 struct {
	// Field 0 with TypeId=43
	Id [8]byte
	// Field 1 with TypeId=6
	Amount types.U128
}

// Generated pallet_message_queue_Neighbours with id={{false [179]}}
type Neighbours struct {
	// Field 0 with TypeId=45
	Prev MessageOrigin
	// Field 1 with TypeId=45
	Next MessageOrigin
}

// Generated Option with id=178
type OptionTNeighbours struct {
	IsNone       bool
	IsSome       bool
	AsSomeField0 Neighbours
}

func (ty OptionTNeighbours) Encode(encoder scale.Encoder) (err error) {
	if ty.IsNone {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSome {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSomeField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *OptionTNeighbours) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsNone = true
		return
	case 1:
		ty.IsSome = true
		err = decoder.Decode(&ty.AsSomeField0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *OptionTNeighbours) Variant() (uint8, error) {
	if ty.IsNone {
		return 0, nil
	}
	if ty.IsSome {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty OptionTNeighbours) MarshalJSON() ([]byte, error) {
	if ty.IsNone {
		return json.Marshal("OptionTNeighbours::None")
	}
	if ty.IsSome {
		m := map[string]interface{}{"OptionTNeighbours::Some": ty.AsSomeField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated pallet_message_queue_BookState with id={{false [177]}}
type BookState struct {
	// Field 0 with TypeId=8
	Begin uint32
	// Field 1 with TypeId=8
	End uint32
	// Field 2 with TypeId=8
	Count uint32
	// Field 3 with TypeId=178
	ReadyNeighbours OptionTNeighbours
	// Field 4 with TypeId=4
	MessageCount uint64
	// Field 5 with TypeId=4
	Size uint64
}

// Tuple type generated from metadata id 180
type TupleOfMessageOriginUint32 struct {
	Elem0 MessageOrigin
	Elem1 uint32
}

// Generated pallet_message_queue_Page with id={{false [181]}}
type Page struct {
	// Field 0 with TypeId=8
	Remaining uint32
	// Field 1 with TypeId=8
	RemainingSize uint32
	// Field 2 with TypeId=8
	FirstIndex uint32
	// Field 3 with TypeId=8
	First uint32
	// Field 4 with TypeId=8
	Last uint32
	// Field 5 with TypeId=182
	Heap []byte
}

// Generated wetee_org_OrgInfo with id={{false [184]}}
type OrgInfo struct {
	// Field 0 with TypeId=4
	Id uint64
	// Field 1 with TypeId=0
	Creator [32]byte
	// Field 2 with TypeId=4
	StartBlock uint64
	// Field 3 with TypeId=0
	DaoAccountId [32]byte
	// Field 4 with TypeId=13
	Name []byte
	// Field 5 with TypeId=13
	Desc []byte
	// Field 6 with TypeId=13
	Purpose []byte
	// Field 7 with TypeId=13
	MetaData []byte
	// Field 8 with TypeId=13
	ImApi []byte
	// Field 9 with TypeId=13
	Bg []byte
	// Field 10 with TypeId=13
	Logo []byte
	// Field 11 with TypeId=13
	Img []byte
	// Field 12 with TypeId=13
	HomeUrl []byte
	// Field 13 with TypeId=138
	Status Status
}

// Generated wetee_org_GuildInfo with id={{false [186]}}
type GuildInfo struct {
	// Field 0 with TypeId=4
	Id uint64
	// Field 1 with TypeId=0
	Creator [32]byte
	// Field 2 with TypeId=4
	StartBlock uint64
	// Field 3 with TypeId=0
	DaoAccountId [32]byte
	// Field 4 with TypeId=13
	Name []byte
	// Field 5 with TypeId=13
	Desc []byte
	// Field 6 with TypeId=13
	MetaData []byte
	// Field 7 with TypeId=138
	Status Status
}

// Generated wetee_org_QuarterTask with id={{false [189]}}
type QuarterTask struct {
	// Field 0 with TypeId=4
	Id uint64
	// Field 1 with TypeId=13
	Name []byte
	// Field 2 with TypeId=2
	Priority byte
	// Field 3 with TypeId=0
	Creator [32]byte
	// Field 4 with TypeId=13
	Tags []byte
	// Field 5 with TypeId=2
	Status byte
}

// Generated wetee_org_App with id={{false [192]}}
type App struct {
	// Field 0 with TypeId=4
	Id uint64
	// Field 1 with TypeId=13
	Url []byte
	// Field 2 with TypeId=13
	Name []byte
	// Field 3 with TypeId=13
	Desc []byte
	// Field 4 with TypeId=13
	Icon []byte
	// Field 5 with TypeId=0
	Creator [32]byte
	// Field 6 with TypeId=138
	Status Status
}

// Generated wetee_org_OrgApp with id={{false [194]}}
type OrgApp struct {
	// Field 0 with TypeId=4
	Id uint64
	// Field 1 with TypeId=4
	AppId uint64
	// Field 2 with TypeId=4
	StartBlock uint64
	// Field 3 with TypeId=13
	Name []byte
	// Field 4 with TypeId=13
	Desc []byte
	// Field 5 with TypeId=13
	Icon []byte
	// Field 6 with TypeId=13
	Url []byte
	// Field 7 with TypeId=138
	Status Status
}

// Tuple type generated from metadata id 196
type TupleOfUint64ByteArray32 struct {
	Elem0 uint64
	Elem1 [32]byte
}

// Generated wetee_assets_DaoAssetInfo with id={{false [199]}}
type DaoAssetInfo struct {
	// Field 0 with TypeId=0
	Owner [32]byte
	// Field 1 with TypeId=51
	Metadata DaoAssetMeta
}

// Generated wetee_sudo_SudoTask with id={{false [202]}}
type SudoTask struct {
	// Field 0 with TypeId=8
	Id uint32
	// Field 1 with TypeId=132
	Proposal RuntimeCall
	// Field 2 with TypeId=4
	Time uint64
}

// Generated WeteeProjectStatus with id=208
type Status1 struct {
	IsActive   bool
	IsInActive bool
}

func (ty Status1) Encode(encoder scale.Encoder) (err error) {
	if ty.IsActive {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsInActive {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *Status1) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsActive = true
		return
	case 1:
		ty.IsInActive = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *Status1) Variant() (uint8, error) {
	if ty.IsActive {
		return 0, nil
	}
	if ty.IsInActive {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty Status1) MarshalJSON() ([]byte, error) {
	if ty.IsActive {
		return json.Marshal("Status1::Active")
	}
	if ty.IsInActive {
		return json.Marshal("Status1::InActive")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated wetee_project_ProjectInfo with id={{false [207]}}
type ProjectInfo struct {
	// Field 0 with TypeId=4
	Id uint64
	// Field 1 with TypeId=13
	Name []byte
	// Field 2 with TypeId=13
	Description []byte
	// Field 3 with TypeId=0
	DaoAccountId [32]byte
	// Field 4 with TypeId=0
	Creator [32]byte
	// Field 5 with TypeId=208
	Status Status1
}

// Tuple type generated from metadata id 213
type TupleOfUint64U128 struct {
	Elem0 uint64
	Elem1 types.U128
}

// Generated WeteeProjectTaskStatus with id=214
type TaskStatus struct {
	IsToDo       bool
	IsInProgress bool
	IsInReview   bool
	IsDone       bool
}

func (ty TaskStatus) Encode(encoder scale.Encoder) (err error) {
	if ty.IsToDo {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsInProgress {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsInReview {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsDone {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *TaskStatus) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsToDo = true
		return
	case 1:
		ty.IsInProgress = true
		return
	case 2:
		ty.IsInReview = true
		return
	case 3:
		ty.IsDone = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *TaskStatus) Variant() (uint8, error) {
	if ty.IsToDo {
		return 0, nil
	}
	if ty.IsInProgress {
		return 1, nil
	}
	if ty.IsInReview {
		return 2, nil
	}
	if ty.IsDone {
		return 3, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty TaskStatus) MarshalJSON() ([]byte, error) {
	if ty.IsToDo {
		return json.Marshal("TaskStatus::ToDo")
	}
	if ty.IsInProgress {
		return json.Marshal("TaskStatus::InProgress")
	}
	if ty.IsInReview {
		return json.Marshal("TaskStatus::InReview")
	}
	if ty.IsDone {
		return json.Marshal("TaskStatus::Done")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated wetee_project_TaskInfo with id={{false [211]}}
type TaskInfo struct {
	// Field 0 with TypeId=4
	Id uint64
	// Field 1 with TypeId=13
	Name []byte
	// Field 2 with TypeId=13
	Description []byte
	// Field 3 with TypeId=85
	Point uint16
	// Field 4 with TypeId=2
	Priority byte
	// Field 5 with TypeId=4
	ProjectId uint64
	// Field 6 with TypeId=0
	Creator [32]byte
	// Field 7 with TypeId=212
	Rewards []TupleOfUint64U128
	// Field 8 with TypeId=2
	MaxAssignee byte
	// Field 9 with TypeId=127
	Assignees [][32]byte
	// Field 10 with TypeId=127
	Reviewers [][32]byte
	// Field 11 with TypeId=13
	Skills []byte
	// Field 12 with TypeId=214
	Status TaskStatus
}

// Generated wetee_project_ReviewRecord with id={{false [218]}}
type ReviewRecord struct {
	// Field 0 with TypeId=0
	Who [32]byte
	// Field 1 with TypeId=13
	Meta []byte
	// Field 2 with TypeId=145
	Option ReviewOpinion
}

// Generated wetee_project_Tally with id={{false [219]}}
type Tally struct {
	// Field 0 with TypeId=8
	Yes uint32
	// Field 1 with TypeId=8
	No uint32
}

// Generated wetee_project_ReviewStatus with id={{false [216]}}
type ReviewStatus struct {
	// Field 0 with TypeId=217
	Records []ReviewRecord
	// Field 1 with TypeId=219
	Tally Tally
}

// Generated wetee_gov_PreProp with id={{false [223]}}
type PreProp struct {
	// Field 0 with TypeId=8
	Id uint32
	// Field 1 with TypeId=12
	Hash [32]byte
	// Field 2 with TypeId=132
	Call RuntimeCall
	// Field 3 with TypeId=147
	MemberData MemberData
	// Field 4 with TypeId=0
	Creater [32]byte
	// Field 5 with TypeId=8
	PeriodIndex uint32
	// Field 6 with TypeId=4
	Start uint64
}

// Tuple type generated from metadata id 224
type TupleOfByteArray32SliceU128 struct {
	Elem0 [][32]byte
	Elem1 types.U128
}

// Generated wetee_gov_Tally with id={{false [226]}}
type Tally1 struct {
	// Field 0 with TypeId=6
	Yes types.U128
	// Field 1 with TypeId=6
	No types.U128
}

// Generated WeteeGovPropStatus with id=227
type PropStatus struct {
	IsOngoing  bool
	IsApproved bool
	IsRejected bool
}

func (ty PropStatus) Encode(encoder scale.Encoder) (err error) {
	if ty.IsOngoing {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsApproved {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsRejected {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *PropStatus) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsOngoing = true
		return
	case 1:
		ty.IsApproved = true
		return
	case 2:
		ty.IsRejected = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *PropStatus) Variant() (uint8, error) {
	if ty.IsOngoing {
		return 0, nil
	}
	if ty.IsApproved {
		return 1, nil
	}
	if ty.IsRejected {
		return 2, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty PropStatus) MarshalJSON() ([]byte, error) {
	if ty.IsOngoing {
		return json.Marshal("PropStatus::Ongoing")
	}
	if ty.IsApproved {
		return json.Marshal("PropStatus::Approved")
	}
	if ty.IsRejected {
		return json.Marshal("PropStatus::Rejected")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated wetee_gov_Prop with id={{false [225]}}
type Prop struct {
	// Field 0 with TypeId=8
	Id uint32
	// Field 1 with TypeId=132
	Proposal RuntimeCall
	// Field 2 with TypeId=4
	Start uint64
	// Field 3 with TypeId=8
	PeriodIndex uint32
	// Field 4 with TypeId=226
	Tally Tally1
	// Field 5 with TypeId=147
	MemberData MemberData
	// Field 6 with TypeId=227
	Status PropStatus
}

// Tuple type generated from metadata id 229
type TupleOfU128Uint64 struct {
	Elem0 types.U128
	Elem1 uint64
}

// Generated wetee_gov_VoteInfo with id={{false [231]}}
type VoteInfo struct {
	// Field 0 with TypeId=4
	DaoId uint64
	// Field 1 with TypeId=56
	Pledge Pledge
	// Field 2 with TypeId=148
	Opinion Opinion
	// Field 3 with TypeId=6
	VoteWeight types.U128
	// Field 4 with TypeId=4
	UnlockBlock uint64
	// Field 5 with TypeId=8
	PropIndex uint32
}

// Generated wetee_app_TeeApp with id={{false [234]}}
type TeeApp struct {
	// Field 0 with TypeId=4
	Id uint64
	// Field 1 with TypeId=0
	Creator [32]byte
	// Field 2 with TypeId=4
	StartBlock uint64
	// Field 3 with TypeId=13
	Name []byte
	// Field 4 with TypeId=13
	Image []byte
	// Field 5 with TypeId=153
	Port []uint32
	// Field 6 with TypeId=2
	Status byte
	// Field 7 with TypeId=165
	Cr Cr
	// Field 8 with TypeId=6
	Deposit types.U128
	// Field 9 with TypeId=2
	Level byte
}

// Generated wetee_app_Price with id={{false [235]}}
type Price struct {
	// Field 0 with TypeId=85
	CpuPer uint16
	// Field 1 with TypeId=85
	MemoryPer uint16
	// Field 2 with TypeId=85
	DiskPer uint16
}

// Tuple type generated from metadata id 236
type TupleOfUint64Uint16 struct {
	Elem0 uint64
	Elem1 uint16
}

// Generated wetee_primitives_types_AppSetting with id={{false [237]}}
type AppSetting struct {
	// Field 0 with TypeId=13
	K []byte
	// Field 1 with TypeId=13
	V []byte
}

// Generated wetee_task_TeeTask with id={{false [239]}}
type TeeTask struct {
	// Field 0 with TypeId=4
	Id uint64
	// Field 1 with TypeId=0
	Creator [32]byte
	// Field 2 with TypeId=4
	StartBlock uint64
	// Field 3 with TypeId=13
	Name []byte
	// Field 4 with TypeId=13
	Image []byte
	// Field 5 with TypeId=153
	Port []uint32
	// Field 6 with TypeId=2
	Status byte
	// Field 7 with TypeId=165
	Cr Cr
	// Field 8 with TypeId=6
	Deposit types.U128
	// Field 9 with TypeId=2
	Level byte
}

// Generated wetee_task_Price with id={{false [240]}}
type Price1 struct {
	// Field 0 with TypeId=85
	CpuPerBlock uint16
	// Field 1 with TypeId=85
	MemoryPerBlock uint16
	// Field 2 with TypeId=85
	DiskPerBlock uint16
}

// Generated wetee_worker_K8sCluster with id={{false [242]}}
type K8sCluster struct {
	// Field 0 with TypeId=4
	Id uint64
	// Field 1 with TypeId=0
	Account [32]byte
	// Field 2 with TypeId=4
	StartBlock uint64
	// Field 3 with TypeId=96
	StopBlock OptionTUint64
	// Field 4 with TypeId=96
	TerminalBlock OptionTUint64
	// Field 5 with TypeId=13
	Name []byte
	// Field 6 with TypeId=159
	Ip []Ip
	// Field 7 with TypeId=8
	Port uint32
	// Field 8 with TypeId=2
	Status byte
}

// Tuple type generated from metadata id 243
type TupleOfCrCr struct {
	Elem0 Cr
	Elem1 Cr
}

// Tuple type generated from metadata id 244
type TupleOfByteByte struct {
	Elem0 byte
	Elem1 byte
}

// Generated wetee_worker_DepositPrice with id={{false [245]}}
type DepositPrice struct {
	// Field 0 with TypeId=85
	CpuPer uint16
	// Field 1 with TypeId=85
	MemoryPer uint16
	// Field 2 with TypeId=85
	DiskPer uint16
}

// Generated wetee_worker_Deposit with id={{false [246]}}
type Deposit struct {
	// Field 0 with TypeId=6
	Deposit types.U128
	// Field 1 with TypeId=85
	Cpu uint16
	// Field 2 with TypeId=85
	Mem uint16
	// Field 3 with TypeId=85
	Disk uint16
}

// Tuple type generated from metadata id 247
type TupleOfUint64WorkId struct {
	Elem0 uint64
	Elem1 WorkId
}

// Generated wetee_worker_ContractState with id={{false [248]}}
type ContractState struct {
	// Field 0 with TypeId=4
	BlockNumber uint64
	// Field 1 with TypeId=6
	Minted types.U128
	// Field 2 with TypeId=6
	Withdrawal types.U128
}

// Tuple type generated from metadata id 249
type TupleOfWorkIdUint64 struct {
	Elem0 WorkId
	Elem1 uint64
}

func (c *RuntimeCall) AsCall() (ret types.Call, err error) {
	var cb []byte
	cb, err = codec.Encode(c)
	if err != nil {
		return
	}
	ret = types.Call{
		CallIndex: types.CallIndex{
			SectionIndex: cb[0],
			MethodIndex:  cb[1],
		},
		Args: cb[2:],
	}
	return
}
