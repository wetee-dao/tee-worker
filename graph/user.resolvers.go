package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.42

import (
	"context"

	"github.com/vektah/gqlparser/v2/gqlerror"
	"wetee.app/worker/graph/model"
	"wetee.app/worker/internal/store"
)

// LoginAsRoot is the resolver for the login_as_root field.
func (r *mutationResolver) LoginAsRoot(ctx context.Context, input model.LoginContent, signature string) (string, error) {
	rootUser, _ := store.GetRootUser()
	if rootUser == "" {
		// 设置根用户
		err := store.SetRootUser(input.Address)
		if err != nil {
			return "", gqlerror.Errorf("Set root user error: " + err.Error())
		}
	} else {
		if rootUser != input.Address {
			return "", gqlerror.Errorf("Root user already exists")
		}
	}

	return login(input, signature)
}

// Login is the resolver for the login field.
func (r *mutationResolver) Login(ctx context.Context, input model.LoginContent, signature string) (string, error) {
	return login(input, signature)
}
