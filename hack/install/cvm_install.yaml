apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cvm-install
  namespace: kube-system
  generation: 1
spec:
  selector:
    matchLabels:
      k8s-app: cvm-install
  template:
    metadata:
      labels:
        k8s-app: cvm-install
    spec:
      hostPID: true
      nodeSelector:
        TEE: "SGX"
      containers:
        - image: wetee/cvm-deploy:x86_64-1cba83dba1fcc3f9e245761898d62e2a84fe1f0d
          imagePullPolicy: IfNotPresent
          name: cvm-install
          command:
            [
              "/bin/sh",
              "/opt/confidential-containers-pre-install-artifacts/scripts/deploy.sh",
              "install",
            ]
          lifecycle:
            preStop:
              exec:
                command:
                  [
                    "/bin/sh",
                    "/opt/confidential-containers-pre-install-artifacts/scripts/deploy.sh",
                    "uninstall",
                  ]
          securityContext:
            privileged: true
            runAsUser: 0
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: "CONFIGURE_CC"
              value: "yes"
            - name: "DEBUG"
              value: "false"
          volumeMounts:
            - mountPath: /opt/confidential-containers/
              name: confidential-containers-artifacts
            - mountPath: /etc/systemd/system/
              name: etc-systemd-system
            - mountPath: /etc/containerd/
              name: containerd-conf
            - mountPath: /usr/local/bin/
              name: local-bin
            - mountPath: /var/lib/containerd-nydus/
              name: containerd-nydus
      volumes:
        - hostPath:
            path: /opt/confidential-containers/
            type: DirectoryOrCreate
          name: confidential-containers-artifacts
        - hostPath:
            path: /etc/systemd/system/
            type: ""
          name: etc-systemd-system
        - hostPath:
            path: /etc/containerd/
            type: ""
          name: containerd-conf
        - hostPath:
            path: /usr/local/bin/
            type: ""
          name: local-bin
        - hostPath:
            path: /var/lib/containerd-nydus/
            type: ""
          name: containerd-nydus
